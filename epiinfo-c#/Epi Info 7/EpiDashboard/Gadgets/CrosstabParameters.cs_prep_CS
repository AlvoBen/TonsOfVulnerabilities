using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows.Media;
using Epi;
using Epi.Fields;

namespace EpiDashboard
{
    public class CrosstabParameters : FrequencyParametersBase
    {
        public bool TreatOutcomeAsContinuous { get {return _TreatOutcomeAsContinuous; } set{ _TreatOutcomeAsContinuous=value; } } bool _TreatOutcomeAsContinuous;
        public bool StrataSummaryOnly { get {return _StrataSummaryOnly; } set{ _StrataSummaryOnly=value; } } bool _StrataSummaryOnly;
        public bool SmartTable { get {return _SmartTable; } set{ _SmartTable=value; } } bool _SmartTable;
        public bool ShowPercents { get {return _ShowPercents; } set{ _ShowPercents=value; } } bool _ShowPercents;
        public List YesValues { get {return _YesValues; } set{ _YesValues=value; } } List _YesValues;
        public List NoValues { get {return _NoValues; } set{ _NoValues=value; } } List _NoValues;
        public bool HorizontalDisplayMode { get {return _HorizontalDisplayMode; } set{ _HorizontalDisplayMode=value; } } bool _HorizontalDisplayMode;
        public string MaxColumnNameLength { get {return _MaxColumnNameLength; } set{ _MaxColumnNameLength=value; } } string _MaxColumnNameLength;
        public bool ConditionalShading { get {return _ConditionalShading; } set{ _ConditionalShading=value; } } bool _ConditionalShading;
        public SolidColorBrush LoColorFill { get {return _LoColorFill; } set{ _LoColorFill=value; } } SolidColorBrush _LoColorFill;
        public SolidColorBrush HiColorFill { get {return _HiColorFill; } set{ _HiColorFill=value; } } SolidColorBrush _HiColorFill;
        public int BreakType { get {return _BreakType; } set{ _BreakType=value; } } int _BreakType;
        public string Break1 { get {return _Break1; } set{ _Break1=value; } } string _Break1;
        public string Break2 { get {return _Break2; } set{ _Break2=value; } } string _Break2;
        public string Break3 { get {return _Break3; } set{ _Break3=value; } } string _Break3;
        public string Break4 { get {return _Break4; } set{ _Break4=value; } } string _Break4;
        public string Break5 { get {return _Break5; } set{ _Break5=value; } } string _Break5;





        public CrosstabParameters()
            : base()
        {
            GadgetTitle = "Crosstabulation (MxN, 2x2)";
            TreatOutcomeAsContinuous = false;
            StrataSummaryOnly = false;
            SmartTable = true;
            ShowPercents = true;
            YesValues = new List();
            NoValues = new List();
            HorizontalDisplayMode = true;
            MaxColumnNameLength = "24";
            ConditionalShading = false;
            LoColorFill = new SolidColorBrush(Colors.White);
            HiColorFill = new SolidColorBrush(Colors.Tomato);
            BreakType = 0;
            Break1 = "0";
            Break2 = "20";
            Break3 = "40";
            Break4 = "60";
            Break5 = "80";
        }




        public CrosstabParameters(CrosstabParameters parameters)
            : base(parameters)
        {
            TreatOutcomeAsContinuous = parameters.TreatOutcomeAsContinuous;
            StrataSummaryOnly = parameters.StrataSummaryOnly;
            SmartTable = parameters.SmartTable;
            ShowPercents = parameters.ShowPercents;
            YesValues = new List();
            foreach (string YVal in parameters.YesValues)
            {
                YesValues.Add(YVal);
            }
            NoValues = new List();
            foreach (string NVal in parameters.NoValues)
            {
                NoValues.Add(NVal);
            }
            HorizontalDisplayMode = parameters.HorizontalDisplayMode;
            MaxColumnNameLength = parameters.MaxColumnNameLength;
            ConditionalShading = parameters.ConditionalShading;
            LoColorFill = parameters.LoColorFill;
            HiColorFill = parameters.HiColorFill;
            BreakType = parameters.BreakType;
            Break1 = parameters.Break1;
            Break2 = parameters.Break2;
            Break3 = parameters.Break3;
            Break4 = parameters.Break4;
            Break5 = parameters.Break5;
        }
    }
}

 