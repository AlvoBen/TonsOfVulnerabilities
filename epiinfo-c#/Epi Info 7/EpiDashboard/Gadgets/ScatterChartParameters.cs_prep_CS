using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows.Controls;
using ComponentArt.Win.DataVisualization;
using ComponentArt.Win.DataVisualization.Common;
using ComponentArt.Win.DataVisualization.Charting;


namespace EpiDashboard
{
    public class ScatterChartParameters : ScatterChartParametersBase
    {

        //Properties
        public int MarkerType { get {return _MarkerType; } set{ _MarkerType=value; } } int _MarkerType;

        // 




        public ScatterChartParameters()
            : base()
        {
            ColumnNames = new List();


            GadgetTitle = "Scatter Chart";
            GadgetDescription = String.Empty;
            Width = 800;
            Height = 500;

            Palette = 12;
            MarkerType = 0;

            YAxisLabel = "Count";
            XAxisLabelType = 0;
            XAxisLabel = String.Empty;
            XAxisAngle = 0;
            ChartTitle = String.Empty;
            ChartSubTitle = String.Empty;

            ShowLegend = false;
            ShowLegendBorder = false;
            ShowLegendVarNames = false;
            LegendFontSize = 12;
            LegendDock = ComponentArt.Win.DataVisualization.Charting.Dock.Right;
        }




        public ScatterChartParameters(ScatterChartParameters parameters)
            : base (parameters)
        {
            ColumnNames = parameters.ColumnNames;
            InputVariableList = parameters.InputVariableList;
            CustomFilter = parameters.CustomFilter;
            CustomSortColumnName = parameters.CustomSortColumnName;



            ChartWidth = parameters.ChartWidth;
            ChartHeight = parameters.ChartHeight;



            Palette = parameters.Palette;
            MarkerType = parameters.MarkerType;

            YAxisLabel = parameters.YAxisLabel;
            XAxisLabelType = parameters.XAxisLabelType;
            XAxisLabel = parameters.XAxisLabel;
            XAxisAngle = parameters.XAxisAngle;
            ChartTitle = parameters.ChartTitle;
            ChartSubTitle = parameters.ChartSubTitle;

            ShowLegend = parameters.ShowLegend;
            ShowLegendBorder = parameters.ShowLegendBorder;
            ShowLegendVarNames = parameters.ShowLegendVarNames;

            LegendDock = parameters.LegendDock;
        }
    }
}

 