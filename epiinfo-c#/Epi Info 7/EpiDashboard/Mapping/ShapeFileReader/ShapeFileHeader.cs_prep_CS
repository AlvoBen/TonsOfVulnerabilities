using System;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Shapes;
using System.Text;

namespace EpiDashboard.Mapping.ShapeFileReader
{





    public class ShapeFileHeader
    {
        //Private fields
        private int fileCode;
        private int fileLength;
        private int version;
        private int shapeType;


        private double xMin;
        private double yMin;
        private double xMax;
        private double yMax;
        //Private fields

        //Constructor



        public ShapeFileHeader()
        {
        }
        //Constructor

        //Properties



        public static int Length
        {
            get
            {
                return 100;
            }
        }





        public int FileCode
        {
            get
            {
                return this.fileCode;
            }
            set
            {
                this.fileCode = value;
            }
        }





        public int FileLength
        {
            get
            {
                return this.fileLength;
            }
            set
            {
                this.fileLength = value;
            }
        }




        public int Version
        {
            get
            {
                return this.version;
            }
            set
            {
                this.version = value;
            }
        }





        public int ShapeType
        {
            get
            {
                return this.shapeType;
            }
            set
            {
                this.shapeType = value;
            }
        }





        public double XMin
        {
            get
            {
                return this.xMin;
            }
            set
            {
                this.xMin = value;
            }
        }





        public double YMin
        {
            get
            {
                return this.yMin;
            }
            set
            {
                this.yMin = value;
            }
        }





        public double XMax
        {
            get
            {
                return this.xMax;
            }
            set
            {
                this.xMax = value;
            }
        }





        public double YMax
        {
            get
            {
                return this.yMax;
            }
            set
            {
                this.yMax = value;
            }
        }
        //Properties

        //Public methods




        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendFormat( "ShapeFileHeader: FileCode={0}, FileLength={1}, Version={2}, ShapeType={3}",
                this.fileCode, this.fileLength, this.version, this.shapeType );

            return sb.ToString();
        }
        //Public methods
    }
}

 