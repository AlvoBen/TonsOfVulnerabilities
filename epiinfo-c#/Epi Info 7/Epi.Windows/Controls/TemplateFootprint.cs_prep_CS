//Namespaces

using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;
using System.Drawing.Drawing2D;

//

namespace Epi.Windows.Controls
{
 public class TemplateFootprint : System.Windows.Forms.UserControl, IDragable
 {
  //Private Members

        private int x;
        private int y;
        private bool hasMoved = false;
        private bool isMouseDown = false;

  private System.ComponentModel.Container components = null;
  private Rectangle[] SmallRect = new Rectangle[8];
        private Rectangle FenceRect = new Rectangle();
  private Size Square = new Size(6,6);
  private Graphics g;
  //

  //Private Enums
  //

        //Event Handlers






        private void TemplateFootprint_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            isMouseDown = true;
            x = e.X;
            y = e.Y;
        }






        private void TemplateFootprint_MouseMove(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            if (isMouseDown)
            {
                DataObject data = new DataObject("DragControl", this);
                this.DoDragDrop(data, DragDropEffects.Move);
                isMouseDown = false;
                this.hasMoved = true;
                this.Invalidate();
                this.Refresh();
            }

            this.Invalidate();
            this.Refresh();
        }






        private void TemplateFootprint_MouseLeave(object sender, System.EventArgs e)
        {
            isMouseDown = false;
        }






        private void TemplateFootprint_DragOver(object sender, System.Windows.Forms.DragEventArgs e)
        {
            e.Effect = DragDropEffects.Move;
        }

        //

  //Component Designer generated code




  protected override void Dispose( bool disposing )
  {
   if( disposing )
   {
    if(components != null)
    {
     components.Dispose();
    }
   }
   base.Dispose( disposing );
  }





  private void InitializeComponent()
  {
            this.SuspendLayout();
            this.BackColor = System.Drawing.SystemColors.HotTrack;
            this.Name = "TemplateFootprint";
            this.Paint += new System.Windows.Forms.PaintEventHandler(this.ControlTracker_Paint);

            this.DragOver += new System.Windows.Forms.DragEventHandler(this.TemplateFootprint_DragOver);
            this.MouseMove += new System.Windows.Forms.MouseEventHandler(this.TemplateFootprint_MouseMove);
            this.MouseLeave += new System.EventHandler(this.TemplateFootprint_MouseLeave);
            this.MouseDown += new System.Windows.Forms.MouseEventHandler(this.TemplateFootprint_MouseDown);

            this.ResumeLayout(false);
  }
  //

  //Constructors

  public TemplateFootprint(Rectangle rectangle)
  {
            InitializeComponent();
            Create(rectangle);
  }

        public TemplateFootprint()
  {
   InitializeComponent();
  }

  //

        //Public Properties




        public int XOffset
        {
            get { return this.x; }
            set { this.x = value; }
        }




        public int YOffset
        {
            get { return this.y; }
            set { this.y = value; }
        }




        public bool HasMoved
        {
            get { return hasMoved; }
            set { hasMoved = value; }
        }
  //

  //Public Methods




        public void Draw()
  {
  }

  //

  //Private Methods




        private void Create(Rectangle rectangle)
  {
            this.Bounds = rectangle;


            this.Region = new Region(BuildFrame());


            g = this.CreateGraphics();
        }

        public void SizeTo(Rectangle rectangle)
        {
            this.Bounds = rectangle;


            this.Region = new Region(BuildFrame());


            g = this.CreateGraphics();
        }






  private GraphicsPath BuildFrame()
  {











            GraphicsPath path = new GraphicsPath();

            int margin = 1;
            Rectangle rec = new Rectangle(0, 0, Size.Width, Size.Height);
            path.AddRectangle(rec);

            int voidlWidth = this.Size.Width - (margin * 2);
            int voidHeight = this.Size.Height - (margin * 2);
            rec = new Rectangle(margin, margin, voidlWidth, voidHeight);
            path.AddRectangle(rec);

            return path;
  }

  //

  //Event Handlers
  private void ControlTracker_Paint(object sender, System.Windows.Forms.PaintEventArgs e)
  {
   Draw();
  }
  //
 }
}

 