//Namespaces

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;

using mshtml;
using System.Net;

// 

namespace Epi.Windows.Analysis.Dialogs
{
    public         class HelpDialog : CommandDesignDialog
    {
        //Private Attributes
        private bool showSaveOnly = false;
        //Private Attributes

        //Constructors



        [Obsolete("Use of default constructor not allowed", true)]
        public HelpDialog()
        {
            InitializeComponent();
        }




        public HelpDialog(Epi.Windows.Analysis.Forms.AnalysisMainForm frm)
            : base(frm)
        {
            InitializeComponent();
            Construct();
        }






        public HelpDialog(Epi.Windows.Analysis.Forms.AnalysisMainForm frm, bool showSave)
            : base(frm)
        {
            InitializeComponent();
            if (showSave)
            {
                showSaveOnly = true;
                this.btnSaveOnly.Click += new System.EventHandler(this.btnSaveOnly_Click);
                Construct();
            }
        }
        //Constructors

        //Public Methods




        public override void CheckForInputSufficiency()
        {
            bool inputValid = ValidateInput();
            btnOK.Enabled = inputValid;
            btnSaveOnly.Enabled = inputValid;
        }
        //Public Methods

        //Protected methods




        protected override bool ValidateInput()
        {
            base.ValidateInput();

            if (string.IsNullOrEmpty(this.txtFilename.Text))
            {
                ErrorMessages.Add(SharedStrings.NO_FILENAME);
            }
            return (ErrorMessages.Count == 0);
        }




        protected override void GenerateCommand()
        {
            StringBuilder command = new StringBuilder();
            command.Append(CommandNames.HELP).Append(StringLiterals.SPACE);
            command.Append(StringLiterals.SINGLEQUOTES).Append(txtFilename.Text.Trim()).Append(StringLiterals.SINGLEQUOTES);
            command.Append(StringLiterals.SPACE);
            command.Append(StringLiterals.DOUBLEQUOTES).Append(this.cmbAnchor.Text.Trim()).Append(StringLiterals.DOUBLEQUOTES);
            CommandText = command.ToString();
        }

        //Protected methods

        //Private Methods



        private void RepositionButtons()
        {
            int x = this.btnClear.Left;
            int y = btnClear.Top;
            btnClear.Location = new Point(btnCancel.Left, y);
            btnCancel.Location = new Point(btnOK.Left, y);
            btnOK.Location = new Point(btnSaveOnly.Left, y);
            btnSaveOnly.Location = new Point(x, y);
        }




        private void Construct()
        {
            this.btnOK.Click += new System.EventHandler(this.btnOK_Click);
        }





        private void LoadAnchors(string fileName)
        {
            WebClient client = new WebClient();
            byte[] data = client.DownloadData(fileName);
            mshtml.HTMLDocumentClass ms = new mshtml.HTMLDocumentClass();
            string strHTML = Encoding.ASCII.GetString(data);
            mshtml.IHTMLDocument2 mydoc = (mshtml.IHTMLDocument2)ms;

            mydoc.write(strHTML);

            mshtml.IHTMLElementCollection ec = (mshtml.IHTMLElementCollection)mydoc.all.tags("a");
            if (ec != null)
            {
                for (int i = 0; i < ec.length - 1; i++)
                {
                    mshtml.HTMLAnchorElementClass anchor;
                    anchor = (mshtml.HTMLAnchorElementClass)ec.item(i, 0);

                    if (!string.IsNullOrEmpty(anchor.name))
                    {
                        cmbAnchor.Items.Add(anchor.name);
                    }
                }
            }
        }

        //Private Methods

        //Event Handlers






        private void HelpDialog_Load(object sender, EventArgs e)
        {
            btnSaveOnly.Visible = showSaveOnly;
            if (showSaveOnly)
            {
                RepositionButtons();
            }
        }






        private void txtFilename_TextChanged(object sender, EventArgs e)
        {
            CheckForInputSufficiency();
        }






        private void btnBrowse_Click(object sender, EventArgs e)
        {
            OpenFileDialog dlg = new OpenFileDialog();
            dlg.Filter = "HTML files (*.htm)|*.htm*|CHM Help Files (*.chm)|*.chm";
            if (dlg.ShowDialog(this) == DialogResult.OK)
            {
                this.txtFilename.Text = dlg.FileName;
                LoadAnchors(this.txtFilename.Text);
            }
            dlg.Dispose();
        }

        //Event Handlers
    }
}


 