using System;
using System.Data;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;
using Epi;
using Epi.Windows;
using Epi.Analysis;
using Epi.Windows.Dialogs;
using Epi.Windows.Analysis;

namespace Epi.Windows.Analysis.Dialogs
{



    public         class ListDialog : CommandDesignDialog
 {
  //Constructor




        [Obsolete("Use of default constructor not allowed", true)]
  public ListDialog()
        {
            InitializeComponent();
            Construct();
        }





        public ListDialog(Epi.Windows.Analysis.Forms.AnalysisMainForm frm)
            : base(frm)
        {
            InitializeComponent();
            Construct();
        }

        private void Construct()
        {

            this.rdbAllowUpdates.Enabled = false;

            if (!this.DesignMode)           
            {
                this.btnSaveOnly.Click += new System.EventHandler(this.btnSaveOnly_Click);
                this.btnOK.Click += new System.EventHandler(this.btnOK_Click);
                this.cmbVar.Validating += new CancelEventHandler(cmbVar_Validating);
                this.cmbVar.Validated += new EventHandler(cmbVar_Validated);
                this.cmbVar.TextChanged += new EventHandler(cmbVar_TextChanged);
            }
        }

  //Constructors

  //Event Handlers





  private void btnClear_Click(object sender, System.EventArgs e)
  {
   lbxVariables.Items.Clear();
   rdbWeb.Checked = true;
   cbxAllExcept.Checked = false;
   cmbVar.SelectedIndex = 0;
  }






  private void ListDialog_Load(object sender, System.EventArgs e)
  {
   LoadVariables();

  }





  private void cmbVar_SelectedIndexChanged(object sender, System.EventArgs e)
  {
            this.Validate();
  }

        private void lbxVariables_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            if (lbxVariables.SelectedIndex != -1)
            {
                cmbVar.Items.Add(lbxVariables.Items[lbxVariables.SelectedIndex].ToString());
                lbxVariables.Items.RemoveAt(lbxVariables.SelectedIndex);
                if (lbxVariables.Items.Count < 1 && cmbVar.Text!=StringLiterals.STAR)
                {
                    btnOK.Enabled = false;
                    btnSaveOnly.Enabled = false;
                }
                else if (lbxVariables.Items.Count < 1 && cmbVar.Text == StringLiterals.STAR)
                {
                    btnOK.Enabled = true;
                    btnSaveOnly.Enabled = true;
                }
            }
        }

        private void cmbVar_Validated(object sender, EventArgs e)
        {
            if (cmbVar.SelectedItem != null && cmbVar.Text != StringLiterals.STAR)
            {
                lbxVariables.Items.Add(cmbVar.SelectedItem);
                cmbVar.Items.Remove(cmbVar.SelectedItem);
                if (lbxVariables.Items.Count > 0)
                {
                    btnOK.Enabled = true;
                    btnSaveOnly.Enabled = true;
                }
            }
        }

        private void cmbVar_Validating(object sender, CancelEventArgs e)
        {
            if (cmbVar.SelectedItem == null)
            {
                if (!String.IsNullOrEmpty(cmbVar.Text))
                {
                    e.Cancel = true;
                    cmbVar.Text = String.Empty;
                }
            }
        }

        private void cmbVar_TextChanged(object sender, EventArgs e)
        {
            if (cmbVar.Text == StringLiterals.STAR)
            {
                btnOK.Enabled = true;
                btnSaveOnly.Enabled = true;
            }
            else if (cmbVar.Text != StringLiterals.STAR && lbxVariables.Items.Count < 1)
            {
                btnOK.Enabled = false;
                btnSaveOnly.Enabled = false;
            }
        }






        protected override void btnHelp_Click(object sender, System.EventArgs e)
        {
            System.Diagnostics.Process.Start("http://wwwn.cdc.gov/epiinfo/user-guide/command-reference/analysis-commands-list.html");
        }

        //

  //Protected Methods



  protected override void GenerateCommand()
  {
   WordBuilder command = new WordBuilder();
   command.Append(CommandNames.LIST);
   if (lbxVariables.Items.Count > 0)
   {
    if (cbxAllExcept.Checked)
    {
     command.Append(StringLiterals.STAR);
                    command.Append(StringLiterals.SPACE);
     command.Append(CommandNames.EXCEPT);
    }

    foreach (string item in lbxVariables.Items)
    {
                    command.Append(FieldNameNeedsBrackets(item) ? Util.InsertInSquareBrackets(item) : item);
    }
   }
   else
   {
    command.Append(cmbVar.Text);
   }
            if (WinUtil.GetSelectedRadioButton(gbxDisplayMode) == rdbGrid)
   {
    command.Append(CommandNames.GRIDTABLE);
   }
            else if (WinUtil.GetSelectedRadioButton(gbxDisplayMode) == rdbAllowUpdates)
   {
    command.Append(CommandNames.UPDATE);
   }

   CommandText = command.ToString();
  }
  //

  //Private Methods
  private void LoadVariables()

  {
            VariableType scopeWord = VariableType.DataSource | VariableType.DataSourceRedefined |
                                     VariableType.Standard | VariableType.Global;
            FillVariableCombo(cmbVar, scopeWord);
            cmbVar.Items.Insert(0, "*");
   cmbVar.SelectedIndex = 0;

   this.cmbVar.SelectedIndexChanged += new System.EventHandler(this.cmbVar_SelectedIndexChanged);

  }
  //Private Methods
 }
}

 