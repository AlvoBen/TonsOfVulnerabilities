using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using Epi.Analysis;
using Epi;
using Epi.Windows;
using Epi.Windows.Dialogs;
using Epi.Windows.Analysis;

namespace Epi.Windows.Analysis.Dialogs
{







    public         class RouteoutDialog : CommandDesignDialog
 {
  //Constructor




        [Obsolete("Use of default constructor not allowed", true)]
  public RouteoutDialog()
  {
   InitializeComponent();
  }





        public RouteoutDialog(Epi.Windows.Analysis.Forms.AnalysisMainForm frm)
            : base(frm)
  {
   InitializeComponent();
            Construct();
  }
  //Constructors

  //Protected Methods




  protected override bool ValidateInput()
  {
   base.ValidateInput ();
            txtOutputFile.Text = txtOutputFile.Text.Trim();
            if( txtOutputFile.Text.IndexOfAny(System.IO.Path.GetInvalidPathChars()) >= 0)
   {
    ErrorMessages.Add(SharedStrings.FILE_NOT_VALID);
   }
   return (ErrorMessages.Count == 0);
  }



  protected override void GenerateCommand()
  {
   StringBuilder sb = new StringBuilder();
   sb.Append(CommandNames.ROUTEOUT).Append(StringLiterals.SPACE);
   sb.Append(Epi.Util.InsertInDoubleQuotes(txtOutputFile.Text.Trim()));
            if (cbxReplaceFile.Checked)
            {
                sb.Append(StringLiterals.SPACE).Append(CommandNames.REPLACE);
            }
            else
            {
                sb.Append(StringLiterals.SPACE).Append(CommandNames.APPEND);
            }

   CommandText = sb.ToString();
  }



  public override void CheckForInputSufficiency()
  {
   bool inputValid = ValidateInput();
   btnOK.Enabled = inputValid;
   btnSaveOnly.Enabled = inputValid;
  }
  //

  //Event Handlers





  private void btnClear_Click(object sender, System.EventArgs e)
  {
   txtOutputFile.Text = string.Empty;
            cbxReplaceFile.Checked = false;
            CheckForInputSufficiency();
  }





  private void txtOutputFile_Leave(object sender, System.EventArgs e)
  {
   CheckForInputSufficiency();
  }





        private void btnEllipse_Click(object sender, System.EventArgs e)
        {
            OpenFileDialog dialog = new OpenFileDialog();
            dialog.Filter = "HTML files|*.htm;*.html";
            dialog.Title = "RouteOut";
            dialog.CheckFileExists = false;
            dialog.CheckPathExists = true;
            if (dialog.ShowDialog() == DialogResult.OK)
            {
                txtOutputFile.Text = dialog.FileName;
            }
        }






        protected override void btnHelp_Click(object sender, System.EventArgs e)
        {
            System.Diagnostics.Process.Start("http://wwwn.cdc.gov/epiinfo/user-guide/command-reference/analysis-commands-routeout.html");
        }

  //

        //Private Methods

        private void Construct()
        {
            if (!this.DesignMode)
            {
                this.btnOK.Click += new System.EventHandler(this.btnOK_Click);
                this.btnSaveOnly.Click += new System.EventHandler(this.btnSaveOnly_Click);
            }
        }
        //Private Methods

    }
}


 