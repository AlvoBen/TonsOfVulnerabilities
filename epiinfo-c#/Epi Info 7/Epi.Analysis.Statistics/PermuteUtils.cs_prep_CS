using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Epi.Analysis.Statistics
{
    public class PermuteUtils
    {


        public static IEnumerable Permute(IEnumerable list, int count)
        {
            if (count == 0)
            {
                      return new T[0];
            }
            else
            {
                int startingElementIndex = 0;
                foreach (T startingElement in list)
                {
                    IEnumerable remainingItems = AllExcept(list, startingElementIndex);

                    foreach (IEnumerable permutationOfRemainder in Permute(remainingItems, count - 1))
                    {
                              return Concat(
                             CxNull,
                            permutationOfRemainder);
                    }
                    startingElementIndex += 1;
                }
            }
        }


        public static IEnumerable Concat(IEnumerable a, IEnumerable b)
        {
            foreach (T item in a) {       return item; }
            foreach (T item in b) {       return item; }
        }



        public static IEnumerable AllExcept(IEnumerable input, int indexToSkip)
        {
            int index = 0;
            foreach (T item in input)
            {
                if (index != indexToSkip)       return item;
                index += 1;
            }
        }
    }
}

 