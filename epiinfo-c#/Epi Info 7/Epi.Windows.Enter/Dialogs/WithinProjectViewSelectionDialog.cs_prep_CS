using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using Epi;
using Epi.Windows;
using Epi.Windows.Enter;

namespace Epi.Enter.Dialogs
{
    public         class WithinProjectViewSelectionDialog : Form
    {

        //Private Class Members
  private int viewId;
  private Project currentProject = null;
  private bool includeRelatedViews;
  //

  //Constructors

        public WithinProjectViewSelectionDialog()
        {
            InitializeComponent();
        }






        public WithinProjectViewSelectionDialog(MainForm frm, Project project)
  {
            InitializeComponent();
            currentProject = project;
   LoadProject();
        }
  //Constructors

  //Private Methods




  private void LoadViews()
  {
            try
            {
                if (currentProject.GetParentViewNames().Count == 0)
                {
                    currentProject = new Project();
                    return;
                }
                lbxViews.DataSource = currentProject.GetParentViewNames();
            }
            catch (ApplicationException)
            {
                MsgBox.ShowError("There was a problem loading the project \"" + currentProject.Name + "\". Please make sure the database for      project exists.");
            }
  }




  private void LoadProject()
  {
            if (currentProject != null)
            {
                LoadViews();
            }
  }

  //

  //Event Handlers






  private void btnOK_Click(object sender, System.EventArgs e)
  {
            string viewName = lbxViews.SelectedValue.ToString();
            View view = CurrentProject.Metadata.GetViewByFullName(":" + viewName );
            ViewId = view.Id;
            this.DialogResult = System.Windows.Forms.DialogResult.OK;
            this.Close();
  }

  //

  //Public Properties




  public bool IncludeRelatedViews
  {
   get
   {
    return (includeRelatedViews);
   }
   set
   {
    includeRelatedViews = value;
   }
  }




  public int ViewId
  {
   get
   {
    return (viewId);
   }
   set
   {
    viewId = value;
   }
  }




        public Project CurrentProject
        {
            get
            {
                return (currentProject);
            }
        }
  //

        private void lbxViews_SelectedIndexChanged(object sender, EventArgs e)
        {
            btnOk.Enabled = true;
            btnOk.Focus();
        }


    }
}

 