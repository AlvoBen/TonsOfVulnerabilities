using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Epi.Tools
{
    public class DetermineOS
    {
            public string getOSInfo()
            {

                OperatingSystem os = Environment.OSVersion;

                Version vs = os.Version;


                string operatingSystem = "";

                if (os.Platform == PlatformID.Win32Windows)
                {

                    switch (vs.Minor)
                    {
                        case 0:
                            operatingSystem = "95";
                            break;
                        case 10:
                            if (vs.Revision.ToString() == "2222A")
                                operatingSystem = "98SE";
                            else
                                operatingSystem = "98";
                            break;
                        case 90:
                            operatingSystem = "Me";
                            break;
                        default:
                            break;
                    }
                }
                else if (os.Platform == PlatformID.Win32NT)
                {
                    switch (vs.Major)
                    {
                        case 3:
                            operatingSystem = "NT 3.51";
                            break;
                        case 4:
                            operatingSystem = "NT 4.0";
                            break;
                        case 5:
                            if (vs.Minor == 0)
                                operatingSystem = "2000";
                            else
                                operatingSystem = "XP";
                            break;
                        case 6:
                            if (vs.Minor == 0)
                                operatingSystem = "Vista";
                            else
                                operatingSystem = "7";
                            break;
                        default:
                            break;
                    }
                }




                if (operatingSystem != "")
                {

                    operatingSystem = "Windows " + operatingSystem;

                    if (os.ServicePack != "")
                    {

                        operatingSystem += " " + os.ServicePack;
                    }

                    operatingSystem += " " + getOSArchitecture().ToString() + "-bit";
                }

                return operatingSystem;
            }

            public int getOSArchitecture()
            {
                string pa = Environment.GetEnvironmentVariable("PROCESSOR_ARCHITECTURE");
                return ((String.IsNullOrEmpty(pa) || String.Compare(pa, 0, "x86", 0, 3, true) == 0) ? 32 : 64);
            }
        }
}

 