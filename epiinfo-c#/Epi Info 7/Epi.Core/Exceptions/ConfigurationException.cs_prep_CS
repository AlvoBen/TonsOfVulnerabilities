using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Security.Permissions;
namespace Epi
{



    [Serializable]
    public class ConfigurationException : GeneralException
    {
        //Private Members
        private ConfigurationIssue issue;
        //

        //Constructors




        public ConfigurationException(ConfigurationIssue issue)
            : this(issue, string.Empty)
        {
        }






        public ConfigurationException(ConfigurationIssue issue, string message)
            : this(issue, message, null)
        {
        }








        public ConfigurationException(ConfigurationIssue issue, Exception innerException)
            : this(issue, innerException == null ? string.Empty : innerException.Message, innerException)
        {
        }









        public ConfigurationException(ConfigurationIssue issue, string message, Exception innerException)
            : base(message, innerException)
        {
            this.issue = issue;
        }






        protected ConfigurationException(SerializationInfo info, StreamingContext context)
            : base(info, context)
        {
        }
        //Constructors
        //Public Methods





        [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
        public override void GetObjectData(SerializationInfo info, StreamingContext context)
        {
            base.GetObjectData(info, context);
        }
        //Public Methods
        //Public Properties



        public ConfigurationIssue Issue
        {
            get { return issue; }
            set { issue = value; }
        }
        //Public Properties
        //Public Enums



        public enum ConfigurationIssue
        {



            HigherVersion,



            LowerVersion,



            ContentsInvalid,



            AccessDenied
        }
        //Public Enums
    }
}

 