using System;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Permissions;

namespace Epi
{



    [Serializable]
    public class VariableExistsException : GeneralException
    {
        //Private Members
        private IVariable variable = null;
        //Private Members

        //Public properties



        public IVariable Variable
        {
            get
            {
                return variable;
            }
        }




        public override string Message
        {
            get
            {
                return Util.CombineMessageParts(SharedStrings.DUPLICATE_VARIABLE_DEFINITION, variable.Name);
            }
        }

        //Public properties

        //Constructors



        public VariableExistsException()
            : this(null)
        {
        }



        public VariableExistsException(IVariable var)
        {
            this.variable = var;
        }






        public VariableExistsException(SerializationInfo info, StreamingContext context)
            : base(info, context)
        {
        }
        //Constructors

        //Public Methods





        [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter = true)]
        public override void GetObjectData(SerializationInfo info, StreamingContext context)
        {
            base.GetObjectData(info, context);
        }
        //Public Methods
    }
}
 