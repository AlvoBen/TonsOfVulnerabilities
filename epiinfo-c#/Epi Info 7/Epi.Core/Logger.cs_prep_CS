using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

using Epi.Data;

namespace Epi
{



    public        class Logger
    {
        //Fields
        private static string logFilePath = string.Empty;
        //Fields

        //Public Methods





        public static void Log(string msg)
        {
            try
            {
                if (EnsureLogFileExists())
                {
                    TextWriter tw = new StreamWriter(logFilePath, true);
                    tw.WriteLine(msg);
                    tw.Close();
                }
            }
            catch (Exception ex)
            {

            }
        }






        public static void LogBenchmark(string description, TimeSpan timeSpan)
        {             
            string msg = DateTime.Now.ToString() + " | " + description;
            Log(msg + " | " + timeSpan.ToString());
      
        }





        public static void Log(Query query)
        {

            Log(query.SqlStatement);
            string paramsString = string.Empty;

            foreach (QueryParameter param in query.Parameters)
            {
                paramsString += param.ParameterName + "=" + (Util.IsEmpty(param.Value) ? String.Empty:param.Value.ToString()) + ";   ";
            }
            Log(paramsString);
        }





        public static string GetLogFilePath()
        {
            EnsureLogFileExists();
            return logFilePath;
        }

        //Public Methods

        //Private Methods
        private static bool EnsureLogFileExists()
        {
            Configuration config = Configuration.GetNewInstance();

            try
            {

                if (string.IsNullOrEmpty(logFilePath))
                {
                    string dateStamp = DateTime.Now.ToString();
                    dateStamp = dateStamp.Replace(StringLiterals.FORWARD_SLASH, StringLiterals.UNDER_SCORE);
                    dateStamp = dateStamp.Replace(StringLiterals.BACKWARD_SLASH, StringLiterals.UNDER_SCORE);
                    dateStamp = dateStamp.Replace(StringLiterals.COLON, StringLiterals.UNDER_SCORE);
                    dateStamp = dateStamp.Replace(StringLiterals.SPACE, StringLiterals.UNDER_SCORE);
                    string logFileName = "EpiInfo_Log_" + dateStamp + ".txt";

                    config = Configuration.GetNewInstance();
                    logFilePath = Path.Combine(config.Directories.LogDir, logFileName);
                }

                if (Directory.Exists(config.Directories.LogDir) == false)
                {
                    Directory.CreateDirectory(config.Directories.LogDir);
                }


                if (!File.Exists(logFilePath))
                {
                    FileStream stream = File.Create(logFilePath);
                    stream.Close();
                }
                return true;
            }
            catch (Exception)
            {

                return false;
            }
        }
        //Private Methods
    }
}

 