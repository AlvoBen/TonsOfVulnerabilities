using System;
using System.ComponentModel;
using System.Data;
using System.Xml;
using Epi;
using Epi.Data;

namespace Epi.Fields
{



 public class MultilineTextField : TextField
    {
        //Private Data Members

        private XmlElement viewElement;
        private XmlNode fieldNode;
        private BackgroundWorker _updater;
        private BackgroundWorker _inserter;

        // 

        //Constructors

        private void Construct()
        {
            genericDbColumnType = GenericDbColumnType.StringLong;
        }

        public MultilineTextField(Page page) : base(page)
  {
   Construct();
  }

        public MultilineTextField(View view) : base(view)
        {
            Construct();
        }






        public MultilineTextField(Page page, XmlElement viewElement)
            : base(page)
        {
            this.viewElement = viewElement;
            this.Page = page;
            Construct();
        }






        public MultilineTextField(View view, XmlNode fieldNode) : base(view)
        {
            this.fieldNode = fieldNode;
            this.view.Project.Metadata.GetFieldData(this, this.fieldNode);
            Construct();
        }

  //

        //Public Properties




        public override MetaFieldType FieldType
        {
            get
            {
                return MetaFieldType.Multiline;
            }
        }




        public XmlElement ViewElement
        {
            get
            {
                return viewElement;
            }
            set
            {
                viewElement = value;
            }
        }
        //Public Properties

  //Private Methods




        protected override void InsertField()
        {
            this.Id = GetMetadata().CreateField(this);
            base.OnFieldAdded();
        }





        protected override void UpdateField()
        {
            GetMetadata().UpdateField(this);
        }



        //

        //Public Methods



        public override string GetDbSpecificColumnType()
        {
            return GetProject().CollectedData.GetDatabase().GetDbSpecificColumnType(genericDbColumnType);
        }

        public MultilineTextField Clone()
        {
            MultilineTextField clone = (MultilineTextField)this.MemberwiseClone();
            base.AssignMembers(clone);
            return clone;
        }
        //Public Methods
    }
}
 