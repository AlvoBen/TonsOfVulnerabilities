using System;
using System.ComponentModel;
using System.Data;
using System.Xml;
using Epi;

namespace Epi.Fields
{



 public class DDLFieldOfLegalValues : TableBasedDropDownField
    {
        //Private Data Members

        private XmlElement viewElement;
        private XmlNode fieldNode;
        private BackgroundWorker _updater;
        private BackgroundWorker _inserter;

        // 

        //Constructors





        public DDLFieldOfLegalValues(Page page) : base(page)
  {
  }





  public DDLFieldOfLegalValues(View view) : base(view)
  {
  }






        public DDLFieldOfLegalValues(Page page, XmlElement viewElement)
            : base(page)
        {
            this.viewElement = viewElement;
        }






        public DDLFieldOfLegalValues(View view, XmlNode fieldNode)
            : base(view)
        {
            this.fieldNode = fieldNode;
            this.view.Project.Metadata.GetFieldData(this, this.fieldNode);
        }

  //Constructors

  //Public Properties



        public override MetaFieldType FieldType
        {
            get
            {
                return MetaFieldType.LegalValues;
            }
        }




  public override string CodeColumnName
  {
   get
   {
    if (string.IsNullOrEmpty(codeColumnName))
    {
     codeColumnName = TextColumnName;
    }
    return codeColumnName;
   }
   set
   {
    base.CodeColumnName = value;
   }
  }




  public override string TextColumnName
  {
   get
   {
    return base.TextColumnName;
   }
   set
   {
    if (string.IsNullOrEmpty(codeColumnName))
    {
     codeColumnName = value;
    }
    base.TextColumnName = value;
   }
  }




        public XmlElement ViewElement
        {
            get
            {
                return viewElement;
            }
            set
            {
                viewElement = value;
            }
        }

  //Public Properties

  //Public Methods










  //

  //Protected Methods




        protected override void InsertField()
        {
            this.Id = GetMetadata().CreateField(this);
            base.OnFieldAdded();
        }





        protected override void UpdateField()
        {
            GetMetadata().UpdateField(this);
        }























































  //Protected Methods
    }
}
 