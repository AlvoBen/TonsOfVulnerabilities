using System;
using System.Data;
using System.Drawing;
using System.Collections.Generic;
using System.Xml;

namespace Epi.Data.Services
{



    public interface IMetadataProvider
    {
        //Events



        event ProgressReportBeginEventHandler ProgressReportBeginEvent;



        event ProgressReportUpdateEventHandler ProgressReportUpdateEvent;



        event SimpleEventHandler ProgressReportEndEvent;
        //Events






        void AddLayerToMap(int mapId, int layerId);





        void AddGridColumn(DataRow gridColumnRow);








        void UpdateFonts(Font controlFont, Font promptFont, float viewId = -1, float pageId = -1);





        void AttachDbDriver(IDbDriver dbDriver);






        void UpdateFieldType(Epi.Fields.Field field, Epi.MetaFieldType fieldType);






        void CreateCheckCodeVariableDefinition(int viewId, string checkCode);





        void CreateCodeTable(string tableName, string columnName);






        bool CreateCodeTable(string tableName, string[] columnNames);






        void CreateCodeTableRecord(string tableName, string[] columnNames, string[] columnData);














        int CreateControl(int fieldId, double topPosition, double leftPosition, double height, double width, bool isRepeatLast, bool isRequired, bool isReadOnly, bool isRetainImgSize, int tabOrder);






        void CreateControlAfterCheckCode(int fieldId, string checkCode, View view);






        void CreateControlBeforeCheckCode(int fieldId, string checkCode, View view);





        int CreateField(Epi.Fields.MultilineTextField field);





        int CreateField(Epi.Fields.NumberField field);





        int CreateField(Epi.Fields.TimeField field);





        int CreateField(Epi.Fields.UpperCaseTextField field);





        int CreateField(Epi.Fields.YesNoField field);





        int CreateField(Epi.Fields.SingleLineTextField field);





        int CreateField(Epi.Fields.OptionField field);





        int CreateField(Epi.Fields.PhoneNumberField field);





        int CreateField(Epi.Fields.RelatedViewField field);





        int CreateField(Epi.Fields.MirrorField field);





        int CreateField(Epi.Fields.CommandButtonField field);





        int CreateField(Epi.Fields.DateField field);





        int CreateField(Epi.Fields.DateTimeField field);





        int CreateField(Epi.Fields.UniqueKeyField field);






        int CreateField(Epi.Fields.UniqueIdentifierField field);






        int CreateField(Epi.Fields.GlobalRecordIdField field);






        int CreateField(Epi.Fields.RecStatusField field);





        int CreateField(Epi.Fields.ForeignKeyField field);





        int CreateField(Epi.Fields.CheckBoxField field);





        int CreateField(Epi.Fields.GridField field);





        int CreateField(Epi.Fields.GUIDField field);





        int CreateField(Epi.Fields.ImageField field);





        int CreateField(Epi.Fields.GroupField field);





        int CreateField(Epi.Fields.LabelField field);





        int CreateField(Epi.Fields.DDLFieldOfCodes field);





        int CreateField(Epi.Fields.DDListField field);





        int CreateField(Epi.Fields.DDLFieldOfCommentLegal field);





        int CreateField(Epi.Fields.DDLFieldOfLegalValues field);





        int CreateGridColumn(Epi.Fields.DDLColumnOfCommentLegal column);





        int CreateGridColumn(Epi.Fields.DDLColumnOfLegalValues column);





        int CreateGridColumn(Epi.Fields.GlobalRecordIdColumn column);





        int CreateGridColumn(Epi.Fields.UniqueRowIdColumn column);





        int CreateGridColumn(Epi.Fields.UniqueKeyColumn column);





        int CreateGridColumn(Epi.Fields.RecStatusColumn column);





        int CreateGridColumn(Epi.Fields.ForeignKeyColumn column);





        int CreateGridColumn(Epi.Fields.NumberColumn column);





        int CreateGridColumn(Epi.Fields.TextColumn column);





        int CreateGridColumn(Epi.Fields.CheckboxColumn column);





        int CreateGridColumn(Epi.Fields.YesNoColumn column);





        int CreateGridColumn(Epi.Fields.PhoneNumberColumn column);





        int CreateGridColumn(Epi.Fields.ContiguousColumn column);










        void CreateLabel(int fieldId, string labelText, double topPosition, double leftPosition, string font, decimal fontSize);







        int CreateLayer(string gml, string gmlSchema, string layerName);





        int CreateLayer(string fileName);






        int CreateMap(string name, string description);







        Page CreatePage(View view, string name, int position);






        void CreatePageAfterCheckCode(int pageId, string checkCode, View view);






        void CreatePageBeforeCheckCode(int pageId, string checkCode, View view);





        void CreateRecordAfterCheckCode(int viewId, string checkCode);





        void CreateRecordBeforeCheckCode(int viewId, string checkCode);





        void CreateViewAfterCheckCode(int viewId, string checkCode);





        void CreateViewBeforeCheckCode(int viewId, string checkCode);



        IDbDriverFactory DBFactory { get; }




        void DeleteCodeTable(string tableName);




        void DeleteField(Epi.Fields.Field field);




        void DeleteField(string fieldName, int viewId);




        void DeleteGridColumn(Epi.Fields.GridColumnBase column);




        void DeleteFields(Page page);




        void DeletePage(Page page);




        void DeletePgm(int pgmId);




        void DeletePgm(string pgmName);




        void DeleteView(string viewName);










        string GetAvailDataTableName(string viewName);






        System.Data.DataTable GetCheckCodeVariableDefinition(int viewID);





        System.Data.DataTable GetCheckCodeVariableDefinitions(string viewName);





        View GetChildView(Epi.Fields.RelatedViewField field);





        System.Data.DataTable GetCodeTable(string tableName);






        System.Data.DataTable GetCodeTableData(string tableName);







        System.Data.DataTable GetCodeTableData(string tableName, string columnNames, string sortCriteria);






        System.Data.DataTable GetCodeTableData(string tableName, string columnNames);




        DataSets.TableSchema.TablesDataTable GetCodeTableList();





        DataSets.TableSchema.TablesDataTable GetCodeTableList(IDbDriver db);







        System.Data.DataTable GetCodeTableName(string viewTableName, string tableVariableName);





        DataTable GetCodeTableNamesForProject(Project project);





        System.Data.DataTable GetControlsForPage(int pageId);

        System.Data.DataTable GetDataDictionary(View view);





        List GetDataTableList();






        string GetDataTableName(int viewId);






        DataTable GetDataTableNames(int viewId);







        System.Data.DataRow GetFieldIdByNameAsDataRow(string viewName, string fieldName);

        System.Data.DataRow GetFieldGUIDByNameAsDataRow(string viewName, string fieldName);







        DataTable GetFieldMetadataSync(View view);








        DataTable GetFieldMetadataSync(int pageId);








        System.Data.DataRow GetFieldAsDataRow(int viewId, string fieldName);





        System.Data.DataTable GetFieldCheckCode_After(int fieldID);





        System.Data.DataTable GetFieldCheckCode_Before(int fieldID);







        void GetFieldData(Epi.Fields.GUIDField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.MultilineTextField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.NumberField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.TimeField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.UpperCaseTextField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.YesNoField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.SingleLineTextField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.OptionField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.PhoneNumberField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.RelatedViewField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.MirrorField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.CommandButtonField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.DateField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.DateTimeField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.UniqueKeyField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.UniqueIdentifierField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.RecStatusField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.ForeignKeyField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.CheckBoxField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.GridField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.ImageField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.LabelField field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.DDLFieldOfCodes field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.DDListField field, XmlNode fieldNode);






        void GetFieldData(Epi.Fields.DDLFieldOfCommentLegal field, XmlNode fieldNode);





        void GetFieldData(Epi.Fields.DDLFieldOfLegalValues field, XmlNode fieldNode);







        int GetFieldTabIndex(int fieldId, int viewId, int pageId);





        Epi.Collections.NamedObjectCollection GetGroupFields(Page page);






        int GetCollectedFieldCount(int viewId);






        Epi.Collections.FieldCollectionMaster GetFields(View view);





        System.Data.DataTable GetFieldsAsDataTable(View view);






        System.Data.DataTable GetFieldsOnPageAsDataTable(string viewName, int pageNumber);





        System.Data.DataTable GetFieldsOnPageAsDataTable(int pageId);




        System.Data.DataTable GetFieldTypes();





        DataRow GetFieldAsDataRow(Epi.Fields.Field field);





        System.Collections.Generic.List GetGridColumnCollection(Epi.Fields.GridField field);





        System.Data.DataTable GetGridColumns(int fieldId);





        System.Data.DataTable GetGridColumns(string gridTableName);




        System.Data.DataTable GetGridFieldTypes();





        System.Data.DataTable GetGroupsForPage(int pageId);




        View GetLatestViewInserted();





        Epi.DataSets.MapMetadata.metaLayersRow GetLayer(int layerId);




        Epi.DataSets.MapMetadata.metaLayersDataTable GetLayers();





        Epi.DataSets.MapMetadata.metaMapsDataTable GetMap(int mapId);





        Epi.DataSets.MapMetadata.metaMapLayersRow GetMapLayer(int mapLayerId);





        Epi.DataSets.MapMetadata.metaMapLayersDataTable GetMapLayers(int mapId);





        Epi.DataSets.MapMetadata.metaMapPointsDataTable GetMapPoints(int mapId);




        Epi.DataSets.MapMetadata.metaMapsDataTable GetMaps();




        int GetMaxBackgroundId();





        int GetMaxFieldId(int viewId);





        int GetMaxGridColumnId(int gridFieldId);




        int GetMaxImageId();





        int GetMaxPageId(int viewId);






        double GetMaxTabIndex(int pageId, int viewId, bool  includeReadOnly = null);




        int GetMaxViewId();





        int GetMaxViewPagesPosition(int viewId);





        DataTable GetMetaFieldsSchema(int viewId);






        double GetMinTabIndex(int pageId, int viewId);







        double GetNextTabIndex(Page page, View view, double currentTabIndex);




        System.Data.DataTable GetNonViewTablesAsDataTable();





        System.Data.DataTable GetPageCheckCode_After(Page page);





        System.Data.DataTable GetPageCheckCode_Before(Page page);





        System.Data.DataTable GetPagesForView(int viewId);





        View GetParentView(int id);




        System.Data.DataTable GetPatterns();




        System.Data.DataTable GetPgms();





        System.Data.DataTable GetRecordCheckCode_After(int viewID);





        System.Data.DataTable GetRecordCheckCode_Before(int viewID);






        string GetSourceFieldName(string fieldName, string viewName);





        System.Data.DataTable GetSystemFields(int viewId);





        string GetTableColumnNames(int viewId);





        DataSets.TabOrders.TabOrderDataTable GetTabOrderForFields(int pageId);






        System.Data.DataTable GetTextFieldsForPage(int viewId, int pageId);





        System.Data.DataTable GetCodeTargetCandidates(int pageId);





        View GetViewByFullName(string viewFullName);





        View GetViewById(int viewId);





        System.Data.DataTable GetViewCheckCode(string viewName);





        System.Data.DataTable GetViewCheckCode_After(int viewID);





        System.Data.DataTable GetViewCheckCode_Before(int viewID);





        System.Collections.Generic.List GetViewPages(View view);





        System.Data.DataTable GetViewRecordVarCheckCodes(int viewID);





        System.Data.DataTable GetViewRelations(string viewTableName);




        Epi.Collections.ViewCollection GetViews();






        Epi.Collections.ViewCollection GetViews(XmlElement currentViewElement, XmlNode viewsNode);




        System.Data.DataTable GetViewsAsDataTable();





        System.Collections.Generic.List GetViewsOfDataTable(string dataTableName);





        Dictionary DuplicateFieldNames();





        string IdentifyDatabase();







        void Initialize(DbDriverInfo MetaDbInfo, string driver, bool createDatabase);







        void InsertCodeTableData(System.Data.DataTable dataTable, string tableName, string[] columnNames);




        void InsertPage(Page page);

        void InsertFields(DataTable field);

        Int32 InsertMetaImage(string imagePath);

        Int32 InsertMetaImage(byte[] imageAsBytes);








        void InsertPgm(string name, string content, string comment, string author);




        void InsertView(View view);



        Project Project { get; }







        void RelateFieldToView(Guid uniqueId, int relatedViewId, string relateCondition, bool shouldReturnToParent);




        void RemovePageOutlierFields();







        void RenamePage(int pageId, string newPageName);




        void ResetTabIndexes(Page page);






        void SaveCodeTableData(System.Data.DataTable dataTable, string tableName, string columnName);






        void SaveCodeTableData(System.Data.DataTable dataTable, string tableName, string[] columnNames);





        void SynchronizePageNumbersOnDelete(View view, int position);





        void SynchronizePageNumbersOnInsert(View view, Page page);







        bool TableExists(string tableName);








        void UpdateCodesFieldSources(int fieldId, int sourceFieldId, string codeColumnName, string sourceTableName);




        void UpdateControlPosition(Epi.Fields.RenderableField field);




        void UpdateControlSize(Epi.Fields.RenderableField field);





        void UpdateDataTableName(int viewId, string tableName);




        void UpdateField(Epi.Fields.GridField field);




        void UpdateField(Epi.Fields.GUIDField field);




        void UpdateField(Epi.Fields.DDLFieldOfLegalValues field);




        void UpdateField(Epi.Fields.ImageField field);




        void UpdateField(Epi.Fields.DateField field);




        void UpdateField(Epi.Fields.GroupField field);




        void UpdateField(Epi.Fields.LabelField field);




        void UpdateField(Epi.Fields.DDLFieldOfCodes field);




        void UpdateField(Epi.Fields.DDListField field);




        void UpdateField(Epi.Fields.DateTimeField field);




        void UpdateField(Epi.Fields.DDLFieldOfCommentLegal field);




        void UpdateField(Epi.Fields.CommandButtonField field);




        void UpdateField(Epi.Fields.CheckBoxField field);




        void UpdateField(Epi.Fields.RelatedViewField field);




        void UpdateField(Epi.Fields.PhoneNumberField field);




        void UpdateField(Epi.Fields.TimeField field);




        void UpdateField(Epi.Fields.SingleLineTextField field);




        void UpdateField(Epi.Fields.MultilineTextField field);




        void UpdateField(Epi.Fields.MirrorField field);




        void UpdateField(Epi.Fields.OptionField field);




        void UpdateField(Epi.Fields.NumberField field);




        void UpdateField(Epi.Fields.YesNoField field);




        void UpdateField(Epi.Fields.UpperCaseTextField field);




        void UpdateGridColumn(Epi.Fields.DDLColumnOfCommentLegal column);




        void UpdateGridColumn(Epi.Fields.DDLColumnOfLegalValues column);




        void UpdateGridColumn(Epi.Fields.ContiguousColumn column);




        void UpdateGridColumn(Epi.Fields.TextColumn column);




        void UpdateGridColumn(Epi.Fields.CheckboxColumn column);




        void UpdateGridColumn(Epi.Fields.YesNoColumn column);




        void UpdateGridColumn(Epi.Fields.NumberColumn column);




        void UpdateGridColumn(Epi.Fields.PhoneNumberColumn column);




        void UpdatePage(Page page);







        void UpdatePgm(string name, string content, string comment, string author);








        void UpdatePgm(int programId, string name, string content, string comment, string author);




        void UpdatePromptPosition(Epi.Fields.FieldWithSeparatePrompt field);






        void UpdateTabOrder(System.Data.DataTable tabOrder, View view, Page currentPage);




        void UpdateView(View view);





        Font ExtractPromptFont(DataRow fieldRow);




        DataTable GetBackgroundData();





        DataTable GetPageBackgroundData(Page page);



        void CreateBackgroundsTable();



        void CreateImagesTable();







        void InsertPageBackgroundData(Page page, int imageId, string imageLayout, int color);







        void UpdatePageBackgroundData(Page page, string imagePath, string imageLayout, int color);









        void UpdatePageSetupData(View view, int width, int height, string orientation, string labelAlign, string targetMedium);




        DataRow GetPageSetupData(View view);
    }
}

 