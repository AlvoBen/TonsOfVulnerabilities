using System;
using Epi.DataSets;

namespace Epi
{



    public abstract class VariableBase : IVariable
    {

        //Protected Attributes



        protected string expression = "Null";  //zack,







        protected DataType dataType = DataType.Unknown;

        //Protected Attributes

        //Private Attributes
        private string name;
        private readonly VariableType varType;
        private string promptText;
        //Private Attributes

        //Constructors






        public VariableBase(string name, VariableType varType)
            : this(name, DataType.Unknown, varType)
        { }







        public VariableBase(string name, DataType dataType, VariableType varType)
        {
            this.name = name;
            this.dataType = dataType;
            this.varType = varType;
        }














  //Constructors

  //Public Properties



        public VariableType VarType
        {
            get
            {
                return varType;
            }
        }



  public string Name
  {
   get
   {
    return name;
   }
            set
            {
                name = value;
            }
  }




        public virtual string Expression
        {
            get
            {
                return expression;
            }
            set
            {
                expression = value;
            }
        }









        public DataType DataType
  {
   get
   {
    return dataType;
   }
            set
            {
                if (dataType == DataType.Unknown)
                {
                    dataType = value;
                }
            }
  }




        public string PromptText
        {
            get
            {
                return promptText;
            }
            set
            {
                promptText = value;
            }
        }

        //Public Properties

        //Public Methods




  public virtual void Dispose()
        {
        }






        public bool IsVarType(VariableType typeCombination)
        {
            return IsVarType(this.varType, typeCombination);
        }

        //Public Methods

        //Static methods






        public static bool IsVarType(VariableType varType, VariableType typeCombination)
        {
            return ((varType & typeCombination) > 0);
        }
        //Static methods
    }




    public class Variable : VariableBase
    {






        public Variable(string name, DataType dataType, VariableType varType)
            : base(name, dataType, varType)
        {
        }

    }
}

 