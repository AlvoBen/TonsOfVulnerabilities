using System;

namespace Epi
{



    public class DataSourceVariable : VariableBase, IDataSourceVariable
    {
        //Fields



        protected string tableName = string.Empty;



        protected MetaFieldType fieldType;
        //Fields

        //Constructors





        public DataSourceVariable(string name, DataType dataType)
            : base(name, dataType, VariableType.DataSource)
        {
        }
        //Constructors

        //Public Properties




        public string TableName
        {
            get { return tableName; }
            set { tableName = value; }
        }




        [Obsolete("Field type is not relevant here. Need to recheck", false)]
        public MetaFieldType FieldType
        {
            get { return fieldType; }
            set { fieldType = value; }
        }




        public override string Expression
        {
            get
            {
                return Util.InsertInSquareBrackets(tableName) + "." + this.Name;
            }
        }




        protected object currentRecordValueObject = null;




        public virtual object CurrentRecordValueObject
        {
            get
            {
                return currentRecordValueObject;
            }
            set
            {
                currentRecordValueObject = value;
            }
        }

        //Public Properties

        //Public Methods




        public IVariable Redefine()
        {
            IVariable var = new DataSourceVariableRedefined(this.Name, this.DataType);
            var.Expression = this.Expression;
            return var;
        }
        //Public Methods
    }
}
 