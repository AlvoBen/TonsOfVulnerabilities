
using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;
using Epi;
using Epi.Fields;

namespace Epi.Windows.MakeView.Dialogs.FieldDefinitionDialogs
{

    public         class UpperCaseTextFieldDefinition : SingleLineTextFieldDefinition
 {

        private UpperCaseTextField field;

  //Constructors



        public UpperCaseTextFieldDefinition()
        {
            InitializeComponent();
        }




  public UpperCaseTextFieldDefinition(MainForm frm) : base(frm)
  {
   InitializeComponent();
  }






  public UpperCaseTextFieldDefinition(MainForm frm, Page page) : base(frm)
  {
   InitializeComponent();
   this.mode = FormMode.Create;
   this.page = page;
  }






  public UpperCaseTextFieldDefinition(MainForm frm, UpperCaseTextField field) : base(frm)
  {
   InitializeComponent();
   this.mode = FormMode.Edit;
   this.field = field;
   this.page = field.Page;
   LoadFormData();
  }
  //

  //Private Methods
  private void LoadFormData()
  {
            SetFontStyles(field);

   txtPrompt.Text = field.PromptText;
   txtFieldName.Text = field.Name;
   chkReadOnly.Checked = field.IsReadOnly;
   chkRepeatLast.Checked = field.ShouldRepeatLast;
   chkRequired.Checked = field.IsRequired;
   if (field.MaxLength > 0)
   {
                mtbSize.Text = field.MaxLength.ToString();
   }
  }
  //

  //Public Methods




        protected override void SetFieldProperties()
        {
            field.PromptText = txtPrompt.Text;
            field.Name = txtFieldName.Text;

            base.SetMaxTextboxSize(field);

            if (promptFont != null)
            {
                field.PromptFont = promptFont;
            }
            if (controlFont != null)
            {
                field.ControlFont = controlFont;
            }
            field.IsRequired = chkRequired.Checked;
            field.IsReadOnly = chkReadOnly.Checked;
            field.ShouldRepeatLast = chkRepeatLast.Checked;
        }




  public override RenderableField Field
  {
   get
   {
    return field;
   }
  }
  //


    }
}

 