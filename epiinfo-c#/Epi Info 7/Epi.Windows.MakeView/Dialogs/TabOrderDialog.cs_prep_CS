//Namespaces

using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;
using System.Data;
using Epi.Windows.Dialogs;

// 

namespace Epi.Windows.MakeView.Dialogs
{



    public         class TabOrderDialog : DialogBase
 {
  //Private Class Members
  private DataTable fieldsTabOrder = null;
        private int currentRowIndex;
        private System.Data.DataView dv;
        private DataTable sortedTable;
        private Page currentPage;
        private View currentView;
  //

  //Constructor




  public TabOrderDialog()
  {
   InitializeComponent();
  }




  public TabOrderDialog(Page page, DataSets.TabOrders.TabOrderDataTable tabOrderForFields)
  {

   InitializeComponent();
            currentPage = page;
            currentView = page.GetView();
   fieldsTabOrder = tabOrderForFields;
  }
  //

  //Event Handlers





  private void btnCancel_Click(object sender, System.EventArgs e)
  {
   this.Close();
  }






  private void TabOrder_Load(object sender, System.EventArgs e)
  {
   System.Data.DataView dataView = fieldsTabOrder.DefaultView;
   dataView.AllowEdit = false;
   dgControls.DataSource = dataView;
   dgControls.TableStyles.Add(dgTableStyle);
            dv = (DataView)dgControls.DataSource;
            btnUp.Enabled = false;      
            btnOK.Enabled = false;
  }






  private void btnDown_Click(object sender, System.EventArgs e)
  {
            btnOK.Enabled = true;
            SetGridDataSource();
            DataRow currentRow = dv.Table.Rows[currentRowIndex];
            DataRow nextRow = dv.Table.Rows[currentRowIndex + 1];

            currentRow["TabIndex"] = ((int)currentRow["TabIndex"]) + 1;
            nextRow["TabIndex"] = ((int)nextRow["TabIndex"]) - 1;

            currentRowIndex = dv.Table.Rows.IndexOf(currentRow) + 1;
            dv.Sort = "TabIndex";

            dgControls.CurrentRowIndex = currentRowIndex;
            dgControls.Select(currentRowIndex);
            sortedTable = dv.ToTable();
            DisableEnableNavigationButtons();
  }






  private void dgControls_Click(object sender, System.EventArgs e)
  {
   dgControls.Select(dgControls.CurrentRowIndex);
            currentRowIndex = dgControls.CurrentRowIndex;
            DisableEnableNavigationButtons();
            btnOK.Enabled = true;
  }






  private void btnUp_Click(object sender, System.EventArgs e)
  {
            btnOK.Enabled = true;
            SetGridDataSource();
            DataRow currentRow = dv.Table.Rows[currentRowIndex];
            DataRow nextRow = dv.Table.Rows[currentRowIndex - 1];

            currentRow["TabIndex"] = ((int)currentRow["TabIndex"]) - 1;
            nextRow["TabIndex"] = ((int)nextRow["TabIndex"]) + 1;

            currentRowIndex = dv.Table.Rows.IndexOf(currentRow) - 1;
            dv.Sort = "TabIndex";

            dgControls.CurrentRowIndex = currentRowIndex;
            dgControls.Select(currentRowIndex);
            sortedTable = dv.ToTable();
            DisableEnableNavigationButtons();
  }






        private void btnOK_Click(object sender, System.EventArgs e)
        {


            if (sortedTable == null)
            {
                dv.Sort = "TabIndex";
                sortedTable = dv.ToTable();
            }
            currentView.Project.Metadata.UpdateTabOrder(sortedTable, currentView, currentPage);

            currentView.MustRefreshFieldCollection = true;      
            this.Close();
        }

  //

        //Private Methods




        private void SetGridDataSource()
        {
            if (sortedTable == null)
            {
                dv = (DataView)dgControls.DataSource;
            }
            else
            {
                dgControls.DataSource = sortedTable.DefaultView;
                dv = (DataView)dgControls.DataSource;
            }
        }




        private void DisableEnableNavigationButtons()
        {
            btnDown.Enabled = (dgControls.CurrentRowIndex != fieldsTabOrder.Rows.Count - 1);
            btnUp.Enabled = !dgControls.IsSelected(0);
        }
        //

        private void dgControls_CurrentCellChanged(object sender, EventArgs e)
        {
            dgControls.Select(dgControls.CurrentCell.RowNumber);
            currentRowIndex = dgControls.CurrentRowIndex;
            DisableEnableNavigationButtons();
            btnOK.Enabled = true;
        }

    }
}


 