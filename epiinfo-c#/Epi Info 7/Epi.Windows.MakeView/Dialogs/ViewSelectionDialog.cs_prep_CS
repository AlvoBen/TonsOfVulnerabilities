using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;
using System.Data;
using Epi;
using Epi.Windows.Dialogs;

namespace Epi.Windows.MakeView.Dialogs
{



    public         class ViewSelectionDialog : DialogBase
 {
  //Private Class Members
  private Project currentProject = null;
  private string tableName = string.Empty;
  //Private Class Members

  //Constructor




        [Obsolete("Use of default constructor not allowed", true)]
  public ViewSelectionDialog()
  {
   InitializeComponent();
  }






        public ViewSelectionDialog(MainForm frm, Project project)
            : base(frm)
  {

   InitializeComponent();
   currentProject = project;
  }
  //Constructor

  //Public Properties



  public string TableName
  {
   get
   {
    return (tableName);
   }
  }
  //Public Properties

  //Event Handlers





  private void btnCancel_Click(object sender, System.EventArgs e)
  {
   this.Close();
  }

  private void ViewSelection_Load(object sender, System.EventArgs e)
  {
   LoadTables();

            if (lbxTables.SelectedIndex == -1)
            {
                btnOK.Enabled = false;
            }
            else
            {
                btnOK.Enabled = true;
            }
  }

  private void btnOK_Click(object sender, System.EventArgs e)
  {
   if (lbxTables.SelectedIndex > -1)
   {
    tableName = lbxTables.SelectedValue.ToString();
   }
   this.DialogResult = DialogResult.OK;
   this.Hide();
  }
  //Event Handlers

  //Private Methods
  private void LoadTables()
  {
            DataTable bindingTable = currentProject.CodeData.GetCodeTableNamesForProject(currentProject);

            string  collectedDataTableName = string.Empty;

            DataTable pages;

            Epi.Windows.MakeView.Forms.MakeViewMainForm makeViewMainForm = ((Epi.Windows.MakeView.Forms.MakeViewMainForm)this.mainForm);
            View currentView = makeViewMainForm.projectExplorer.currentPage.view;

            foreach (View view in currentView.GetProject().Views)
            {
                pages = currentProject.Metadata.GetPagesForView(view.Id);

                foreach (DataRow row in pages.Rows)
                {
                    collectedDataTableName = string.Format("{0} - {1}", view.Name, row["Name"].ToString());

                    if (!string.IsNullOrEmpty(collectedDataTableName))
                    {
                        bindingTable.Rows.Add( CxNull);
                    }
                }
            }

            DataView dataView = bindingTable.DefaultView;

            string display = String.Empty;
            string kindOfDatabase = currentProject.CodeData.IdentifyDatabase();



            switch (kindOfDatabase)
            {
                case "ACCESS":
                    display = ColumnNames.NAME;
                    break;
                case "SQLSERVER":
                    display = ColumnNames.SCHEMA_TABLE_NAME;
                    break;
                case "MYSQL":
                    display = ColumnNames.SCHEMA_TABLE_NAME;
                    break;
                default:
                    display = ColumnNames.SCHEMA_TABLE_NAME;
                    break;
            }
            dataView.Sort = display;
            lbxTables.DataSource = dataView;
            lbxTables.DisplayMember = display;
            lbxTables.ValueMember = display;
  }
  //Private Methods
 }
}


 