using System;
using System.Collections.Generic;
using System.Data;
using System.Text;
using Epi.Data;

namespace Epi.ImportExport
{



    public abstract class ExporterBase : IDataExporter
    {
        //Protected Members
        protected View view;
        protected DataView dataView;
        protected List columnList;
        protected ColumnSortOrder columnSortOrder;
        protected bool exportAllFields;
        //

        //Events
        public event SetProgressBarDelegate SetProgressBar;
        public event UpdateStatusEventHandler SetStatus;
        public event SetProgressAndStatusHandler SetProgressAndStatus;
        public event CheckForCancellationHandler CheckForCancellation;
        //

        //Public Properties



        public ColumnSortOrder ColumnSortOrder
        {
            get
            {
                return this.columnSortOrder;
            }
            set
            {
                this.columnSortOrder = value;
            }
        }




        public DataView DataView
        {
            get
            {
                return this.dataView;
            }
        }




        public bool ExportAllFields
        {
            get
            {
                return this.exportAllFields;
            }
            set
            {
                this.exportAllFields = value;
            }
        }
        //

        //Public Methods




        public void AttachView(View view)
        {
            this.view = view;
        }




        public abstract void Export();
        //

        //Protected Methods




        protected void OnSetStatusMessage(string message)
        {
            if (SetStatus != null)
            {
                SetStatus(message);
            }
        }






        protected void OnSetStatusMessageAndProgressCount(string message, double progress)
        {
            if (SetProgressAndStatus != null)
            {
                SetProgressAndStatus(message, progress);
            }
        }
        //
    }
}

 