package com.sap.security.core.server.jaas;

import java.io.Serializable;

import javax.resource.spi.security.GenericCredential;

import com.sap.engine.interfaces.security.auth.AuthenticationTraces;
import com.sap.security.api.logon.NonDuplicable;
import com.sap.tc.logging.Location;

/** credential wrapper for the SAP Logon Ticket */
public class SAPLogonTicketCredential implements GenericCredential, Serializable, NonDuplicable {

  private static final Location LOCATION = Location.getLocation(AuthenticationTraces.LOGIN_MODULES_TICKET_LOCATION);
  
  /** <p> object identifier for the SAPLogonTicket: 
   * "1.3.6.1.4.1.694.2.1.3"</p>
   * the gss specification does not specify which String 
   * representation to take, alternative would be 
   * {1 3 6 1 4 1 694 2 1 3} */
  // 1.3.6.1.4.1.694 (namespace reserved by SAP) 2 (security) 1 (gss)
  // Martin Rex coordinates the security brunch 
  private static String OID = "1.3.6.1.4.1.694.2.1.3";
  
  /** SAP Logon Ticket of the user **/
  private String mLogonTicket;
  
  /** name of the user to which this credential belongs */
  private String mName;
  
  public SAPLogonTicketCredential(String ticket, String name){
  	mLogonTicket = ticket;
  	mName = name;
  }
  
  /** returns the name of the user to which this credential belongs */
  public String getName(){
  	return mName;
  }
  
  /** returns the object identifier of the SAP Logon Ticket mechanism */
  public String getMechType(){
  	return OID;
  }
  
  /** returns the SAP Logon Ticket of the user */
  public byte[] getCredentialData() throws javax.resource.spi.SecurityException{
  	return mLogonTicket.getBytes();
  }

  public String getTicketString() {
    return mLogonTicket;
  }
  
  public String toString() {
    return mLogonTicket;
  }

  /** compares the two SAP Logon Tickets */
  public boolean equals(Object ticketCredential){
  	// check if object is of the right class
  	if (!(ticketCredential instanceof SAPLogonTicketCredential)) {
  		return false;
  	}
  	
  	String otherLogonTicket = ((SAPLogonTicketCredential) ticketCredential).getTicketString();
    
    // check if credential data is the same
    // using equals method of java.lang.String 
    if (otherLogonTicket.equals(mLogonTicket)) {
    	return true;
    }
    
  	return false;
  }
  
  /** returns the hash code of the SAP Logon Ticket */
  public int hashCode(){
  	// return hash code generated by hashCode() of java.lang.String
  	return mLogonTicket.hashCode();
  }
  
}
