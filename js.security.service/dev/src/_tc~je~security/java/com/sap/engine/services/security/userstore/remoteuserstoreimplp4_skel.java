// Class generated by InQMy Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.userstore;

import java.rmi.server.Operation;

import com.sap.engine.services.rmi_p4.*;

/**
 *
 * @author Georgy Stanev 
 * @version 4.0
 */
public class RemoteUserStoreImplp4_Skel extends P4RemoteObject  implements com.sap.engine.services.rmi_p4.Skeleton, java.rmi.Remote {

	public P4ObjectBroker broker = P4ObjectBroker.init();
	private static final Operation[] operations = {
			new Operation("isActive()"),
			new Operation("setUserStoreProperties(java.util.Properties)"),
			new Operation("getConfiguration()"),
			new Operation("setActive(boolean)"),
			new Operation("getGroupContext()"),
			new Operation("getUserContext()")};

	public RemoteUserStoreImplp4_Skel () {
	}

	public Operation[] getOperations() {
		return operations;
	}

	private static final String[] _implements = {
			"com.sap.engine.services.security.remote.RemoteUserStore"};

	public String[] getImplemntsObjects() {
		return _implements;
	}

	public void dispatch(java.rmi.Remote remote, Dispatch call, int opnum) throws Exception {

		com.sap.engine.services.security.userstore.RemoteUserStoreImpl impl = (com.sap.engine.services.security.userstore.RemoteUserStoreImpl) getDelegate();
		P4ObjectInput in = call.getInputStream();

		switch (opnum) {

			case 0 : {  //method public abstract boolean com.sap.engine.services.security.remote.RemoteUserStore.isActive() throws java.rmi.RemoteException
				try {
					boolean _result = impl.isActive();
					P4ObjectOutput out = call.getOutputStream();
					out.writeBoolean( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 1 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStore.setUserStoreProperties(java.util.Properties) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.util.Properties param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.util.Properties)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.util.Properties) broker.narrow(obj0,java.util.Properties.class);
					}
					impl.setUserStoreProperties(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 2 : {  //method public abstract com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration com.sap.engine.services.security.remote.RemoteUserStore.getConfiguration() throws java.rmi.RemoteException
				try {
					com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration _result = impl.getConfiguration();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 3 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStore.setActive(boolean) throws java.rmi.RemoteException
				try {
					boolean param0 = in.readBoolean();
					impl.setActive(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 4 : {  //method public abstract com.sap.engine.services.security.remote.RemoteGroupContext com.sap.engine.services.security.remote.RemoteUserStore.getGroupContext() throws java.rmi.RemoteException
				try {
					com.sap.engine.services.security.remote.RemoteGroupContext _result = impl.getGroupContext();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 5 : {  //method public abstract com.sap.engine.services.security.remote.RemoteUserContext com.sap.engine.services.security.remote.RemoteUserStore.getUserContext() throws java.rmi.RemoteException
				try {
					com.sap.engine.services.security.remote.RemoteUserContext _result = impl.getUserContext();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
		}
	}

}
