// Class generated by SAP Labs Bulgaria Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.remote;



import com.sap.engine.services.rmi_p4.*;


/**
*
* @author  RMIC Generator
* @version 6.30
*/
public class RemoteUserStoreInfo_Stub extends com.sap.engine.services.rmi_p4.StubImpl 
		implements com.sap.engine.services.security.remote.RemoteUserStoreInfo {

	private static final String[] operations = {
			"getName()",
			"getCertificates()",
			"getPrincipal()",
			"getParentGroups()",
			"readUserProperty(int)",
			"writeUserProperty(int,java.lang.Object)",
			"setPassword(char[],char[])",
			"checkUserProperty(int,java.lang.Object)",
			"setCertificates(java.security.cert.X509Certificate[])",
			"setPasswordDisabled()",
			"isPasswordDisabled()"};

	public String[] p4_getOperations() {
		return operations;
	}

	public java.lang.String getName()  {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, null);
			} else {
				try {
					remote = p4remote.delegate();
				} catch (java.rmi.NoSuchObjectException nso) { 
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, nso);
				}
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				return remoteInterface.getName();
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return ((String) p4_invokeReflect(remote,"getName",params,p));
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					{ 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getName>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(0);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					java.lang.String _result;
					obj = in.readObject();
					try {
						 _result = (java.lang.String)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (java.lang.String) broker.narrow(obj,java.lang.String.class);
					}
				return _result;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public java.security.cert.X509Certificate[] getCertificates() throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				return (java.security.cert.X509Certificate[]) broker.narrow(p4_replicate(remoteInterface.getCertificates()), java.security.cert.X509Certificate[].class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return (java.security.cert.X509Certificate[])broker.narrow(p4_replicate(p4_invokeReflect(remote,"getCertificates",params,p)),java.security.cert.X509Certificate[].class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getCertificates>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getCertificates>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(1);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					java.security.cert.X509Certificate[] _result;
					obj = in.readObject();
					try {
						 _result = (java.security.cert.X509Certificate[])obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (java.security.cert.X509Certificate[]) broker.narrow(obj,java.security.cert.X509Certificate[].class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public java.security.Principal getPrincipal()  {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, null);
			} else {
				try {
					remote = p4remote.delegate();
				} catch (java.rmi.NoSuchObjectException nso) { 
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, nso);
				}
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				return (java.security.Principal) broker.narrow(p4_replicate(remoteInterface.getPrincipal()), java.security.Principal.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return (java.security.Principal)broker.narrow(p4_replicate(p4_invokeReflect(remote,"getPrincipal",params,p)),java.security.Principal.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					{ 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getPrincipal>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(2);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					java.security.Principal _result;
					obj = in.readObject();
					try {
						 _result = (java.security.Principal)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (java.security.Principal) broker.narrow(obj,java.security.Principal.class);
					}
				return _result;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public com.sap.engine.services.security.remote.RemoteIterator getParentGroups() throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				return (com.sap.engine.services.security.remote.RemoteIterator) broker.narrow(p4_replicate(remoteInterface.getParentGroups()), com.sap.engine.services.security.remote.RemoteIterator.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return (com.sap.engine.services.security.remote.RemoteIterator)broker.narrow(p4_replicate(p4_invokeReflect(remote,"getParentGroups",params,p)),com.sap.engine.services.security.remote.RemoteIterator.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getParentGroups>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getParentGroups>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(3);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					com.sap.engine.services.security.remote.RemoteIterator _result;
					obj = in.readObject();
					try {
						 _result = (com.sap.engine.services.security.remote.RemoteIterator)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (com.sap.engine.services.security.remote.RemoteIterator) broker.narrow(obj,com.sap.engine.services.security.remote.RemoteIterator.class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public java.lang.Object readUserProperty(int _param0) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				return (java.lang.Object) broker.narrow(p4_replicate(remoteInterface.readUserProperty( _param0)), java.lang.Object.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{new Integer(_param0)};
				Class[] p = new Class[]{int.class};
				try { 
					return (java.lang.Object)broker.narrow(p4_replicate(p4_invokeReflect(remote,"readUserProperty",params,p)),java.lang.Object.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <readUserProperty>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <readUserProperty>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(4);
				P4ObjectOutput out = call.getOutputStream();
				out.writeInt( _param0);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					java.lang.Object _result;
					obj = in.readObject();
					try {
						 _result = (java.lang.Object)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (java.lang.Object) broker.narrow(obj,java.lang.Object.class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public void writeUserProperty(int _param0, java.lang.Object _param1) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				ReplicateOutputStream out1 = p4_getReplicateOutput();
				ReplicateInputStream inn1 = p4_getReplicateInput(out1);
				remoteInterface.writeUserProperty( _param0, (java.lang.Object) broker.narrow(p4_replicateWithStreams(inn1,out1,_param1),java.lang.Object.class));
				return;
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				ReplicateOutputStream outt = p4_getReplicateOutput();
				ReplicateInputStream inn = p4_getReplicateInput(outt);
				Object[] params = new Object[]{new Integer(_param0),p4_replicateWithStreams(inn,outt,_param1)};
				Class[] p = new Class[]{int.class,(Class) p4_replicateWithStreams(inn,outt,java.lang.Object.class)};
				try { 
					p4_invokeReflect(remote,"writeUserProperty",params,p);
					return ;
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <writeUserProperty>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <writeUserProperty>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(5);
				P4ObjectOutput out = call.getOutputStream();
				out.writeInt( _param0);
				out.writeObject( _param1);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public void setPassword(char[] _param0, char[] _param1) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				remoteInterface.setPassword( _param0,  _param1);
				return;
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{_param0,_param1};
				Class[] p = new Class[]{char[].class,char[].class};
				try { 
					p4_invokeReflect(remote,"setPassword",params,p);
					return ;
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <setPassword>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <setPassword>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(6);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				out.writeObject( _param1);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public boolean checkUserProperty(int _param0, java.lang.Object _param1) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				ReplicateOutputStream out1 = p4_getReplicateOutput();
				ReplicateInputStream inn1 = p4_getReplicateInput(out1);
				return remoteInterface.checkUserProperty( _param0, (java.lang.Object) broker.narrow(p4_replicateWithStreams(inn1,out1,_param1),java.lang.Object.class));
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				ReplicateOutputStream outt = p4_getReplicateOutput();
				ReplicateInputStream inn = p4_getReplicateInput(outt);
				Object[] params = new Object[]{new Integer(_param0),p4_replicateWithStreams(inn,outt,_param1)};
				Class[] p = new Class[]{int.class,(Class) p4_replicateWithStreams(inn,outt,java.lang.Object.class)};
				try { 
					return ((Boolean) p4_invokeReflect(remote,"checkUserProperty",params,p)).booleanValue();
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <checkUserProperty>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <checkUserProperty>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(7);
				P4ObjectOutput out = call.getOutputStream();
				out.writeInt( _param0);
				out.writeObject( _param1);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
				boolean _result = in.readBoolean();
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public void setCertificates(java.security.cert.X509Certificate[] _param0) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				ReplicateOutputStream out1 = p4_getReplicateOutput();
				ReplicateInputStream inn1 = p4_getReplicateInput(out1);
				remoteInterface.setCertificates((java.security.cert.X509Certificate[]) broker.narrow(p4_replicateWithStreams(inn1,out1,_param0),java.security.cert.X509Certificate[].class));
				return;
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				ReplicateOutputStream outt = p4_getReplicateOutput();
				ReplicateInputStream inn = p4_getReplicateInput(outt);
				Object[] params = new Object[]{p4_replicateWithStreams(inn,outt,_param0)};
				Class[] p = new Class[]{(Class) p4_replicateWithStreams(inn,outt,java.security.cert.X509Certificate[].class)};
				try { 
					p4_invokeReflect(remote,"setCertificates",params,p);
					return ;
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <setCertificates>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <setCertificates>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(8);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public void setPasswordDisabled() throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				remoteInterface.setPasswordDisabled();
				return;
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					p4_invokeReflect(remote,"setPasswordDisabled",params,p);
					return ;
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <setPasswordDisabled>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <setPasswordDisabled>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(9);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public boolean isPasswordDisabled() throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserStoreInfo remoteInterface = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) remote;
				return remoteInterface.isPasswordDisabled();
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return ((Boolean) p4_invokeReflect(remote,"isPasswordDisabled",params,p)).booleanValue();
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <isPasswordDisabled>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <isPasswordDisabled>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(10);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
				boolean _result = in.readBoolean();
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


}
