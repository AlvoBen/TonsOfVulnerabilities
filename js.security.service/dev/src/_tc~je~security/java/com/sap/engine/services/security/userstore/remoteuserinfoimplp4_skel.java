// Class generated by SAP Labs Bulgaria Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.userstore;

import java.rmi.server.Operation;

import com.sap.engine.services.rmi_p4.*;

/**
 *
 * @author RMIC Generator 
 * @version 6.30
 */
public class RemoteUserInfoImplp4_Skel extends P4RemoteObject  implements com.sap.engine.services.rmi_p4.Skeleton, java.rmi.Remote {

	public P4ObjectBroker broker = P4ObjectBroker.init();
	private static final Operation[] operations = {
			new Operation("getCertificates()"),
			new Operation("checkUserProperty(int,java.lang.Object)"),
			new Operation("readUserProperty(int)"),
			new Operation("setPasswordDisabled()"),
			new Operation("setCertificates(java.security.cert.X509Certificate[])"),
			new Operation("getParentGroups()"),
			new Operation("getName()"),
			new Operation("writeUserProperty(int,java.lang.Object)"),
			new Operation("getPrincipal()"),
			new Operation("isPasswordDisabled()"),
			new Operation("setPassword(char[],char[])")};

	public RemoteUserInfoImplp4_Skel () {
	}

	public Operation[] getOperations() {
		return operations;
	}

	private static final String[] _implements = {
			"com.sap.engine.services.security.remote.RemoteUserStoreInfo"};

	public String[] getImplemntsObjects() {
		return _implements;
	}

	public void dispatch(java.rmi.Remote remote, Dispatch call, int opnum) throws java.lang.Exception {

		com.sap.engine.services.security.userstore.RemoteUserInfoImpl impl = (com.sap.engine.services.security.userstore.RemoteUserInfoImpl) delegate();
		P4ObjectInput in = call.getInputStream();

		switch (opnum) {

			case 0 : {  //method public abstract java.security.cert.X509Certificate[] com.sap.engine.services.security.remote.RemoteUserStoreInfo.getCertificates() throws java.rmi.RemoteException
				try {
					java.security.cert.X509Certificate[] _result = impl.getCertificates();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 1 : {  //method public abstract boolean com.sap.engine.services.security.remote.RemoteUserStoreInfo.checkUserProperty(int,java.lang.Object) throws java.rmi.RemoteException
				try {
					int param0 = in.readInt();
					Object obj1;
					java.lang.Object param1;
					obj1 = in.readObject();
					try {
						 param1 = (java.lang.Object)obj1;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param1 = (java.lang.Object) broker.narrow(obj1,java.lang.Object.class);
					}
					boolean _result = impl.checkUserProperty(param0, param1);
					P4ObjectOutput out = call.getOutputStream();
					out.writeBoolean( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 2 : {  //method public abstract java.lang.Object com.sap.engine.services.security.remote.RemoteUserStoreInfo.readUserProperty(int) throws java.rmi.RemoteException
				try {
					int param0 = in.readInt();
					java.lang.Object _result = impl.readUserProperty(param0);
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 3 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStoreInfo.setPasswordDisabled() throws java.rmi.RemoteException
				try {
					impl.setPasswordDisabled();
					P4ObjectOutput out = call.getOutputStream();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 4 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStoreInfo.setCertificates(java.security.cert.X509Certificate[]) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.security.cert.X509Certificate[] param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.security.cert.X509Certificate[])obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (java.security.cert.X509Certificate[]) broker.narrow(obj0,java.security.cert.X509Certificate[].class);
					}
					impl.setCertificates(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 5 : {  //method public abstract com.sap.engine.services.security.remote.RemoteIterator com.sap.engine.services.security.remote.RemoteUserStoreInfo.getParentGroups() throws java.rmi.RemoteException
				try {
					com.sap.engine.services.security.remote.RemoteIterator _result = impl.getParentGroups();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 6 : {  //method public abstract java.lang.String com.sap.engine.services.security.remote.RemoteUserStoreInfo.getName()
				try {
					java.lang.String _result = impl.getName();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 7 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStoreInfo.writeUserProperty(int,java.lang.Object) throws java.rmi.RemoteException
				try {
					int param0 = in.readInt();
					Object obj1;
					java.lang.Object param1;
					obj1 = in.readObject();
					try {
						 param1 = (java.lang.Object)obj1;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param1 = (java.lang.Object) broker.narrow(obj1,java.lang.Object.class);
					}
					impl.writeUserProperty(param0, param1);
					P4ObjectOutput out = call.getOutputStream();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 8 : {  //method public abstract java.security.Principal com.sap.engine.services.security.remote.RemoteUserStoreInfo.getPrincipal()
				try {
					java.security.Principal _result = impl.getPrincipal();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 9 : {  //method public abstract boolean com.sap.engine.services.security.remote.RemoteUserStoreInfo.isPasswordDisabled() throws java.rmi.RemoteException
				try {
					boolean _result = impl.isPasswordDisabled();
					P4ObjectOutput out = call.getOutputStream();
					out.writeBoolean( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 10 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStoreInfo.setPassword(char[],char[]) throws java.rmi.RemoteException
				try {
					Object obj0;
					char[] param0;
					obj0 = in.readObject();
					try {
						 param0 = (char[])obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (char[]) broker.narrow(obj0,char[].class);
					}
					Object obj1;
					char[] param1;
					obj1 = in.readObject();
					try {
						 param1 = (char[])obj1;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param1 = (char[]) broker.narrow(obj1,char[].class);
					}
					impl.setPassword(param0, param1);
					P4ObjectOutput out = call.getOutputStream();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
		}
	}

}
