// Class generated by SAP Labs Bulgaria's RMIC Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.remote;



import com.sap.engine.services.rmi_p4.*;


/**
*
* @author  SAP's RMIC Generator
* @version J2EE Engine 7.0
*/
public class RemoteAuthentication_Stub extends com.sap.engine.services.rmi_p4.StubImpl 
    implements com.sap.engine.services.security.remote.RemoteAuthentication {

  private static final String[] operations = {
      "setProperty(java.lang.String,java.lang.String)",
      "getProperty(java.lang.String)",
      "getProperties()",
      "getAuthenticationUserStore()",
      "getLoginModules(java.lang.String)",
      "getLoginModules()",
      "getTemplate()",
      "setLoginModules(com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[])",
      "setLoginModules(java.lang.String,com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[])",
      "setTemplate(java.lang.String)",
      "registerManagementListener(com.sap.engine.frame.state.ManagementListener)"};

  public String[] p4_getOperations() {
    return operations;
  }

  public void setProperty(java.lang.String _param0, java.lang.String _param1) throws java.rmi.RemoteException {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw new java.rmi.NoSuchObjectException("");
      } else {
        remote = p4remote.delegate();
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        remoteInterface.setProperty( _param0,  _param1);
        return;
      } catch (java.lang.ClassCastException rex) {
        Object[] params = new Object[]{_param0,_param1};
        Class[] p = new Class[]{java.lang.String.class,java.lang.String.class};
        try { 
          p4_invokeReflect(remote,"setProperty",params,p);
          return ;
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          if (target instanceof java.rmi.RemoteException) {
           throw (java.rmi.RemoteException)target;
          } else { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <setProperty>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setProperty", rex);
        throw rex;
      } catch (java.rmi.RemoteException ex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <setProperty>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setProperty", ex);
        throw (java.rmi.RemoteException) p4_replicate(ex);
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(0);
        P4ObjectOutput out = call.getOutputStream();
        out.writeObject( _param0);
        out.writeObject( _param1);
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
      } catch (java.rmi.RemoteException ex) {
        throw ex;
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setProperty", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public java.lang.String getProperty(java.lang.String _param0) throws java.rmi.RemoteException {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw new java.rmi.NoSuchObjectException("");
      } else {
        remote = p4remote.delegate();
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        return remoteInterface.getProperty( _param0);
      } catch (java.lang.ClassCastException rex) {
        Object[] params = new Object[]{_param0};
        Class[] p = new Class[]{java.lang.String.class};
        try { 
          return ((String) p4_invokeReflect(remote,"getProperty",params,p));
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          if (target instanceof java.rmi.RemoteException) {
           throw (java.rmi.RemoteException)target;
          } else { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getProperty>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getProperty", rex);
        throw rex;
      } catch (java.rmi.RemoteException ex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getProperty>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getProperty", ex);
        throw (java.rmi.RemoteException) p4_replicate(ex);
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(1);
        P4ObjectOutput out = call.getOutputStream();
        out.writeObject( _param0);
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
          Object obj;
          java.lang.String _result;
          obj = in.readObject();
          try {
             _result = (java.lang.String)obj;
          } catch (java.lang.ClassCastException ex) {
             _result = (java.lang.String) broker.narrow(obj,java.lang.String.class);
          }
        return _result;
      } catch (java.rmi.RemoteException ex) {
        throw ex;
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getProperty", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public java.util.Map getProperties() throws java.rmi.RemoteException {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw new java.rmi.NoSuchObjectException("");
      } else {
        remote = p4remote.delegate();
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        return (java.util.Map) broker.narrow(p4_replicate(remoteInterface.getProperties()), java.util.Map.class);
      } catch (java.lang.ClassCastException rex) {
        Object[] params = new Object[]{};
        Class[] p = new Class[]{};
        try { 
          return (java.util.Map)broker.narrow(p4_replicate(p4_invokeReflect(remote,"getProperties",params,p)),java.util.Map.class);
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          if (target instanceof java.rmi.RemoteException) {
           throw (java.rmi.RemoteException)target;
          } else { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getProperties>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getProperties", rex);
        throw rex;
      } catch (java.rmi.RemoteException ex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getProperties>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getProperties", ex);
        throw (java.rmi.RemoteException) p4_replicate(ex);
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(2);
        P4ObjectOutput out = call.getOutputStream();
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
          Object obj;
          java.util.Map _result;
          obj = in.readObject();
          try {
             _result = (java.util.Map)obj;
          } catch (java.lang.ClassCastException ex) {
             _result = (java.util.Map) broker.narrow(obj,java.util.Map.class);
          }
        return _result;
      } catch (java.rmi.RemoteException ex) {
        throw ex;
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getProperties", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public com.sap.engine.services.security.remote.RemoteUserStore getAuthenticationUserStore() throws java.rmi.RemoteException {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw new java.rmi.NoSuchObjectException("");
      } else {
        remote = p4remote.delegate();
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        return (com.sap.engine.services.security.remote.RemoteUserStore) broker.narrow(p4_replicate(remoteInterface.getAuthenticationUserStore()), com.sap.engine.services.security.remote.RemoteUserStore.class);
      } catch (java.lang.ClassCastException rex) {
        Object[] params = new Object[]{};
        Class[] p = new Class[]{};
        try { 
          return (com.sap.engine.services.security.remote.RemoteUserStore)broker.narrow(p4_replicate(p4_invokeReflect(remote,"getAuthenticationUserStore",params,p)),com.sap.engine.services.security.remote.RemoteUserStore.class);
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          if (target instanceof java.rmi.RemoteException) {
           throw (java.rmi.RemoteException)target;
          } else { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getAuthenticationUserStore>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getAuthenticationUserStore", rex);
        throw rex;
      } catch (java.rmi.RemoteException ex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getAuthenticationUserStore>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getAuthenticationUserStore", ex);
        throw (java.rmi.RemoteException) p4_replicate(ex);
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(3);
        P4ObjectOutput out = call.getOutputStream();
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
          Object obj;
          com.sap.engine.services.security.remote.RemoteUserStore _result;
          obj = in.readObject();
          try {
             _result = (com.sap.engine.services.security.remote.RemoteUserStore)obj;
          } catch (java.lang.ClassCastException ex) {
             _result = (com.sap.engine.services.security.remote.RemoteUserStore) broker.narrow(obj,com.sap.engine.services.security.remote.RemoteUserStore.class);
          }
        return _result;
      } catch (java.rmi.RemoteException ex) {
        throw ex;
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getAuthenticationUserStore", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] getLoginModules(java.lang.String _param0) throws java.rmi.RemoteException {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw new java.rmi.NoSuchObjectException("");
      } else {
        remote = p4remote.delegate();
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        return (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[]) broker.narrow(p4_replicate(remoteInterface.getLoginModules( _param0)), com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class);
      } catch (java.lang.ClassCastException rex) {
        Object[] params = new Object[]{_param0};
        Class[] p = new Class[]{java.lang.String.class};
        try { 
          return (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[])broker.narrow(p4_replicate(p4_invokeReflect(remote,"getLoginModules",params,p)),com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class);
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          if (target instanceof java.rmi.RemoteException) {
           throw (java.rmi.RemoteException)target;
          } else { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getLoginModules>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getLoginModules", rex);
        throw rex;
      } catch (java.rmi.RemoteException ex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getLoginModules>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getLoginModules", ex);
        throw (java.rmi.RemoteException) p4_replicate(ex);
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(4);
        P4ObjectOutput out = call.getOutputStream();
        out.writeObject( _param0);
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
          Object obj;
          com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] _result;
          obj = in.readObject();
          try {
             _result = (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[])obj;
          } catch (java.lang.ClassCastException ex) {
             _result = (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[]) broker.narrow(obj,com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class);
          }
        return _result;
      } catch (java.rmi.RemoteException ex) {
        throw ex;
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getLoginModules", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] getLoginModules() throws java.rmi.RemoteException {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw new java.rmi.NoSuchObjectException("");
      } else {
        remote = p4remote.delegate();
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        return (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[]) broker.narrow(p4_replicate(remoteInterface.getLoginModules()), com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class);
      } catch (java.lang.ClassCastException rex) {
        Object[] params = new Object[]{};
        Class[] p = new Class[]{};
        try { 
          return (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[])broker.narrow(p4_replicate(p4_invokeReflect(remote,"getLoginModules",params,p)),com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class);
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          if (target instanceof java.rmi.RemoteException) {
           throw (java.rmi.RemoteException)target;
          } else { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getLoginModules>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getLoginModules", rex);
        throw rex;
      } catch (java.rmi.RemoteException ex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getLoginModules>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getLoginModules", ex);
        throw (java.rmi.RemoteException) p4_replicate(ex);
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(5);
        P4ObjectOutput out = call.getOutputStream();
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
          Object obj;
          com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] _result;
          obj = in.readObject();
          try {
             _result = (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[])obj;
          } catch (java.lang.ClassCastException ex) {
             _result = (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[]) broker.narrow(obj,com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class);
          }
        return _result;
      } catch (java.rmi.RemoteException ex) {
        throw ex;
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getLoginModules", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public java.lang.String getTemplate() throws java.rmi.RemoteException {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw new java.rmi.NoSuchObjectException("");
      } else {
        remote = p4remote.delegate();
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        return remoteInterface.getTemplate();
      } catch (java.lang.ClassCastException rex) {
        Object[] params = new Object[]{};
        Class[] p = new Class[]{};
        try { 
          return ((String) p4_invokeReflect(remote,"getTemplate",params,p));
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          if (target instanceof java.rmi.RemoteException) {
           throw (java.rmi.RemoteException)target;
          } else { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getTemplate>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getTemplate", rex);
        throw rex;
      } catch (java.rmi.RemoteException ex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <getTemplate>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getTemplate", ex);
        throw (java.rmi.RemoteException) p4_replicate(ex);
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(6);
        P4ObjectOutput out = call.getOutputStream();
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
          Object obj;
          java.lang.String _result;
          obj = in.readObject();
          try {
             _result = (java.lang.String)obj;
          } catch (java.lang.ClassCastException ex) {
             _result = (java.lang.String) broker.narrow(obj,java.lang.String.class);
          }
        return _result;
      } catch (java.rmi.RemoteException ex) {
        throw ex;
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "getTemplate", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public void setLoginModules(com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] _param0) throws java.rmi.RemoteException {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw new java.rmi.NoSuchObjectException("");
      } else {
        remote = p4remote.delegate();
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        ReplicateOutputStream out1 = p4_getReplicateOutput();
        ReplicateInputStream inn1 = p4_getReplicateInput(out1);
        remoteInterface.setLoginModules((com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[]) broker.narrow(p4_replicateWithStreams(inn1,out1,_param0),com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class));
        return;
      } catch (java.lang.ClassCastException rex) {
        ReplicateOutputStream outt = p4_getReplicateOutput();
        ReplicateInputStream inn = p4_getReplicateInput(outt);
        Object[] params = new Object[]{p4_replicateWithStreams(inn,outt,_param0)};
        Class[] p = new Class[]{(Class) p4_replicateWithStreams(inn,outt,com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class)};
        try { 
          p4_invokeReflect(remote,"setLoginModules",params,p);
          return ;
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          if (target instanceof java.rmi.RemoteException) {
           throw (java.rmi.RemoteException)target;
          } else { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <setLoginModules>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setLoginModules", rex);
        throw rex;
      } catch (java.rmi.RemoteException ex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <setLoginModules>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setLoginModules", ex);
        throw (java.rmi.RemoteException) p4_replicate(ex);
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(7);
        P4ObjectOutput out = call.getOutputStream();
        out.writeObject( _param0);
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
      } catch (java.rmi.RemoteException ex) {
        throw ex;
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setLoginModules", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public void setLoginModules(java.lang.String _param0, com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] _param1) throws java.rmi.RemoteException {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw new java.rmi.NoSuchObjectException("");
      } else {
        remote = p4remote.delegate();
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        ReplicateOutputStream out1 = p4_getReplicateOutput();
        ReplicateInputStream inn1 = p4_getReplicateInput(out1);
        remoteInterface.setLoginModules( _param0, (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[]) broker.narrow(p4_replicateWithStreams(inn1,out1,_param1),com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class));
        return;
      } catch (java.lang.ClassCastException rex) {
        ReplicateOutputStream outt = p4_getReplicateOutput();
        ReplicateInputStream inn = p4_getReplicateInput(outt);
        Object[] params = new Object[]{_param0,p4_replicateWithStreams(inn,outt,_param1)};
        Class[] p = new Class[]{java.lang.String.class,(Class) p4_replicateWithStreams(inn,outt,com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class)};
        try { 
          p4_invokeReflect(remote,"setLoginModules",params,p);
          return ;
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          if (target instanceof java.rmi.RemoteException) {
           throw (java.rmi.RemoteException)target;
          } else { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <setLoginModules>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setLoginModules", rex);
        throw rex;
      } catch (java.rmi.RemoteException ex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <setLoginModules>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setLoginModules", ex);
        throw (java.rmi.RemoteException) p4_replicate(ex);
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(8);
        P4ObjectOutput out = call.getOutputStream();
        out.writeObject( _param0);
        out.writeObject( _param1);
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
      } catch (java.rmi.RemoteException ex) {
        throw ex;
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setLoginModules", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public void setTemplate(java.lang.String _param0) throws java.rmi.RemoteException {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw new java.rmi.NoSuchObjectException("");
      } else {
        remote = p4remote.delegate();
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        remoteInterface.setTemplate( _param0);
        return;
      } catch (java.lang.ClassCastException rex) {
        Object[] params = new Object[]{_param0};
        Class[] p = new Class[]{java.lang.String.class};
        try { 
          p4_invokeReflect(remote,"setTemplate",params,p);
          return ;
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          if (target instanceof java.rmi.RemoteException) {
           throw (java.rmi.RemoteException)target;
          } else { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <setTemplate>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setTemplate", rex);
        throw rex;
      } catch (java.rmi.RemoteException ex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <setTemplate>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setTemplate", ex);
        throw (java.rmi.RemoteException) p4_replicate(ex);
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(9);
        P4ObjectOutput out = call.getOutputStream();
        out.writeObject( _param0);
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
      } catch (java.rmi.RemoteException ex) {
        throw ex;
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "setTemplate", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public void registerManagementListener(com.sap.engine.frame.state.ManagementListener _param0)  {

    if (isLocal) {
      java.rmi.Remote remote;
      if (p4remote == null) {
        throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, null);
      } else {
        try {
          remote = p4remote.delegate();
        } catch (java.rmi.NoSuchObjectException nso) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, nso);
        }
      }
      try {
        com.sap.engine.services.security.remote.RemoteAuthentication remoteInterface = (com.sap.engine.services.security.remote.RemoteAuthentication) remote;
        ReplicateOutputStream out1 = p4_getReplicateOutput();
        ReplicateInputStream inn1 = p4_getReplicateInput(out1);
        remoteInterface.registerManagementListener((com.sap.engine.frame.state.ManagementListener) broker.narrow(p4_replicateWithStreams(inn1,out1,_param0),com.sap.engine.frame.state.ManagementListener.class));
        return;
      } catch (java.lang.ClassCastException rex) {
        ReplicateOutputStream outt = p4_getReplicateOutput();
        ReplicateInputStream inn = p4_getReplicateInput(outt);
        Object[] params = new Object[]{p4_replicateWithStreams(inn,outt,_param0)};
        Class[] p = new Class[]{(Class) p4_replicateWithStreams(inn,outt,com.sap.engine.frame.state.ManagementListener.class)};
        try { 
          p4_invokeReflect(remote,"registerManagementListener",params,p);
          return ;
        } catch (java.lang.NoSuchMethodException nsme) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
        } catch (java.lang.IllegalAccessException iae) {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
        } catch (java.lang.reflect.InvocationTargetException ite) {
          Throwable target = (Throwable) p4_replicate(ite.getTargetException());
          { 
           throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
          }
        } 
      } catch (java.lang.RuntimeException rex) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.logDebug("P4 Call exception: Exception in execute <registerManagementListener>");
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "registerManagementListener", rex);
        throw rex;
      } 
    }
      com.sap.engine.services.rmi_p4.Call call = null;
      try {
        call = p4_newCall(10);
        P4ObjectOutput out = call.getOutputStream();
        out.writeObject( _param0);
        p4_invoke(call);
        P4ObjectInput in = call.getResultStream();
      } catch (java.lang.Exception tr) {
        com.sap.engine.services.rmi_p4.exception.P4Logger.traceDebug(this.getClass(), "registerManagementListener", tr);
         // ex.printStackTrace();
        if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
          throw (RuntimeException)tr;
        } else {
          throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
        }
      } finally {
        p4_done(call);
        call.releaseInputStream();
      }
  }



  public byte[] readByteArray(com.sap.engine.services.rmi_p4.P4ObjectInput in, int length){
    byte[] buffer = new byte[length];
    int readed = 0;
    int offset = 0;
    try {
      while (readed != -1 && offset < length) {
        readed = in.read(buffer, offset, length - offset);
        offset += readed;
      }
    } catch (java.io.IOException ioe) {
      com.sap.engine.services.rmi_p4.exception.P4Logger.getLocation().debugT(this + ". Problem while read byte[] from the stream : " + ioe.getMessage());
      com.sap.engine.services.rmi_p4.exception.P4Logger.getLocation().throwing(ioe);
    }
    return buffer;
  }


}
