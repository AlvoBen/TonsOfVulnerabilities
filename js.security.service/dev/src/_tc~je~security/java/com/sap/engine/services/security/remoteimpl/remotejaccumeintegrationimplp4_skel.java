// Class generated by SAP Labs Bulgaria's RMIC Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.remoteimpl;

import java.rmi.server.Operation;

import com.sap.engine.services.rmi_p4.*;

/**
 *
 * @author RMIC Generator 
 * @version 6.30
 */
public class RemoteJACCUMEIntegrationImplp4_Skel extends P4RemoteObject  implements com.sap.engine.services.rmi_p4.Skeleton, java.rmi.Remote {

  public P4ObjectBroker broker = P4ObjectBroker.init();
  private static final Operation[] operations = {
      new Operation("removeUMERole(java.lang.String)"),
      new Operation("addUsersAndGroupsToJACCRole(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])"),
      new Operation("setRunAsIdentity(java.lang.String,java.lang.String,java.lang.String)"),
      new Operation("getRunAsIdentity(java.lang.String,java.lang.String)"),
      new Operation("addUMERoleToServiceRole(java.lang.String,java.lang.String,java.lang.String)"),
      new Operation("addUMERoleToJACCRole(java.lang.String,java.lang.String,java.lang.String)")};

  public RemoteJACCUMEIntegrationImplp4_Skel () {
  }

  public Operation[] getOperations() {
    return operations;
  }

  private static final String[] _implements = {
      "com.sap.engine.services.security.remote.RemoteJACCUMEIntegration"};

  public String[] getImplemntsObjects() {
    return _implements;
  }

  public void dispatch(java.rmi.Remote remote, Dispatch call, int opnum) throws Exception {

    com.sap.engine.services.security.remoteimpl.RemoteJACCUMEIntegrationImpl impl = (com.sap.engine.services.security.remoteimpl.RemoteJACCUMEIntegrationImpl) delegate();
    P4ObjectInput in = call.getInputStream();

    switch (opnum) {

      case 0 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteJACCUMEIntegration.removeUMERole(java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          impl.removeUMERole(param0);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 1 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteJACCUMEIntegration.addUsersAndGroupsToJACCRole(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          Object obj1;
          java.lang.String param1;
          obj1 = in.readObject();
          try {
             param1 = (java.lang.String)obj1;
          } catch (ClassCastException ex) {
             param1 = (java.lang.String) broker.narrow(obj1,java.lang.String.class);
          }
          Object obj2;
          java.lang.String[] param2;
          obj2 = in.readObject();
          try {
             param2 = (java.lang.String[])obj2;
          } catch (ClassCastException ex) {
             param2 = (java.lang.String[]) broker.narrow(obj2,java.lang.String[].class);
          }
          Object obj3;
          java.lang.String[] param3;
          obj3 = in.readObject();
          try {
             param3 = (java.lang.String[])obj3;
          } catch (ClassCastException ex) {
             param3 = (java.lang.String[]) broker.narrow(obj3,java.lang.String[].class);
          }
          impl.addUsersAndGroupsToJACCRole(param0, param1, param2, param3);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 2 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteJACCUMEIntegration.setRunAsIdentity(java.lang.String,java.lang.String,java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          Object obj1;
          java.lang.String param1;
          obj1 = in.readObject();
          try {
             param1 = (java.lang.String)obj1;
          } catch (ClassCastException ex) {
             param1 = (java.lang.String) broker.narrow(obj1,java.lang.String.class);
          }
          Object obj2;
          java.lang.String param2;
          obj2 = in.readObject();
          try {
             param2 = (java.lang.String)obj2;
          } catch (ClassCastException ex) {
             param2 = (java.lang.String) broker.narrow(obj2,java.lang.String.class);
          }
          impl.setRunAsIdentity(param0, param1, param2);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 3 : {  //method public abstract java.lang.String com.sap.engine.services.security.remote.RemoteJACCUMEIntegration.getRunAsIdentity(java.lang.String,java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          Object obj1;
          java.lang.String param1;
          obj1 = in.readObject();
          try {
             param1 = (java.lang.String)obj1;
          } catch (ClassCastException ex) {
             param1 = (java.lang.String) broker.narrow(obj1,java.lang.String.class);
          }
          java.lang.String _result = impl.getRunAsIdentity(param0, param1);
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 4 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteJACCUMEIntegration.addUMERoleToServiceRole(java.lang.String,java.lang.String,java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          Object obj1;
          java.lang.String param1;
          obj1 = in.readObject();
          try {
             param1 = (java.lang.String)obj1;
          } catch (ClassCastException ex) {
             param1 = (java.lang.String) broker.narrow(obj1,java.lang.String.class);
          }
          Object obj2;
          java.lang.String param2;
          obj2 = in.readObject();
          try {
             param2 = (java.lang.String)obj2;
          } catch (ClassCastException ex) {
             param2 = (java.lang.String) broker.narrow(obj2,java.lang.String.class);
          }
          impl.addUMERoleToServiceRole(param0, param1, param2);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 5 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteJACCUMEIntegration.addUMERoleToJACCRole(java.lang.String,java.lang.String,java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          Object obj1;
          java.lang.String param1;
          obj1 = in.readObject();
          try {
             param1 = (java.lang.String)obj1;
          } catch (ClassCastException ex) {
             param1 = (java.lang.String) broker.narrow(obj1,java.lang.String.class);
          }
          Object obj2;
          java.lang.String param2;
          obj2 = in.readObject();
          try {
             param2 = (java.lang.String)obj2;
          } catch (ClassCastException ex) {
             param2 = (java.lang.String) broker.narrow(obj2,java.lang.String.class);
          }
          impl.addUMERoleToJACCRole(param0, param1, param2);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
    }
  }


  public byte[] readByteArray(com.sap.engine.services.rmi_p4.P4ObjectInput in, int length){
    byte[] buffer = new byte[length];
    int readed = 0;
    int offset = 0;
    try {
      while (readed != -1 && offset < length) {
        readed = in.read(buffer, offset, length - offset);
        offset += readed;
      }
    } catch (java.io.IOException ioe) {
      com.sap.engine.services.rmi_p4.exception.P4Logger.getLocation().debugT(this + ". Problem while read byte[] from the stream : " + ioe.getMessage());
      com.sap.engine.services.rmi_p4.exception.P4Logger.getLocation().throwing(ioe);
    }
    return buffer;
  }


}
