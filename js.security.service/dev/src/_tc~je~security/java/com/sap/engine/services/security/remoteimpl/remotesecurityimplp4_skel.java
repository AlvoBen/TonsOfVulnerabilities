// Class generated by SAP Labs Bulgaria's RMIC Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.remoteimpl;

import java.rmi.server.Operation;

import com.sap.engine.services.rmi_p4.*;

/**
 *
 * @author RMIC Generator 
 * @version 6.30
 */
public class RemoteSecurityImplp4_Skel extends P4RemoteObject  implements com.sap.engine.services.rmi_p4.Skeleton, java.rmi.Remote {

  public P4ObjectBroker broker = P4ObjectBroker.init();
  private static final Operation[] operations = {
      new Operation("getSecuritySessions()"),
      new Operation("listPolicyConfigurations()"),
      new Operation("registerPolicyConfiguration(java.lang.String)"),
      new Operation("getActiveSessionsCount()"),
      new Operation("getInvalidSessionsCount(java.lang.String)"),
      new Operation("unregisterPolicyConfiguration(java.lang.String)"),
      new Operation("getRemoteJACCUMEIntegration()"),
      new Operation("getAuthenticationStacks()"),
      new Operation("getRemoteLoginContext(java.lang.String,java.lang.Object[])"),
      new Operation("registerManagementListener(com.sap.engine.frame.state.ManagementListener)"),
      new Operation("getUserStoreAccessCount()"),
      new Operation("getTimedOutSessionsCount()"),
      new Operation("getPolicyConfiguration(java.lang.String)"),
      new Operation("getRemoteLoginContext(java.lang.String)"),
      new Operation("getInvalidSessionsCount()"),
      new Operation("getTimedOutSessionsCount(java.lang.String)"),
      new Operation("getProtectionDomains()"),
      new Operation("getRemoteUserStoreFactory()"),
      new Operation("registerPolicyConfiguration(java.lang.String,byte)"),
      new Operation("getTotalSessionsCount()"),
      new Operation("getUnsuccessfullLogonAttemptsCount(java.lang.String)"),
      new Operation("getCryptography()"),
      new Operation("getRemoteLoginContext()"),
      new Operation("getLoggedOffSessionsCount(java.lang.String)"),
      new Operation("getLoggedUsersCount(java.lang.String)"),
      new Operation("getUnsuccessfullLogonAttemptsCount()"),
      new Operation("getLoggedOffSessionsCount()"),
      new Operation("getTotalSessionsCount(java.lang.String)"),
      new Operation("getLoggedUsersCount()"),
      new Operation("getActiveSessionsCount(java.lang.String)")};

  public RemoteSecurityImplp4_Skel () {
  }

  public Operation[] getOperations() {
    return operations;
  }

  private static final String[] _implements = {
      "com.sap.engine.services.security.remote.RemoteSecurity"};

  public String[] getImplemntsObjects() {
    return _implements;
  }

  public void dispatch(java.rmi.Remote remote, Dispatch call, int opnum) throws Exception {

    com.sap.engine.services.security.remoteimpl.RemoteSecurityImpl impl = (com.sap.engine.services.security.remoteimpl.RemoteSecurityImpl) delegate();
    P4ObjectInput in = call.getInputStream();

    switch (opnum) {

      case 0 : {  //method public abstract com.sap.engine.services.security.remote.sessions.RemoteSecuritySessions com.sap.engine.services.security.remote.RemoteSecurity.getSecuritySessions() throws java.rmi.RemoteException
        try {
          com.sap.engine.services.security.remote.sessions.RemoteSecuritySessions _result = impl.getSecuritySessions();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 1 : {  //method public abstract java.lang.String[] com.sap.engine.services.security.remote.RemoteSecurity.listPolicyConfigurations() throws java.rmi.RemoteException
        try {
          java.lang.String[] _result = impl.listPolicyConfigurations();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 2 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteSecurity.registerPolicyConfiguration(java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          impl.registerPolicyConfiguration(param0);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 3 : {  //method public abstract int com.sap.engine.services.security.remote.RemoteSecurity.getActiveSessionsCount()
        try {
          int _result = impl.getActiveSessionsCount();
          P4ObjectOutput out = call.getOutputStream();
          out.writeInt( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 4 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getInvalidSessionsCount(java.lang.String)
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          long _result = impl.getInvalidSessionsCount(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 5 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteSecurity.unregisterPolicyConfiguration(java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          impl.unregisterPolicyConfiguration(param0);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 6 : {  //method public abstract com.sap.engine.services.security.remote.RemoteJACCUMEIntegration com.sap.engine.services.security.remote.RemoteSecurity.getRemoteJACCUMEIntegration() throws java.rmi.RemoteException
        try {
          com.sap.engine.services.security.remote.RemoteJACCUMEIntegration _result = impl.getRemoteJACCUMEIntegration();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 7 : {  //method public abstract java.lang.String[] com.sap.engine.services.security.remote.RemoteSecurity.getAuthenticationStacks()
        try {
          java.lang.String[] _result = impl.getAuthenticationStacks();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 8 : {  //method public abstract com.sap.engine.services.security.remote.login.RemoteLoginContextHelper com.sap.engine.services.security.remote.RemoteSecurity.getRemoteLoginContext(java.lang.String,java.lang.Object[]) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          Object obj1;
          java.lang.Object[] param1;
          obj1 = in.readObject();
          try {
             param1 = (java.lang.Object[])obj1;
          } catch (ClassCastException ex) {
             param1 = (java.lang.Object[]) broker.narrow(obj1,java.lang.Object[].class);
          }
          com.sap.engine.services.security.remote.login.RemoteLoginContextHelper _result = impl.getRemoteLoginContext(param0, param1);
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 9 : {  //method public abstract void com.sap.engine.frame.state.ManagementInterface.registerManagementListener(com.sap.engine.frame.state.ManagementListener)
        try {
          Object obj0;
          com.sap.engine.frame.state.ManagementListener param0;
          obj0 = in.readObject();
          try {
             param0 = (com.sap.engine.frame.state.ManagementListener)obj0;
          } catch (ClassCastException ex) {
             param0 = (com.sap.engine.frame.state.ManagementListener) broker.narrow(obj0,com.sap.engine.frame.state.ManagementListener.class);
          }
          impl.registerManagementListener(param0);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 10 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getUserStoreAccessCount()
        try {
          long _result = impl.getUserStoreAccessCount();
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 11 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getTimedOutSessionsCount()
        try {
          long _result = impl.getTimedOutSessionsCount();
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 12 : {  //method public abstract com.sap.engine.services.security.remote.RemotePolicyConfiguration com.sap.engine.services.security.remote.RemoteSecurity.getPolicyConfiguration(java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          com.sap.engine.services.security.remote.RemotePolicyConfiguration _result = impl.getPolicyConfiguration(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 13 : {  //method public abstract com.sap.engine.services.security.remote.login.RemoteLoginContextHelper com.sap.engine.services.security.remote.RemoteSecurity.getRemoteLoginContext(java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          com.sap.engine.services.security.remote.login.RemoteLoginContextHelper _result = impl.getRemoteLoginContext(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 14 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getInvalidSessionsCount()
        try {
          long _result = impl.getInvalidSessionsCount();
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 15 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getTimedOutSessionsCount(java.lang.String)
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          long _result = impl.getTimedOutSessionsCount(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 16 : {  //method public abstract com.sap.engine.services.security.remote.domains.RemoteProtectionDomains com.sap.engine.services.security.remote.RemoteSecurity.getProtectionDomains() throws java.rmi.RemoteException
        try {
          com.sap.engine.services.security.remote.domains.RemoteProtectionDomains _result = impl.getProtectionDomains();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 17 : {  //method public abstract com.sap.engine.services.security.remote.RemoteUserStoreFactory com.sap.engine.services.security.remote.RemoteSecurity.getRemoteUserStoreFactory() throws java.rmi.RemoteException
        try {
          com.sap.engine.services.security.remote.RemoteUserStoreFactory _result = impl.getRemoteUserStoreFactory();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 18 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteSecurity.registerPolicyConfiguration(java.lang.String,byte) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          byte param1 = in.readByte();
          impl.registerPolicyConfiguration(param0, param1);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 19 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getTotalSessionsCount()
        try {
          long _result = impl.getTotalSessionsCount();
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 20 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getUnsuccessfullLogonAttemptsCount(java.lang.String)
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          long _result = impl.getUnsuccessfullLogonAttemptsCount(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 21 : {  //method public abstract com.sap.engine.services.security.remote.crypt.RemoteCryptography com.sap.engine.services.security.remote.RemoteSecurity.getCryptography() throws java.rmi.RemoteException
        try {
          com.sap.engine.services.security.remote.crypt.RemoteCryptography _result = impl.getCryptography();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 22 : {  //method public abstract com.sap.engine.services.security.remote.login.RemoteLoginContextHelper com.sap.engine.services.security.remote.RemoteSecurity.getRemoteLoginContext() throws java.rmi.RemoteException
        try {
          com.sap.engine.services.security.remote.login.RemoteLoginContextHelper _result = impl.getRemoteLoginContext();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 23 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getLoggedOffSessionsCount(java.lang.String)
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          long _result = impl.getLoggedOffSessionsCount(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 24 : {  //method public abstract int com.sap.engine.services.security.remote.RemoteSecurity.getLoggedUsersCount(java.lang.String)
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          int _result = impl.getLoggedUsersCount(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeInt( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 25 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getUnsuccessfullLogonAttemptsCount()
        try {
          long _result = impl.getUnsuccessfullLogonAttemptsCount();
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 26 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getLoggedOffSessionsCount()
        try {
          long _result = impl.getLoggedOffSessionsCount();
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 27 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteSecurity.getTotalSessionsCount(java.lang.String)
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          long _result = impl.getTotalSessionsCount(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeLong( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 28 : {  //method public abstract int com.sap.engine.services.security.remote.RemoteSecurity.getLoggedUsersCount()
        try {
          int _result = impl.getLoggedUsersCount();
          P4ObjectOutput out = call.getOutputStream();
          out.writeInt( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 29 : {  //method public abstract int com.sap.engine.services.security.remote.RemoteSecurity.getActiveSessionsCount(java.lang.String)
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          int _result = impl.getActiveSessionsCount(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeInt( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
    }
  }


  public byte[] readByteArray(com.sap.engine.services.rmi_p4.P4ObjectInput in, int length){
    byte[] buffer = new byte[length];
    int readed = 0;
    int offset = 0;
    try {
      while (readed != -1 && offset < length) {
        readed = in.read(buffer, offset, length - offset);
        offset += readed;
      }
    } catch (java.io.IOException ioe) {
      com.sap.engine.services.rmi_p4.exception.P4Logger.getLocation().debugT(this + ". Problem while read byte[] from the stream : " + ioe.getMessage());
      com.sap.engine.services.rmi_p4.exception.P4Logger.getLocation().throwing(ioe);
    }
    return buffer;
  }


}
