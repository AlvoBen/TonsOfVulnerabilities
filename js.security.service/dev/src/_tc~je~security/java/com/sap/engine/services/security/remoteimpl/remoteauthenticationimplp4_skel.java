// Class generated by SAP Labs Bulgaria's RMIC Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.remoteimpl;

import java.rmi.server.Operation;

import com.sap.engine.services.rmi_p4.*;

/**
 *
 * @author RMIC Generator 
 * @version 6.30
 */
public class RemoteAuthenticationImplp4_Skel extends P4RemoteObject  implements com.sap.engine.services.rmi_p4.Skeleton, java.rmi.Remote {

  public P4ObjectBroker broker = P4ObjectBroker.init();
  private static final Operation[] operations = {
      new Operation("setTemplate(java.lang.String)"),
      new Operation("getLoginModules(java.lang.String)"),
      new Operation("getProperties()"),
      new Operation("getProperty(java.lang.String)"),
      new Operation("setLoginModules(com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[])"),
      new Operation("getLoginModules()"),
      new Operation("setLoginModules(java.lang.String,com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[])"),
      new Operation("getTemplate()"),
      new Operation("setProperty(java.lang.String,java.lang.String)"),
      new Operation("getAuthenticationUserStore()"),
      new Operation("registerManagementListener(com.sap.engine.frame.state.ManagementListener)")};

  public RemoteAuthenticationImplp4_Skel () {
  }

  public Operation[] getOperations() {
    return operations;
  }

  private static final String[] _implements = {
      "com.sap.engine.services.security.remote.RemoteAuthentication"};

  public String[] getImplemntsObjects() {
    return _implements;
  }

  public void dispatch(java.rmi.Remote remote, Dispatch call, int opnum) throws Exception {

    com.sap.engine.services.security.remoteimpl.RemoteAuthenticationImpl impl = (com.sap.engine.services.security.remoteimpl.RemoteAuthenticationImpl) delegate();
    P4ObjectInput in = call.getInputStream();

    switch (opnum) {

      case 0 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteAuthentication.setTemplate(java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          impl.setTemplate(param0);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 1 : {  //method public abstract com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] com.sap.engine.services.security.remote.RemoteAuthentication.getLoginModules(java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] _result = impl.getLoginModules(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 2 : {  //method public abstract java.util.Map com.sap.engine.services.security.remote.RemoteAuthentication.getProperties() throws java.rmi.RemoteException
        try {
          java.util.Map _result = impl.getProperties();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 3 : {  //method public abstract java.lang.String com.sap.engine.services.security.remote.RemoteAuthentication.getProperty(java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          java.lang.String _result = impl.getProperty(param0);
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 4 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteAuthentication.setLoginModules(com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[]) throws java.rmi.RemoteException
        try {
          Object obj0;
          com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] param0;
          obj0 = in.readObject();
          try {
             param0 = (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[])obj0;
          } catch (ClassCastException ex) {
             param0 = (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[]) broker.narrow(obj0,com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class);
          }
          impl.setLoginModules(param0);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 5 : {  //method public abstract com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] com.sap.engine.services.security.remote.RemoteAuthentication.getLoginModules() throws java.rmi.RemoteException
        try {
          com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] _result = impl.getLoginModules();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 6 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteAuthentication.setLoginModules(java.lang.String,com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[]) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          Object obj1;
          com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[] param1;
          obj1 = in.readObject();
          try {
             param1 = (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[])obj1;
          } catch (ClassCastException ex) {
             param1 = (com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[]) broker.narrow(obj1,com.sap.engine.services.security.remote.authentication.RemoteAppConfigurationEntry[].class);
          }
          impl.setLoginModules(param0, param1);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 7 : {  //method public abstract java.lang.String com.sap.engine.services.security.remote.RemoteAuthentication.getTemplate() throws java.rmi.RemoteException
        try {
          java.lang.String _result = impl.getTemplate();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 8 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteAuthentication.setProperty(java.lang.String,java.lang.String) throws java.rmi.RemoteException
        try {
          Object obj0;
          java.lang.String param0;
          obj0 = in.readObject();
          try {
             param0 = (java.lang.String)obj0;
          } catch (ClassCastException ex) {
             param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
          }
          Object obj1;
          java.lang.String param1;
          obj1 = in.readObject();
          try {
             param1 = (java.lang.String)obj1;
          } catch (ClassCastException ex) {
             param1 = (java.lang.String) broker.narrow(obj1,java.lang.String.class);
          }
          impl.setProperty(param0, param1);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 9 : {  //method public abstract com.sap.engine.services.security.remote.RemoteUserStore com.sap.engine.services.security.remote.RemoteAuthentication.getAuthenticationUserStore() throws java.rmi.RemoteException
        try {
          com.sap.engine.services.security.remote.RemoteUserStore _result = impl.getAuthenticationUserStore();
          P4ObjectOutput out = call.getOutputStream();
          out.writeObject( _result);
          out.flush();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
      case 10 : {  //method public abstract void com.sap.engine.frame.state.ManagementInterface.registerManagementListener(com.sap.engine.frame.state.ManagementListener)
        try {
          Object obj0;
          com.sap.engine.frame.state.ManagementListener param0;
          obj0 = in.readObject();
          try {
             param0 = (com.sap.engine.frame.state.ManagementListener)obj0;
          } catch (ClassCastException ex) {
             param0 = (com.sap.engine.frame.state.ManagementListener) broker.narrow(obj0,com.sap.engine.frame.state.ManagementListener.class);
          }
          impl.registerManagementListener(param0);
          P4ObjectOutput out = call.getOutputStream();
        } catch (java.lang.Exception ex) {
          throw ex;
        }
        break;
      }
    }
  }


  public byte[] readByteArray(com.sap.engine.services.rmi_p4.P4ObjectInput in, int length){
    byte[] buffer = new byte[length];
    int readed = 0;
    int offset = 0;
    try {
      while (readed != -1 && offset < length) {
        readed = in.read(buffer, offset, length - offset);
        offset += readed;
      }
    } catch (java.io.IOException ioe) {
      com.sap.engine.services.rmi_p4.exception.P4Logger.getLocation().debugT(this + ". Problem while read byte[] from the stream : " + ioe.getMessage());
      com.sap.engine.services.rmi_p4.exception.P4Logger.getLocation().throwing(ioe);
    }
    return buffer;
  }


}
