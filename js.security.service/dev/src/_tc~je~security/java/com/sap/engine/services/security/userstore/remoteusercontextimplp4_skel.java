// Class generated by SAP Labs Bulgaria Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.userstore;

import java.rmi.server.Operation;

import com.sap.engine.services.rmi_p4.*;

/**
 *
 * @author RMIC Generator 
 * @version 6.30
 */
public class RemoteUserContextImplp4_Skel extends P4RemoteObject  implements com.sap.engine.services.rmi_p4.Skeleton, java.rmi.Remote {

	public P4ObjectBroker broker = P4ObjectBroker.init();
	private static final Operation[] operations = {
			new Operation("getSearchFilter()"),
			new Operation("fillSubject(com.sap.engine.services.security.remote.RemoteUserInfo,javax.security.auth.Subject)"),
			new Operation("getFilterUsername()"),
			new Operation("listUsers()"),
			new Operation("isSubjectRetrievalSupported()"),
			new Operation("listRootUsers()"),
			new Operation("setFilterPassword(com.sap.engine.interfaces.security.userstore.spi.FilterPassword)"),
			new Operation("isEmergencyUser(java.lang.String)"),
			new Operation("isInEmergencyMode()"),
			new Operation("refresh(java.lang.String)"),
			new Operation("createUser(java.lang.String,char[])"),
			new Operation("getUserInfo(java.lang.String)"),
			new Operation("deleteUser(java.lang.String)"),
			new Operation("getLockAfterInvalidAttempts()"),
			new Operation("setFilterUsername(com.sap.engine.interfaces.security.userstore.spi.FilterUsername)"),
			new Operation("createUser(java.lang.String)"),
			new Operation("searchUsers(com.sap.engine.interfaces.security.userstore.context.SearchFilter)"),
			new Operation("getFilterPassword()"),
			new Operation("isUserPropertySupported(int,int)")};

	public RemoteUserContextImplp4_Skel () {
	}

	public Operation[] getOperations() {
		return operations;
	}

	private static final String[] _implements = {
			"com.sap.engine.services.security.remote.RemoteUserContext"};

	public String[] getImplemntsObjects() {
		return _implements;
	}

	public void dispatch(java.rmi.Remote remote, Dispatch call, int opnum) throws java.lang.Exception {

		com.sap.engine.services.security.userstore.RemoteUserContextImpl impl = (com.sap.engine.services.security.userstore.RemoteUserContextImpl) delegate();
		P4ObjectInput in = call.getInputStream();

		switch (opnum) {

			case 0 : {  //method public abstract com.sap.engine.interfaces.security.userstore.context.SearchFilter com.sap.engine.services.security.remote.RemoteUserContext.getSearchFilter()
				try {
					com.sap.engine.interfaces.security.userstore.context.SearchFilter _result = impl.getSearchFilter();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 1 : {  //method public abstract long com.sap.engine.services.security.remote.RemoteUserContext.fillSubject(com.sap.engine.services.security.remote.RemoteUserInfo,javax.security.auth.Subject) throws java.rmi.RemoteException
				try {
					Object obj0;
					com.sap.engine.services.security.remote.RemoteUserInfo param0;
					obj0 = in.readObject();
					try {
						 param0 = (com.sap.engine.services.security.remote.RemoteUserInfo)obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (com.sap.engine.services.security.remote.RemoteUserInfo) broker.narrow(obj0,com.sap.engine.services.security.remote.RemoteUserInfo.class);
					}
					Object obj1;
					javax.security.auth.Subject param1;
					obj1 = in.readObject();
					try {
						 param1 = (javax.security.auth.Subject)obj1;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param1 = (javax.security.auth.Subject) broker.narrow(obj1,javax.security.auth.Subject.class);
					}
					long _result = impl.fillSubject(param0, param1);
					P4ObjectOutput out = call.getOutputStream();
					out.writeLong( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 2 : {  //method public abstract com.sap.engine.services.security.remote.RemoteFilterUsername com.sap.engine.services.security.remote.RemoteUserContext.getFilterUsername() throws java.rmi.RemoteException
				try {
					com.sap.engine.services.security.remote.RemoteFilterUsername _result = impl.getFilterUsername();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 3 : {  //method public abstract com.sap.engine.services.security.remote.RemoteIterator com.sap.engine.services.security.remote.RemoteUserContext.listUsers() throws java.rmi.RemoteException
				try {
					com.sap.engine.services.security.remote.RemoteIterator _result = impl.listUsers();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 4 : {  //method public abstract boolean com.sap.engine.services.security.remote.RemoteUserContext.isSubjectRetrievalSupported() throws java.rmi.RemoteException
				try {
					boolean _result = impl.isSubjectRetrievalSupported();
					P4ObjectOutput out = call.getOutputStream();
					out.writeBoolean( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 5 : {  //method public abstract com.sap.engine.services.security.remote.RemoteIterator com.sap.engine.services.security.remote.RemoteUserContext.listRootUsers() throws java.rmi.RemoteException
				try {
					com.sap.engine.services.security.remote.RemoteIterator _result = impl.listRootUsers();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 6 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserContext.setFilterPassword(com.sap.engine.interfaces.security.userstore.spi.FilterPassword) throws java.rmi.RemoteException
				try {
					Object obj0;
					com.sap.engine.interfaces.security.userstore.spi.FilterPassword param0;
					obj0 = in.readObject();
					try {
						 param0 = (com.sap.engine.interfaces.security.userstore.spi.FilterPassword)obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (com.sap.engine.interfaces.security.userstore.spi.FilterPassword) broker.narrow(obj0,com.sap.engine.interfaces.security.userstore.spi.FilterPassword.class);
					}
					impl.setFilterPassword(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 7 : {  //method public abstract boolean com.sap.engine.services.security.remote.RemoteUserContext.isEmergencyUser(java.lang.String)
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					boolean _result = impl.isEmergencyUser(param0);
					P4ObjectOutput out = call.getOutputStream();
					out.writeBoolean( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 8 : {  //method public abstract boolean com.sap.engine.services.security.remote.RemoteUserContext.isInEmergencyMode()
				try {
					boolean _result = impl.isInEmergencyMode();
					P4ObjectOutput out = call.getOutputStream();
					out.writeBoolean( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 9 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserContext.refresh(java.lang.String)
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					impl.refresh(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 10 : {  //method public abstract com.sap.engine.services.security.remote.RemoteUserStoreInfo com.sap.engine.services.security.remote.RemoteUserContext.createUser(java.lang.String,char[]) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					Object obj1;
					char[] param1;
					obj1 = in.readObject();
					try {
						 param1 = (char[])obj1;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param1 = (char[]) broker.narrow(obj1,char[].class);
					}
					com.sap.engine.services.security.remote.RemoteUserStoreInfo _result = impl.createUser(param0, param1);
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 11 : {  //method public abstract com.sap.engine.services.security.remote.RemoteUserStoreInfo com.sap.engine.services.security.remote.RemoteUserContext.getUserInfo(java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					com.sap.engine.services.security.remote.RemoteUserStoreInfo _result = impl.getUserInfo(param0);
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 12 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserContext.deleteUser(java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					impl.deleteUser(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 13 : {  //method public abstract int com.sap.engine.services.security.remote.RemoteUserContext.getLockAfterInvalidAttempts()
				try {
					int _result = impl.getLockAfterInvalidAttempts();
					P4ObjectOutput out = call.getOutputStream();
					out.writeInt( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 14 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserContext.setFilterUsername(com.sap.engine.interfaces.security.userstore.spi.FilterUsername) throws java.rmi.RemoteException
				try {
					Object obj0;
					com.sap.engine.interfaces.security.userstore.spi.FilterUsername param0;
					obj0 = in.readObject();
					try {
						 param0 = (com.sap.engine.interfaces.security.userstore.spi.FilterUsername)obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (com.sap.engine.interfaces.security.userstore.spi.FilterUsername) broker.narrow(obj0,com.sap.engine.interfaces.security.userstore.spi.FilterUsername.class);
					}
					impl.setFilterUsername(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 15 : {  //method public abstract com.sap.engine.services.security.remote.RemoteUserStoreInfo com.sap.engine.services.security.remote.RemoteUserContext.createUser(java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					com.sap.engine.services.security.remote.RemoteUserStoreInfo _result = impl.createUser(param0);
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 16 : {  //method public abstract com.sap.engine.services.security.remote.RemoteIterator com.sap.engine.services.security.remote.RemoteUserContext.searchUsers(com.sap.engine.interfaces.security.userstore.context.SearchFilter) throws java.rmi.RemoteException
				try {
					Object obj0;
					com.sap.engine.interfaces.security.userstore.context.SearchFilter param0;
					obj0 = in.readObject();
					try {
						 param0 = (com.sap.engine.interfaces.security.userstore.context.SearchFilter)obj0;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 param0 = (com.sap.engine.interfaces.security.userstore.context.SearchFilter) broker.narrow(obj0,com.sap.engine.interfaces.security.userstore.context.SearchFilter.class);
					}
					com.sap.engine.services.security.remote.RemoteIterator _result = impl.searchUsers(param0);
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 17 : {  //method public abstract com.sap.engine.services.security.remote.RemoteFilterPassword com.sap.engine.services.security.remote.RemoteUserContext.getFilterPassword() throws java.rmi.RemoteException
				try {
					com.sap.engine.services.security.remote.RemoteFilterPassword _result = impl.getFilterPassword();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
			case 18 : {  //method public abstract boolean com.sap.engine.services.security.remote.RemoteUserContext.isUserPropertySupported(int,int) throws java.rmi.RemoteException
				try {
					int param0 = in.readInt();
					int param1 = in.readInt();
					boolean _result = impl.isUserPropertySupported(param0, param1);
					P4ObjectOutput out = call.getOutputStream();
					out.writeBoolean( _result);
					out.flush();
				} catch (java.lang.Exception ex) {
					// $JL-EXC$
					throw ex;
				}
				break;
			}
		}
	}

}
