// Class generated by SAP Labs Bulgaria Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.userstore;

import java.rmi.server.Operation;

import com.sap.engine.services.rmi_p4.*;

/**
 *
 * @author RMIC Generator 
 * @version 6.30
 */
public class RemoteUserStoreFactoryImplp4_Skel extends P4RemoteObject  implements com.sap.engine.services.rmi_p4.Skeleton, java.rmi.Remote {

	public P4ObjectBroker broker = P4ObjectBroker.init();
	private static final Operation[] operations = {
			new Operation("listUserStores()"),
			new Operation("registerListener(com.sap.engine.services.security.remote.UserStoreListenerCallback)"),
			new Operation("registerUserStore(com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration)"),
			new Operation("updateUserStore(com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration)"),
			new Operation("getActiveUserStore()"),
			new Operation("getUserStore(java.lang.String)"),
			new Operation("unregisterUserStore(java.lang.String)"),
			new Operation("setActiveUserStore(java.lang.String)"),
			new Operation("unregisterListener(com.sap.engine.services.security.remote.UserStoreListenerCallback)")};

	public RemoteUserStoreFactoryImplp4_Skel () {
	}

	public Operation[] getOperations() {
		return operations;
	}

	private static final String[] _implements = {
			"com.sap.engine.services.security.remote.RemoteUserStoreFactory"};

	public String[] getImplemntsObjects() {
		return _implements;
	}

	public void dispatch(java.rmi.Remote remote, Dispatch call, int opnum) throws Exception {

		com.sap.engine.services.security.userstore.RemoteUserStoreFactoryImpl impl = (com.sap.engine.services.security.userstore.RemoteUserStoreFactoryImpl) getDelegate();
		P4ObjectInput in = call.getInputStream();

		switch (opnum) {

			case 0 : {  //method public abstract com.sap.engine.services.security.remote.RemoteUserStore[] com.sap.engine.services.security.remote.RemoteUserStoreFactory.listUserStores() throws java.rmi.RemoteException
				try {
					com.sap.engine.services.security.remote.RemoteUserStore[] _result = impl.listUserStores();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 1 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStoreFactory.registerListener(com.sap.engine.services.security.remote.UserStoreListenerCallback) throws java.rmi.RemoteException
				try {
					Object obj0;
					com.sap.engine.services.security.remote.UserStoreListenerCallback param0;
					obj0 = in.readObject();
					try {
						 param0 = (com.sap.engine.services.security.remote.UserStoreListenerCallback)obj0;
					} catch (ClassCastException ex) {
						 param0 = (com.sap.engine.services.security.remote.UserStoreListenerCallback) broker.narrow(obj0,com.sap.engine.services.security.remote.UserStoreListenerCallback.class);
					}
					impl.registerListener(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 2 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStoreFactory.registerUserStore(com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration) throws java.rmi.RemoteException
				try {
					Object obj0;
					com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration param0;
					obj0 = in.readObject();
					try {
						 param0 = (com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration)obj0;
					} catch (ClassCastException ex) {
						 param0 = (com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration) broker.narrow(obj0,com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration.class);
					}
					impl.registerUserStore(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 3 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStoreFactory.updateUserStore(com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration) throws java.rmi.RemoteException
				try {
					Object obj0;
					com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration param0;
					obj0 = in.readObject();
					try {
						 param0 = (com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration)obj0;
					} catch (ClassCastException ex) {
						 param0 = (com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration) broker.narrow(obj0,com.sap.engine.interfaces.security.userstore.config.UserStoreConfiguration.class);
					}
					impl.updateUserStore(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 4 : {  //method public abstract com.sap.engine.services.security.remote.RemoteUserStore com.sap.engine.services.security.remote.RemoteUserStoreFactory.getActiveUserStore() throws java.rmi.RemoteException
				try {
					com.sap.engine.services.security.remote.RemoteUserStore _result = impl.getActiveUserStore();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 5 : {  //method public abstract com.sap.engine.services.security.remote.RemoteUserStore com.sap.engine.services.security.remote.RemoteUserStoreFactory.getUserStore(java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					com.sap.engine.services.security.remote.RemoteUserStore _result = impl.getUserStore(param0);
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 6 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStoreFactory.unregisterUserStore(java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					impl.unregisterUserStore(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 7 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStoreFactory.setActiveUserStore(java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					impl.setActiveUserStore(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 8 : {  //method public abstract void com.sap.engine.services.security.remote.RemoteUserStoreFactory.unregisterListener(com.sap.engine.services.security.remote.UserStoreListenerCallback) throws java.rmi.RemoteException
				try {
					Object obj0;
					com.sap.engine.services.security.remote.UserStoreListenerCallback param0;
					obj0 = in.readObject();
					try {
						 param0 = (com.sap.engine.services.security.remote.UserStoreListenerCallback)obj0;
					} catch (ClassCastException ex) {
						 param0 = (com.sap.engine.services.security.remote.UserStoreListenerCallback) broker.narrow(obj0,com.sap.engine.services.security.remote.UserStoreListenerCallback.class);
					}
					impl.unregisterListener(param0);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
		}
	}

}
