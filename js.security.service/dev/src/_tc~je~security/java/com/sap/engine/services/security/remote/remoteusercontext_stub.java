// Class generated by SAP Labs Bulgaria Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.remote;



import com.sap.engine.services.rmi_p4.*;


/**
*
* @author  RMIC Generator
* @version 6.30
*/
public class RemoteUserContext_Stub extends com.sap.engine.services.rmi_p4.StubImpl 
		implements com.sap.engine.services.security.remote.RemoteUserContext {

	private static final String[] operations = {
			"getUserInfo(java.lang.String)",
			"listUsers()",
			"searchUsers(com.sap.engine.interfaces.security.userstore.context.SearchFilter)",
			"createUser(java.lang.String)",
			"createUser(java.lang.String,char[])",
			"deleteUser(java.lang.String)",
			"getFilterUsername()",
			"setFilterUsername(com.sap.engine.interfaces.security.userstore.spi.FilterUsername)",
			"getFilterPassword()",
			"setFilterPassword(com.sap.engine.interfaces.security.userstore.spi.FilterPassword)",
			"isUserPropertySupported(int,int)",
			"isSubjectRetrievalSupported()",
			"fillSubject(com.sap.engine.services.security.remote.RemoteUserInfo,javax.security.auth.Subject)",
			"listRootUsers()",
			"getLockAfterInvalidAttempts()",
			"getSearchFilter()",
			"isInEmergencyMode()",
			"isEmergencyUser(java.lang.String)",
			"refresh(java.lang.String)"};

	public String[] p4_getOperations() {
		return operations;
	}

	public com.sap.engine.services.security.remote.RemoteUserStoreInfo getUserInfo(java.lang.String _param0) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return (com.sap.engine.services.security.remote.RemoteUserStoreInfo) broker.narrow(p4_replicate(remoteInterface.getUserInfo( _param0)), com.sap.engine.services.security.remote.RemoteUserStoreInfo.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{_param0};
				Class[] p = new Class[]{java.lang.String.class};
				try { 
					return (com.sap.engine.services.security.remote.RemoteUserStoreInfo)broker.narrow(p4_replicate(p4_invokeReflect(remote,"getUserInfo",params,p)),com.sap.engine.services.security.remote.RemoteUserStoreInfo.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getUserInfo>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getUserInfo>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(0);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					com.sap.engine.services.security.remote.RemoteUserStoreInfo _result;
					obj = in.readObject();
					try {
						 _result = (com.sap.engine.services.security.remote.RemoteUserStoreInfo)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) broker.narrow(obj,com.sap.engine.services.security.remote.RemoteUserStoreInfo.class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public com.sap.engine.services.security.remote.RemoteIterator listUsers() throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return (com.sap.engine.services.security.remote.RemoteIterator) broker.narrow(p4_replicate(remoteInterface.listUsers()), com.sap.engine.services.security.remote.RemoteIterator.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return (com.sap.engine.services.security.remote.RemoteIterator)broker.narrow(p4_replicate(p4_invokeReflect(remote,"listUsers",params,p)),com.sap.engine.services.security.remote.RemoteIterator.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <listUsers>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <listUsers>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(1);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					com.sap.engine.services.security.remote.RemoteIterator _result;
					obj = in.readObject();
					try {
						 _result = (com.sap.engine.services.security.remote.RemoteIterator)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (com.sap.engine.services.security.remote.RemoteIterator) broker.narrow(obj,com.sap.engine.services.security.remote.RemoteIterator.class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public com.sap.engine.services.security.remote.RemoteIterator searchUsers(com.sap.engine.interfaces.security.userstore.context.SearchFilter _param0) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				ReplicateOutputStream out1 = p4_getReplicateOutput();
				ReplicateInputStream inn1 = p4_getReplicateInput(out1);
				return (com.sap.engine.services.security.remote.RemoteIterator) broker.narrow(p4_replicate(remoteInterface.searchUsers((com.sap.engine.interfaces.security.userstore.context.SearchFilter) broker.narrow(p4_replicateWithStreams(inn1,out1,_param0),com.sap.engine.interfaces.security.userstore.context.SearchFilter.class))), com.sap.engine.services.security.remote.RemoteIterator.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				ReplicateOutputStream outt = p4_getReplicateOutput();
				ReplicateInputStream inn = p4_getReplicateInput(outt);
				Object[] params = new Object[]{p4_replicateWithStreams(inn,outt,_param0)};
				Class[] p = new Class[]{(Class) p4_replicateWithStreams(inn,outt,com.sap.engine.interfaces.security.userstore.context.SearchFilter.class)};
				try { 
					return (com.sap.engine.services.security.remote.RemoteIterator)broker.narrow(p4_replicate(p4_invokeReflect(remote,"searchUsers",params,p)),com.sap.engine.services.security.remote.RemoteIterator.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <searchUsers>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <searchUsers>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(2);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					com.sap.engine.services.security.remote.RemoteIterator _result;
					obj = in.readObject();
					try {
						 _result = (com.sap.engine.services.security.remote.RemoteIterator)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (com.sap.engine.services.security.remote.RemoteIterator) broker.narrow(obj,com.sap.engine.services.security.remote.RemoteIterator.class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public com.sap.engine.services.security.remote.RemoteUserStoreInfo createUser(java.lang.String _param0) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return (com.sap.engine.services.security.remote.RemoteUserStoreInfo) broker.narrow(p4_replicate(remoteInterface.createUser( _param0)), com.sap.engine.services.security.remote.RemoteUserStoreInfo.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{_param0};
				Class[] p = new Class[]{java.lang.String.class};
				try { 
					return (com.sap.engine.services.security.remote.RemoteUserStoreInfo)broker.narrow(p4_replicate(p4_invokeReflect(remote,"createUser",params,p)),com.sap.engine.services.security.remote.RemoteUserStoreInfo.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <createUser>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <createUser>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(3);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					com.sap.engine.services.security.remote.RemoteUserStoreInfo _result;
					obj = in.readObject();
					try {
						 _result = (com.sap.engine.services.security.remote.RemoteUserStoreInfo)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) broker.narrow(obj,com.sap.engine.services.security.remote.RemoteUserStoreInfo.class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public com.sap.engine.services.security.remote.RemoteUserStoreInfo createUser(java.lang.String _param0, char[] _param1) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return (com.sap.engine.services.security.remote.RemoteUserStoreInfo) broker.narrow(p4_replicate(remoteInterface.createUser( _param0,  _param1)), com.sap.engine.services.security.remote.RemoteUserStoreInfo.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{_param0,_param1};
				Class[] p = new Class[]{java.lang.String.class,char[].class};
				try { 
					return (com.sap.engine.services.security.remote.RemoteUserStoreInfo)broker.narrow(p4_replicate(p4_invokeReflect(remote,"createUser",params,p)),com.sap.engine.services.security.remote.RemoteUserStoreInfo.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <createUser>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <createUser>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(4);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				out.writeObject( _param1);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					com.sap.engine.services.security.remote.RemoteUserStoreInfo _result;
					obj = in.readObject();
					try {
						 _result = (com.sap.engine.services.security.remote.RemoteUserStoreInfo)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (com.sap.engine.services.security.remote.RemoteUserStoreInfo) broker.narrow(obj,com.sap.engine.services.security.remote.RemoteUserStoreInfo.class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public void deleteUser(java.lang.String _param0) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				remoteInterface.deleteUser( _param0);
				return;
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{_param0};
				Class[] p = new Class[]{java.lang.String.class};
				try { 
					p4_invokeReflect(remote,"deleteUser",params,p);
					return ;
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <deleteUser>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <deleteUser>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(5);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public com.sap.engine.services.security.remote.RemoteFilterUsername getFilterUsername() throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return (com.sap.engine.services.security.remote.RemoteFilterUsername) broker.narrow(p4_replicate(remoteInterface.getFilterUsername()), com.sap.engine.services.security.remote.RemoteFilterUsername.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return (com.sap.engine.services.security.remote.RemoteFilterUsername)broker.narrow(p4_replicate(p4_invokeReflect(remote,"getFilterUsername",params,p)),com.sap.engine.services.security.remote.RemoteFilterUsername.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getFilterUsername>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getFilterUsername>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(6);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					com.sap.engine.services.security.remote.RemoteFilterUsername _result;
					obj = in.readObject();
					try {
						 _result = (com.sap.engine.services.security.remote.RemoteFilterUsername)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (com.sap.engine.services.security.remote.RemoteFilterUsername) broker.narrow(obj,com.sap.engine.services.security.remote.RemoteFilterUsername.class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public void setFilterUsername(com.sap.engine.interfaces.security.userstore.spi.FilterUsername _param0) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				ReplicateOutputStream out1 = p4_getReplicateOutput();
				ReplicateInputStream inn1 = p4_getReplicateInput(out1);
				remoteInterface.setFilterUsername((com.sap.engine.interfaces.security.userstore.spi.FilterUsername) broker.narrow(p4_replicateWithStreams(inn1,out1,_param0),com.sap.engine.interfaces.security.userstore.spi.FilterUsername.class));
				return;
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				ReplicateOutputStream outt = p4_getReplicateOutput();
				ReplicateInputStream inn = p4_getReplicateInput(outt);
				Object[] params = new Object[]{p4_replicateWithStreams(inn,outt,_param0)};
				Class[] p = new Class[]{(Class) p4_replicateWithStreams(inn,outt,com.sap.engine.interfaces.security.userstore.spi.FilterUsername.class)};
				try { 
					p4_invokeReflect(remote,"setFilterUsername",params,p);
					return ;
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <setFilterUsername>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <setFilterUsername>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(7);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public com.sap.engine.services.security.remote.RemoteFilterPassword getFilterPassword() throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return (com.sap.engine.services.security.remote.RemoteFilterPassword) broker.narrow(p4_replicate(remoteInterface.getFilterPassword()), com.sap.engine.services.security.remote.RemoteFilterPassword.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return (com.sap.engine.services.security.remote.RemoteFilterPassword)broker.narrow(p4_replicate(p4_invokeReflect(remote,"getFilterPassword",params,p)),com.sap.engine.services.security.remote.RemoteFilterPassword.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getFilterPassword>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getFilterPassword>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(8);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					com.sap.engine.services.security.remote.RemoteFilterPassword _result;
					obj = in.readObject();
					try {
						 _result = (com.sap.engine.services.security.remote.RemoteFilterPassword)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (com.sap.engine.services.security.remote.RemoteFilterPassword) broker.narrow(obj,com.sap.engine.services.security.remote.RemoteFilterPassword.class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public void setFilterPassword(com.sap.engine.interfaces.security.userstore.spi.FilterPassword _param0) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				ReplicateOutputStream out1 = p4_getReplicateOutput();
				ReplicateInputStream inn1 = p4_getReplicateInput(out1);
				remoteInterface.setFilterPassword((com.sap.engine.interfaces.security.userstore.spi.FilterPassword) broker.narrow(p4_replicateWithStreams(inn1,out1,_param0),com.sap.engine.interfaces.security.userstore.spi.FilterPassword.class));
				return;
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				ReplicateOutputStream outt = p4_getReplicateOutput();
				ReplicateInputStream inn = p4_getReplicateInput(outt);
				Object[] params = new Object[]{p4_replicateWithStreams(inn,outt,_param0)};
				Class[] p = new Class[]{(Class) p4_replicateWithStreams(inn,outt,com.sap.engine.interfaces.security.userstore.spi.FilterPassword.class)};
				try { 
					p4_invokeReflect(remote,"setFilterPassword",params,p);
					return ;
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <setFilterPassword>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <setFilterPassword>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(9);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public boolean isUserPropertySupported(int _param0, int _param1) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return remoteInterface.isUserPropertySupported( _param0,  _param1);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{new Integer(_param0),new Integer(_param1)};
				Class[] p = new Class[]{int.class,int.class};
				try { 
					return ((Boolean) p4_invokeReflect(remote,"isUserPropertySupported",params,p)).booleanValue();
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <isUserPropertySupported>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <isUserPropertySupported>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(10);
				P4ObjectOutput out = call.getOutputStream();
				out.writeInt( _param0);
				out.writeInt( _param1);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
				boolean _result = in.readBoolean();
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public boolean isSubjectRetrievalSupported() throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return remoteInterface.isSubjectRetrievalSupported();
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return ((Boolean) p4_invokeReflect(remote,"isSubjectRetrievalSupported",params,p)).booleanValue();
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <isSubjectRetrievalSupported>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <isSubjectRetrievalSupported>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(11);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
				boolean _result = in.readBoolean();
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public long fillSubject(com.sap.engine.services.security.remote.RemoteUserInfo _param0, javax.security.auth.Subject _param1) throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				ReplicateOutputStream out1 = p4_getReplicateOutput();
				ReplicateInputStream inn1 = p4_getReplicateInput(out1);
				return remoteInterface.fillSubject((com.sap.engine.services.security.remote.RemoteUserInfo) broker.narrow(p4_replicateWithStreams(inn1,out1,_param0),com.sap.engine.services.security.remote.RemoteUserInfo.class), (javax.security.auth.Subject) broker.narrow(p4_replicateWithStreams(inn1,out1,_param1),javax.security.auth.Subject.class));
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				ReplicateOutputStream outt = p4_getReplicateOutput();
				ReplicateInputStream inn = p4_getReplicateInput(outt);
				Object[] params = new Object[]{p4_replicateWithStreams(inn,outt,_param0),p4_replicateWithStreams(inn,outt,_param1)};
				Class[] p = new Class[]{(Class) p4_replicateWithStreams(inn,outt,com.sap.engine.services.security.remote.RemoteUserInfo.class),(Class) p4_replicateWithStreams(inn,outt,javax.security.auth.Subject.class)};
				try { 
					return ((Long) p4_invokeReflect(remote,"fillSubject",params,p)).longValue();
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <fillSubject>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <fillSubject>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(12);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				out.writeObject( _param1);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
				long _result = in.readLong();
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public com.sap.engine.services.security.remote.RemoteIterator listRootUsers() throws java.rmi.RemoteException {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw new java.rmi.NoSuchObjectException("");
			} else {
				remote = p4remote.delegate();
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return (com.sap.engine.services.security.remote.RemoteIterator) broker.narrow(p4_replicate(remoteInterface.listRootUsers()), com.sap.engine.services.security.remote.RemoteIterator.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return (com.sap.engine.services.security.remote.RemoteIterator)broker.narrow(p4_replicate(p4_invokeReflect(remote,"listRootUsers",params,p)),com.sap.engine.services.security.remote.RemoteIterator.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					if (target instanceof java.rmi.RemoteException) {
					 throw (java.rmi.RemoteException)target;
					} else { 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <listRootUsers>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <listRootUsers>", broker.debug);
				broker.log(ex, broker.debug);
				throw (java.rmi.RemoteException) p4_replicate(ex);
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(13);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					com.sap.engine.services.security.remote.RemoteIterator _result;
					obj = in.readObject();
					try {
						 _result = (com.sap.engine.services.security.remote.RemoteIterator)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (com.sap.engine.services.security.remote.RemoteIterator) broker.narrow(obj,com.sap.engine.services.security.remote.RemoteIterator.class);
					}
				return _result;
			} catch (java.rmi.RemoteException ex) {
					// $JL-EXC$
				throw ex;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public int getLockAfterInvalidAttempts()  {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, null);
			} else {
				try {
					remote = p4remote.delegate();
				} catch (java.rmi.NoSuchObjectException nso) { 
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, nso);
				}
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return remoteInterface.getLockAfterInvalidAttempts();
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return ((Integer) p4_invokeReflect(remote,"getLockAfterInvalidAttempts",params,p)).intValue();
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					{ 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getLockAfterInvalidAttempts>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(14);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
				int _result = in.readInt();
				return _result;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public com.sap.engine.interfaces.security.userstore.context.SearchFilter getSearchFilter()  {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, null);
			} else {
				try {
					remote = p4remote.delegate();
				} catch (java.rmi.NoSuchObjectException nso) { 
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, nso);
				}
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return (com.sap.engine.interfaces.security.userstore.context.SearchFilter) broker.narrow(p4_replicate(remoteInterface.getSearchFilter()), com.sap.engine.interfaces.security.userstore.context.SearchFilter.class);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return (com.sap.engine.interfaces.security.userstore.context.SearchFilter)broker.narrow(p4_replicate(p4_invokeReflect(remote,"getSearchFilter",params,p)),com.sap.engine.interfaces.security.userstore.context.SearchFilter.class);
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					{ 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <getSearchFilter>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(15);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
					Object obj;
					com.sap.engine.interfaces.security.userstore.context.SearchFilter _result;
					obj = in.readObject();
					try {
						 _result = (com.sap.engine.interfaces.security.userstore.context.SearchFilter)obj;
					} catch (java.lang.ClassCastException ex) {
					// $JL-EXC$
						 _result = (com.sap.engine.interfaces.security.userstore.context.SearchFilter) broker.narrow(obj,com.sap.engine.interfaces.security.userstore.context.SearchFilter.class);
					}
				return _result;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public boolean isInEmergencyMode()  {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, null);
			} else {
				try {
					remote = p4remote.delegate();
				} catch (java.rmi.NoSuchObjectException nso) { 
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, nso);
				}
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return remoteInterface.isInEmergencyMode();
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{};
				Class[] p = new Class[]{};
				try { 
					return ((Boolean) p4_invokeReflect(remote,"isInEmergencyMode",params,p)).booleanValue();
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					{ 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <isInEmergencyMode>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(16);
				P4ObjectOutput out = call.getOutputStream();
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
				boolean _result = in.readBoolean();
				return _result;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public boolean isEmergencyUser(java.lang.String _param0)  {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, null);
			} else {
				try {
					remote = p4remote.delegate();
				} catch (java.rmi.NoSuchObjectException nso) { 
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, nso);
				}
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				return remoteInterface.isEmergencyUser( _param0);
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{_param0};
				Class[] p = new Class[]{java.lang.String.class};
				try { 
					return ((Boolean) p4_invokeReflect(remote,"isEmergencyUser",params,p)).booleanValue();
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					{ 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <isEmergencyUser>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(17);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
				boolean _result = in.readBoolean();
				return _result;
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


	public void refresh(java.lang.String _param0)  {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, null);
			} else {
				try {
					remote = p4remote.delegate();
				} catch (java.rmi.NoSuchObjectException nso) { 
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, nso);
				}
			}
			try {
				com.sap.engine.services.security.remote.RemoteUserContext remoteInterface = (com.sap.engine.services.security.remote.RemoteUserContext) remote;
				remoteInterface.refresh( _param0);
				return;
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				Object[] params = new Object[]{_param0};
				Class[] p = new Class[]{java.lang.String.class};
				try { 
					p4_invokeReflect(remote,"refresh",params,p);
					return ;
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					{ 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <refresh>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(18);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


}
