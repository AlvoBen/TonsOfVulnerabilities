// Class generated by SAP Labs Bulgaria Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.services.security.remoteimpl.domains;

import java.rmi.server.Operation;

import com.sap.engine.services.rmi_p4.*;

/**
 *
 * @author RMIC Generator 
 * @version 6.30
 */
public class RemoteProtectionDomainsImplp4_Skel extends P4RemoteObject  implements com.sap.engine.services.rmi_p4.Skeleton, java.rmi.Remote {

	public P4ObjectBroker broker = P4ObjectBroker.init();
	private static final Operation[] operations = {
			new Operation("getInheritedPermissions(java.lang.String)"),
			new Operation("clearPermission(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"),
			new Operation("getPermissions(java.lang.String)"),
			new Operation("getDeniedPermissions(java.lang.String)"),
			new Operation("addKnownPermission(java.lang.String,java.lang.String[],java.lang.String[])"),
			new Operation("grantPermission(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"),
			new Operation("getDomainsNames()"),
			new Operation("removeKnownPermission(java.lang.String,java.lang.String[],java.lang.String[])"),
			new Operation("getAllKnownPermissions()"),
			new Operation("getGrantedPermissions(java.lang.String)")};

	public RemoteProtectionDomainsImplp4_Skel () {
	}

	public Operation[] getOperations() {
		return operations;
	}

	private static final String[] _implements = {
			"com.sap.engine.services.security.remote.domains.RemoteProtectionDomains"};

	public String[] getImplemntsObjects() {
		return _implements;
	}

	public void dispatch(java.rmi.Remote remote, Dispatch call, int opnum) throws Exception {

		com.sap.engine.services.security.remoteimpl.domains.RemoteProtectionDomainsImpl impl = (com.sap.engine.services.security.remoteimpl.domains.RemoteProtectionDomainsImpl) delegate();
		P4ObjectInput in = call.getInputStream();

		switch (opnum) {

			case 0 : {  //method public abstract java.util.Vector com.sap.engine.services.security.remote.domains.RemoteProtectionDomains.getInheritedPermissions(java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					java.util.Vector _result = impl.getInheritedPermissions(param0);
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 1 : {  //method public abstract void com.sap.engine.services.security.remote.domains.RemoteProtectionDomains.clearPermission(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					Object obj1;
					java.lang.String param1;
					obj1 = in.readObject();
					try {
						 param1 = (java.lang.String)obj1;
					} catch (ClassCastException ex) {
						 param1 = (java.lang.String) broker.narrow(obj1,java.lang.String.class);
					}
					Object obj2;
					java.lang.String param2;
					obj2 = in.readObject();
					try {
						 param2 = (java.lang.String)obj2;
					} catch (ClassCastException ex) {
						 param2 = (java.lang.String) broker.narrow(obj2,java.lang.String.class);
					}
					Object obj3;
					java.lang.String param3;
					obj3 = in.readObject();
					try {
						 param3 = (java.lang.String)obj3;
					} catch (ClassCastException ex) {
						 param3 = (java.lang.String) broker.narrow(obj3,java.lang.String.class);
					}
					impl.clearPermission(param0, param1, param2, param3);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 2 : {  //method public abstract java.util.Vector com.sap.engine.services.security.remote.domains.RemoteProtectionDomains.getPermissions(java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					java.util.Vector _result = impl.getPermissions(param0);
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 3 : {  //method public abstract java.util.Vector com.sap.engine.services.security.remote.domains.RemoteProtectionDomains.getDeniedPermissions(java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					java.util.Vector _result = impl.getDeniedPermissions(param0);
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 4 : {  //method public abstract void com.sap.engine.services.security.remote.domains.RemoteProtectionDomains.addKnownPermission(java.lang.String,java.lang.String[],java.lang.String[]) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					Object obj1;
					java.lang.String[] param1;
					obj1 = in.readObject();
					try {
						 param1 = (java.lang.String[])obj1;
					} catch (ClassCastException ex) {
						 param1 = (java.lang.String[]) broker.narrow(obj1,java.lang.String[].class);
					}
					Object obj2;
					java.lang.String[] param2;
					obj2 = in.readObject();
					try {
						 param2 = (java.lang.String[])obj2;
					} catch (ClassCastException ex) {
						 param2 = (java.lang.String[]) broker.narrow(obj2,java.lang.String[].class);
					}
					impl.addKnownPermission(param0, param1, param2);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 5 : {  //method public abstract void com.sap.engine.services.security.remote.domains.RemoteProtectionDomains.grantPermission(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					Object obj1;
					java.lang.String param1;
					obj1 = in.readObject();
					try {
						 param1 = (java.lang.String)obj1;
					} catch (ClassCastException ex) {
						 param1 = (java.lang.String) broker.narrow(obj1,java.lang.String.class);
					}
					Object obj2;
					java.lang.String param2;
					obj2 = in.readObject();
					try {
						 param2 = (java.lang.String)obj2;
					} catch (ClassCastException ex) {
						 param2 = (java.lang.String) broker.narrow(obj2,java.lang.String.class);
					}
					Object obj3;
					java.lang.String param3;
					obj3 = in.readObject();
					try {
						 param3 = (java.lang.String)obj3;
					} catch (ClassCastException ex) {
						 param3 = (java.lang.String) broker.narrow(obj3,java.lang.String.class);
					}
					impl.grantPermission(param0, param1, param2, param3);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 6 : {  //method public abstract java.lang.String[] com.sap.engine.services.security.remote.domains.RemoteProtectionDomains.getDomainsNames() throws java.rmi.RemoteException
				try {
					java.lang.String[] _result = impl.getDomainsNames();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 7 : {  //method public abstract void com.sap.engine.services.security.remote.domains.RemoteProtectionDomains.removeKnownPermission(java.lang.String,java.lang.String[],java.lang.String[]) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					Object obj1;
					java.lang.String[] param1;
					obj1 = in.readObject();
					try {
						 param1 = (java.lang.String[])obj1;
					} catch (ClassCastException ex) {
						 param1 = (java.lang.String[]) broker.narrow(obj1,java.lang.String[].class);
					}
					Object obj2;
					java.lang.String[] param2;
					obj2 = in.readObject();
					try {
						 param2 = (java.lang.String[])obj2;
					} catch (ClassCastException ex) {
						 param2 = (java.lang.String[]) broker.narrow(obj2,java.lang.String[].class);
					}
					impl.removeKnownPermission(param0, param1, param2);
					P4ObjectOutput out = call.getOutputStream();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 8 : {  //method public abstract java.util.Vector com.sap.engine.services.security.remote.domains.RemoteProtectionDomains.getAllKnownPermissions() throws java.rmi.RemoteException
				try {
					java.util.Vector _result = impl.getAllKnownPermissions();
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
			case 9 : {  //method public abstract java.util.Vector com.sap.engine.services.security.remote.domains.RemoteProtectionDomains.getGrantedPermissions(java.lang.String) throws java.rmi.RemoteException
				try {
					Object obj0;
					java.lang.String param0;
					obj0 = in.readObject();
					try {
						 param0 = (java.lang.String)obj0;
					} catch (ClassCastException ex) {
						 param0 = (java.lang.String) broker.narrow(obj0,java.lang.String.class);
					}
					java.util.Vector _result = impl.getGrantedPermissions(param0);
					P4ObjectOutput out = call.getOutputStream();
					out.writeObject( _result);
					out.flush();
				} catch (Exception ex) {
					throw ex;
				}
				break;
			}
		}
	}

}
