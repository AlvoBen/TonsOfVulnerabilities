

/*
This file is generated by Code Generator
for CIMClass SAP_ITSAMJavaSchedulerJob
WARNING:DO NOT CHANGE THE CODE MANUALLY
*/

package com.sap.engine.services.scheduler.runtime.mbean;	

import java.util.Date;
/* 
A concrete version of Job. This class represents a generic and instantiable unit of work, such as a batch or a print job. 
@version 2.9.0	
*/	

public class SAP_ITSAMJavaSchedulerJob{

private String InstanceID=null;
	
private String JobID=null;
	
private String TaskID=null;
	
private String ElementName=null;
	
private Date StartTime=null;
	
private boolean CancelRequest=false;
	
private Date EndDate=null;
	
private String JobDefinitionId=null;
	
private String Node=null;
	
private String ParentId=null;
	
private int RetentionPeriod=0;
	
private String RetentionPeriodFormatted=null;
	
private short ReturnCode=0;
	
private String SchedulerID=null;
	
private String SchedulerName=null;
	
private String AppName=null;
	
private Date SubmitDate=null;
	
private String User=null;
	
private String VendorData=null;
	
private String JobStatus=null;
	
private String Name=null;
	
private String Description=null;
	
public SAP_ITSAMJavaSchedulerJob(){

}

public SAP_ITSAMJavaSchedulerJob(String InstanceID,String JobID,String TaskID,String ElementName,Date StartTime,boolean CancelRequest,Date EndDate,String JobDefinitionId,String Node,String ParentId,int RetentionPeriod,String RetentionPeriodFormatted,short ReturnCode,String SchedulerID,String SchedulerName,String AppName,Date SubmitDate,String User,String VendorData,String JobStatus,String Name,String Description){

this.InstanceID = InstanceID;
	
this.JobID = JobID;
	
this.TaskID = TaskID;
	
this.ElementName = ElementName;
	
this.StartTime = StartTime;
	
this.CancelRequest = CancelRequest;
	
this.EndDate = EndDate;
	
this.JobDefinitionId = JobDefinitionId;
	
this.Node = Node;
	
this.ParentId = ParentId;
	
this.RetentionPeriod = RetentionPeriod;
	
this.RetentionPeriodFormatted = RetentionPeriodFormatted;
	
this.ReturnCode = ReturnCode;
	
this.SchedulerID = SchedulerID;
	
this.SchedulerName = SchedulerName;
	
this.AppName = AppName;
	
this.SubmitDate = SubmitDate;
	
this.User = User;
	
this.VendorData = VendorData;
	
this.JobStatus = JobStatus;
	
this.Name = Name;
	
this.Description = Description;
	
}

/*
Within the scope of the instantiating Namespace, InstanceID opaquely and uniquely identifies an instance of this class. In order to ensure uniqueness within the NameSpace, the value of InstanceID SHOULD be constructed using the following 'preferred' algorithm: 
<OrgID>:<LocalID> 
Where <OrgID> and <LocalID> are separated by a colon ':', and where <OrgID> MUST include a copyrighted, trademarked or otherwise unique name that is owned by the business entity creating/defining the InstanceID, or is a registered ID that is assigned to the business entity by a recognized global authority (This is similar to the <Schema Name>_<Class Name> structure of Schema class names.) In addition, to ensure uniqueness <OrgID> MUST NOT contain a colon (':'). When using this algorithm, the first colon to appear in InstanceID MUST appear between <OrgID> and <LocalID>. 
<LocalID> is chosen by the business entity and SHOULD not be re-used to identify different underlying (real-world) elements. If the above 'preferred' algorithm is not used, the defining entity MUST assure that the resultant InstanceID is not re-used across any InstanceIDs produced by this or other providers for this instance's NameSpace. 
For DMTF defined instances, the 'preferred' algorithm MUST be used with the <OrgID> set to 'CIM'.
@return String
*/
public String getInstanceID() 
{
return this.InstanceID;
}

/*

@return String
*/
public String getJobID() 
{
return this.JobID;
}

/*

@return String
*/
public String getTaskID() 
{
return this.TaskID;
}

/*
A user-friendly name for the object. This property allows each instance to define a user-friendly name IN ADDITION TO its key properties/identity data, and description information. 
Note that ManagedSystemElement's Name property is also defined as a user-friendly name. But, it is often subclassed to be a Key. It is not reasonable that the same property can convey both identity and a user friendly name, without inconsistencies. Where Name exists and is not a Key (such as for instances of LogicalDevice), the same information MAY be present in both the Name and ElementName properties.
@return String
*/
public String getElementName() 
{
return this.ElementName;
}

/*
The time that the Job was actually started. This may be represented by an actual date and time, or by an interval relative to the time that this property is requested. Note that this property is also present in the JobProcessingStatistics class. This is necessary to capture the processing information for recurring Jobs, since only the 'last' run time can be stored in this single-valued property.
@return Date
*/
public Date getStartTime()
{
return this.StartTime;
}

/*

@return boolean
*/
public boolean getCancelRequest()
{
return this.CancelRequest;
}

/*

@return Date
*/
public Date getEndDate()
{
return this.EndDate;
}

/*

@return String
*/
public String getJobDefinitionId() 
{
return this.JobDefinitionId;
}

/*

@return String
*/
public String getNode() 
{
return this.Node;
}

/*

@return String
*/
public String getParentId() 
{
return this.ParentId;
}

/*

@return int
*/
public int getRetentionPeriod()
{
return this.RetentionPeriod;
}

/*

@return String
*/
public String getRetentionPeriodFormatted() 
{
return this.RetentionPeriodFormatted;
}

/*

@return short
*/
public short getReturnCode()
{
return this.ReturnCode;
}

/*

@return String
*/
public String getSchedulerID() 
{
return this.SchedulerID;
}

/*

@return String
*/
public String getSchedulerName() 
{
return this.SchedulerName;
}

/*

@return String
*/
public String getAppName() 
{
return this.AppName;
}

/*

@return Date
*/
public Date getSubmitDate()
{
return this.SubmitDate;
}

/*

@return String
*/
public String getUser() 
{
return this.User;
}

/*

@return String
*/
public String getVendorData() 
{
return this.VendorData;
}

/*
A free form string representing the Job's status. The primary status is reflected in the inherited OperationalStatus property. JobStatus provides additional, implementation-specific details.
@return String
*/
public String getJobStatus() 
{
return this.JobStatus;
}

/*
The user friendly name for this instance of Job. In addition, the user friendly name can be used as a property for a search or query. (Note: Name does not have to be unique within a namespace.)
@return String
*/
public String getName() 
{
return this.Name;
}

/*
The Description property provides a textual description of the object.
@return String
*/
public String getDescription() 
{
return this.Description;
}
	
}
