// Class generated by SAP Labs Bulgaria Generator
// Don't change it !!


/**
 * Copyright (c) 2000 by SAP AG, Walldorf.,
 * url: http:////www.sap.com
 * All rights reserved.
 *
 * This software is the confidential and proprietary information
 * of SAP AG, Walldorf.. You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms
 * of the license agreement you entered into with SAP.
 */
package com.sap.engine.mejb.notification;



import com.sap.engine.services.rmi_p4.*;


/**
*
* @author  RMIC Generator
* @version 6.30
*/
public class NotificationListenerRemote_Stub extends com.sap.engine.services.rmi_p4.StubImpl 
		implements com.sap.engine.mejb.notification.NotificationListenerRemote {

	private static final String[] operations = {
			"handleNotification(javax.management.Notification,java.lang.Object)"};

	public String[] p4_getOperations() {
		return operations;
	}

	public void handleNotification(javax.management.Notification _param0, java.lang.Object _param1)  {

		if (isLocal) {
			java.rmi.Remote remote;
			if (p4remote == null) {
				throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, null);
			} else {
				try {
					remote = p4remote.delegate();
				} catch (java.rmi.NoSuchObjectException nso) { 
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException) broker.getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Object_is_Disconnected, nso);
				}
			}
			try {
				com.sap.engine.mejb.notification.NotificationListenerRemote remoteInterface = (com.sap.engine.mejb.notification.NotificationListenerRemote) remote;
				ReplicateOutputStream out1 = p4_getReplicateOutput();
				ReplicateInputStream inn1 = p4_getReplicateInput(out1);
				remoteInterface.handleNotification((javax.management.Notification) broker.narrow(p4_replicateWithStreams(inn1,out1,_param0),javax.management.Notification.class), (java.lang.Object) broker.narrow(p4_replicateWithStreams(inn1,out1,_param1),java.lang.Object.class));
				return;
			} catch (java.lang.ClassCastException rex) {
				// $JL-EXC$
				ReplicateOutputStream outt = p4_getReplicateOutput();
				ReplicateInputStream inn = p4_getReplicateInput(outt);
				Object[] params = new Object[]{p4_replicateWithStreams(inn,outt,_param0),p4_replicateWithStreams(inn,outt,_param1)};
				Class[] p = new Class[]{(Class) p4_replicateWithStreams(inn,outt,javax.management.Notification.class),(Class) p4_replicateWithStreams(inn,outt,java.lang.Object.class)};
				try { 
					p4_invokeReflect(remote,"handleNotification",params,p);
					return ;
				} catch (java.lang.NoSuchMethodException nsme) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.No_Such_Method,nsme);
				} catch (java.lang.IllegalAccessException iae) {
					// $JL-EXC$
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Illegal_Access,iae);
				} catch (java.lang.reflect.InvocationTargetException ite) {
					// $JL-EXC$
					java.lang.Throwable target = (java.lang.Throwable) p4_replicate(ite.getTargetException());
					{ 
					 throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException,com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.InvocationTarget, target);
					}
				} 
			} catch (java.lang.RuntimeException rex) {
					// $JL-EXC$
				broker.log("P4 Call exception: Exception in execute <handleNotification>", broker.debug);
				broker.log(rex, broker.debug);
					throw rex;
			} 
		}
			com.sap.engine.services.rmi_p4.Call call = null;
			try {
				call = p4_newCall(0);
				P4ObjectOutput out = call.getOutputStream();
				out.writeObject( _param0);
				out.writeObject( _param1);
				p4_invoke(call);
				P4ObjectInput in = call.getResultStream();
			} catch (java.lang.Exception tr) {
					// $JL-EXC$
				 // ex.printStackTrace();
				if ( java.lang.RuntimeException.class.isAssignableFrom(tr.getClass()) ) {
					throw (java.lang.RuntimeException)tr;
				} else {
					throw (com.sap.engine.services.rmi_p4.P4RuntimeException)P4ObjectBroker.init().getException(P4ObjectBroker.P4_RuntimeException, com.sap.engine.services.rmi_p4.exception.P4BaseRuntimeException.Unexpexted_exception, tr);
				}
			} finally {
				p4_done(call);
				call.releaseInputStream();
			}
	}


}
