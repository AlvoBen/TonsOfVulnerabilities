

  /*
This file is generated by Code Generator
to wrap datatypes of attributes of CIMClass SAP_ITSAMI18NService
WARNING:DO NOT CHANGE THE CODE MANUALLY. 
*/
package com.sap.i18n.itsam;

import java.io.InputStream;
import java.util.Date;

import javax.management.Attribute;
import javax.management.AttributeList;
import javax.management.AttributeNotFoundException;
import javax.management.DynamicMBean;
import javax.management.InvalidAttributeValueException;
import javax.management.MBeanAttributeInfo;
import javax.management.MBeanException;
import javax.management.MBeanInfo;
import javax.management.MBeanOperationInfo;
import javax.management.MBeanParameterInfo;
import javax.management.ReflectionException;
import javax.management.RuntimeOperationsException;
import javax.management.openmbean.CompositeData;
import javax.management.openmbean.CompositeDataSupport;
import javax.management.openmbean.CompositeType;
import javax.management.openmbean.OpenDataException;
import javax.management.openmbean.OpenType;
import javax.management.openmbean.SimpleType;

  public class SAP_ITSAMI18NServiceWrapper implements DynamicMBean    {   
 
 /* The wrapped object to be exposed as MBean */  
  private SAP_ITSAMI18NService mbean;
  
  /* MBeanInfo */
  private static final MBeanInfo mbeanInfo;
  
 /* Initialize MBeanInfo */
  static {
    // attributes
    
       MBeanAttributeInfo[] attributeInfo = new MBeanAttributeInfo[0]; 
    
	
// operations
MBeanParameterInfo[] signature;
MBeanOperationInfo[] operationInfo = new MBeanOperationInfo[7];

	
// for method showSAPTimeZone
 signature = new MBeanParameterInfo[0];
operationInfo[0] = new MBeanOperationInfo("showSAPTimeZone", "Description:howSAPTimeZone(sapTim[]:string{EmbeddedInstance=SAP_ITSAMSAPTimeZone,out}):uint32", signature, "[Ljavax.management.openmbean.CompositeData;", MBeanOperationInfo.UNKNOWN);
	
// for method showSAPCalConfig
 signature = new MBeanParameterInfo[0];
operationInfo[1] = new MBeanOperationInfo("showSAPCalConfig", "Description:show Calendar Configuration", signature, "[Ljavax.management.openmbean.CompositeData;", MBeanOperationInfo.UNKNOWN);
	
// for method refreshSAPLanguage
signature = new MBeanParameterInfo[1];
signature[0] = new MBeanParameterInfo("inputStream", "java.io.InputStream","Description:the input stream containint Internationalization settings like languages and time zones");
operationInfo[2] = new MBeanOperationInfo("refreshSAPLanguage", "Description:efreshSAPLanguage():uint32", signature, "void", MBeanOperationInfo.UNKNOWN);
	
// for method refreshCalConfig
 signature = new MBeanParameterInfo[1];
 signature[0] = new MBeanParameterInfo("inputStream", "java.io.InputStream","Description:the input stream containint Internationalization settings like languages and time zones");
operationInfo[3] = new MBeanOperationInfo("refreshCalConfig", "Description:Description Missing", signature, "void", MBeanOperationInfo.UNKNOWN);
	
// for method refreshSAPTimeZone
signature = new MBeanParameterInfo[1];
signature[0] = new MBeanParameterInfo("inputStream", "java.io.InputStream","Description:the input stream containint Internationalization settings like languages and time zones");
operationInfo[4] = new MBeanOperationInfo("refreshSAPTimeZone", "Description:efreshTZData():uint32", signature, "void", MBeanOperationInfo.UNKNOWN);
	
// for method showSAPLanguage
 signature = new MBeanParameterInfo[0];
operationInfo[5] = new MBeanOperationInfo("showSAPLanguage", "Description:etSAPLanguage(language[]:string{EmbeddedInstance=SAP_ITSAMSAPLanguage,out}):uint32", signature, "[Ljavax.management.openmbean.CompositeData;", MBeanOperationInfo.UNKNOWN);
	
// for method RequestStateChange
 signature = new MBeanParameterInfo[2];
signature[0] = new MBeanParameterInfo("RequestedState", "short","Description:The state requested for the element. This information will be placed into the instance's RequestedState property if the RequestStateChange method's return code is 0, 3, or 4096 (0x1000) - 'Completed with No Error', 'Timeout', or 'Job Started' respectively. Refer to the description of the EnabledState and RequestedState properties for the detailed meanings of the RequestedState values.");
signature[1] = new MBeanParameterInfo("TimeoutPeriod", "java.util.Date","Description:A timeout period that specifies the maximum amount of time that the client expects the transition to the new state to take. The interval format MUST be used to specify the TimeoutPeriod. A value of 0 or a null parameter indicates that the client has no time requirements for the transition. If this property does not contain 0 or null and the implementation doesn't support this parameter. A return code of 'Use Of Timeout Parameter Not Supported' MUST be returned.");
operationInfo[6] = new MBeanOperationInfo("RequestStateChange", "Description:Requests that the element's state be changed to the value specified in the RequestedState parameter. When the requested state change takes place, the element's EnabledState and RequestedState will be the same. Invoking the RequestStateChange method multiple times could result in earlier requests being overwritten/lost. If 0 is returned, then the task completed successfully and the use of ConcreteJob was not required. If 4096 (0x1000) is returned, then the task will take some time to complete, ConcreteJob will be created, and its reference returned in the output parameter Job. Any other return code indicates an error condition.", signature, "javax.management.ObjectName", MBeanOperationInfo.UNKNOWN);




mbeanInfo = new MBeanInfo("SAP_ITSAMI18NService", "SAP_ITSAMI18NService MBean", attributeInfo, null, operationInfo , null);

  }


	 /*
	  * Wraps given SAP_ITSAMI18NService and provides a javax.management.DynamicMBean interface on top
   */
       public  SAP_ITSAMI18NServiceWrapper(SAP_ITSAMI18NService mbean){
              this.mbean = mbean;
       }
       
    /*
	  * Creates an empty wrapper for SAP_ITSAMI18NService
   */
    public SAP_ITSAMI18NServiceWrapper() 
		{
		}
			  /*
   * Sets a new SAP_ITSAMI18NService to be wrapped and returns the old one
   */
  public SAP_ITSAMI18NService setManagedObject(SAP_ITSAMI18NService mbean) {
    SAP_ITSAMI18NService old = this.mbean;
    this.mbean = mbean;
    return old;
  }

  /*
   * Returns the currently wrapped SAP_ITSAMI18NService
   */
  public SAP_ITSAMI18NService getManagedObject() {
    return this.mbean;
  }
		
		
    /*
   * @see javax.management.DynamicMBean#getAttributes(java.lang.String)
   */
      public AttributeList getAttributes(String[] attributes) {
      
     AttributeList list = new AttributeList();
//		Check attributeNames to avoid NullPointerException later on
		 if (attributes == null) {
			 throw new RuntimeOperationsException(
				 new IllegalArgumentException(
					 "attributeNames[] cannot be null"),
				 "Cannot invoke a getter of SAP_ITSAMShortDumpManagementService");
		 }
//		if attributeNames is empty, return an empty result list
		 if (attributes.length == 0)
				 return list;

          if(attributes != null)
            {
                for (int i = 0; i < attributes.length; i++)
                {
                    String attribute = attributes[i];
                    try
                    {
                        Object result = getAttribute(attribute);
                        list.add(new Attribute(attribute, result));
                    }
                    catch (AttributeNotFoundException ignored)
                    {
                    //$JL-EXC$
                    }
                    catch (MBeanException ignored)
                    {
                    //$JL-EXC$
                    }
                    catch (ReflectionException ignored)
                    {
                    //$JL-EXC$
                    }
                }
    
            }
            return list;
	   }


 /**
  * @see javax.management.DynamicMBean#setAttributes(javax.management.AttributeList)
  */
	  public AttributeList setAttributes(AttributeList attributes) {
		//		Check attributesto avoid NullPointerException later on
		 if (attributes == null) {
			 throw new RuntimeOperationsException(
				 new IllegalArgumentException(
					 "AttributeList attributes cannot be null"),
				 "Cannot invoke a setter of SAP_ITSAMShortDumpManagementService" );
		 }
		
		AttributeList list = new AttributeList();
		
//		if attributeNames is empty, nothing more to do
		 if (attributes.isEmpty())
			 return list;
	            if (attributes != null)
		            {
		                for (int i = 0; i < attributes.size(); ++i)
		                {
		                    Attribute attribute = (Attribute) attributes.get(i);
		                    try
		                    {
		                        setAttribute(attribute);
		                        list.add(attribute);
		                    }
		                    catch (AttributeNotFoundException ignored)
		                    {
		                    //$JL-EXC$
		                    }
		                    catch (InvalidAttributeValueException ignored)
		                    {
		                    //$JL-EXC$
		                    }
		                    catch (MBeanException ignored)
		                    {
		                    //$JL-EXC$
		                    }
		                    catch (ReflectionException ignored)
		                    {
		                    //$JL-EXC$
		                    }
		                }
		            }
		    
		            return list;
	  }
    
     /**
   * @see javax.management.DynamicMBean#getMBeanInfo()
   */
	public MBeanInfo getMBeanInfo() {
     return mbeanInfo;
	  }   
    
 /**
   * @see javax.management.DynamicMBean\#setAttribute(javax.management.Attribute)
   */    
    public void setAttribute(Attribute attr) throws AttributeNotFoundException, InvalidAttributeValueException,
      MBeanException, ReflectionException {
    //  String name = attr.getName();
          
         }             
  
   /**
   * @see javax.management.DynamicMBean#invoke(java.lang.String, java.lang.Object[], java.lang.String[])
   */
     public Object invoke(String operationName, Object param[], String signature[])
    throws MBeanException, ReflectionException {
     if (operationName == null) {
        throw new RuntimeOperationsException(
            new IllegalArgumentException(
                "Operation name cannot be null"),
            "Cannot invoke a null operation in " + "SAP_ITSAMI18NService");
            }
            
            if(operationName.equalsIgnoreCase("showSAPTimeZone") &&              
                signature.length==0)
            {
            try{return getCDataArrForSAP_ITSAMSAPTimeZone(mbean.showSAPTimeZone(
	    	));
			} catch (OpenDataException e1){
			e1.printStackTrace();
			return e1;
			}
            }
            
            if(operationName.equalsIgnoreCase("showSAPCalConfig") &&              
                signature.length==0)
            {
            try{return getCDataArrForSAP_ITSAMSAPCalConfig(mbean.showSAPCalConfig(
	    	));
			} catch (OpenDataException e1){
			e1.printStackTrace();
			return e1;
			}
            }
            
            if(operationName.equalsIgnoreCase("refreshSAPLanguage") &&              
                signature.length==0)
            {
            	InputStream is = null;
            	if (param.length > 0 && param[0] instanceof InputStream) {
            		is = (InputStream)param[0];
            	}
            	mbean.refreshSAPLanguage(is);
            	return null;
            }
            
            if(operationName.equalsIgnoreCase("refreshCalConfig") &&              
                signature.length==0)
            {
            	InputStream is = null;
            	if (param.length > 0 && param[0] instanceof InputStream) {
            		is = (InputStream)param[0];
            	}
            	mbean.refreshCalConfig(is);
            	return null;
            }
            
            if(operationName.equalsIgnoreCase("refreshSAPTimeZone") &&              
                signature.length==0)
            {
            	InputStream is = null;
            	if (param.length > 0 && param[0] instanceof InputStream) {
            		is = (InputStream)param[0];
            	}
            	mbean.refreshSAPTimeZone(is);
            	return null;
            }
            
            if(operationName.equalsIgnoreCase("showSAPLanguage") &&              
                signature.length==0)
            {
            try{return getCDataArrForSAP_ITSAMSAPLanguage(mbean.showSAPLanguage(
	    	));
			} catch (OpenDataException e1){
			e1.printStackTrace();
			return e1;
			}
            }
            
            if(operationName.equalsIgnoreCase("RequestStateChange") &&              
                (signature[0].equals("java.lang.Short") || signature[0].equalsIgnoreCase("short")) && (signature[1].equals("java.sql.Date") || signature[1].equals("java.util.Date")))
            {
            return mbean.RequestStateChange(((Short)param[0]).shortValue() , (Date) param[1]);
			
            }
            
            else { 
        // unrecognized operation name:
        throw new ReflectionException(
            new NoSuchMethodException(operationName), 
            "Cannot find the operation " + operationName +
                " in " + "SAP_ITSAMI18NService");
    }
  }
   
     /*
   * @see javax.management.DynamicMBean#getAttribute(java.lang.String)
   */
public Object getAttribute(String arg0 ) throws AttributeNotFoundException, MBeanException,   ReflectionException {
             if (arg0 == null) 
  throw new RuntimeOperationsException(
	 new IllegalArgumentException("Attribute name cannot be null"), 
	 "Cannot invoke a getter of " + "SAP_ITSAMI18NService" +
		 " with null attribute name");  
		     
     else {
           throw(new AttributeNotFoundException("Cannot find " + arg0+ " attribute"));
             }
             
            
  }
 
// Conversion methods for CompositeData type Class SAP_ITSAMSAPTimeZone 
  public static CompositeData getCDataForSAP_ITSAMSAPTimeZone(com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPTimeZone metric) throws OpenDataException {
			  if(metric==null){
				  return null;
				}else{
					 String[] attrnames={"TimeZoneID","TimeZoneText","DST","DiffFromUTC"};
					 Object[] attrobj={metric.getTimeZoneID(),metric.getTimeZoneText(),metric.getDST(),metric.getDiffFromUTC()};

					return new CompositeDataSupport(getCTypeForSAP_ITSAMSAPTimeZone(),attrnames,attrobj);
							}
		}
public static com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPTimeZone getSAP_ITSAMSAPTimeZoneForCData(CompositeData data) {
			 if(data==null){
				return null;
			}else{							
				
				
			/*throw an exception if the value of any key property is null in CData*/
				
				
			/*Initializes the read-only properties to default values if the value is null in CData with in the constructor*/				
				

				com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPTimeZone result = new com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPTimeZone((String) data.get("TimeZoneID"),(String) data.get("TimeZoneText"),(String) data.get("DST"),(String) data.get("DiffFromUTC"));
		         
		          
					  return result;
					}
		  }
		 
		 public static CompositeType getCTypeForSAP_ITSAMSAPTimeZone() throws OpenDataException
		 {
		 				 String[] itemNames={"TimeZoneID","TimeZoneText","DST","DiffFromUTC"};
                	String[] itemDescriptions={"Description:","Description:","Description:","Description:"};
               OpenType<?>[] itemTypes={SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING };
		
				return new CompositeType("SAP_ITSAMSAPTimeZone","Description:ManagedElement is an abstract class that provides a common superclass (or top of the inheritance tree) for the non-association classes in the CIM Schema.",itemNames,itemDescriptions,itemTypes);
	  } 


public static com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPTimeZone[] getSAP_ITSAMSAPTimeZoneArrForCData(CompositeData[] cd){
			if(cd==null){
			return null;
			}else{
				  com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPTimeZone[] arr = new com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPTimeZone[cd.length] ;
				for(int i=0;i< cd.length;i++)
				arr[i] =  getSAP_ITSAMSAPTimeZoneForCData(cd[i]);
				return arr;
					}
	}

	
public static CompositeData[] getCDataArrForSAP_ITSAMSAPTimeZone(com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPTimeZone[] crr) throws OpenDataException{
			if(crr==null){
			return null;
			}else{
     	CompositeDataSupport[] cd = new CompositeDataSupport[crr.length]; 
     	for(int i=0;i<crr.length;i++)
     	cd[i]=(CompositeDataSupport) getCDataForSAP_ITSAMSAPTimeZone(crr[i]);
     	return cd;
					 }
     }

// Conversion methods for CompositeData type Class SAP_ITSAMSAPCalConfig 
  public static CompositeData getCDataForSAP_ITSAMSAPCalConfig(com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPCalConfig metric) throws OpenDataException {
			  if(metric==null){
				  return null;
				}else{
					 String[] attrnames={"DateFormat","IslamicDate","GregorianDate"};
					 Object[] attrobj={metric.getDateFormat(),metric.getIslamicDate(),metric.getGregorianDate()};

					return new CompositeDataSupport(getCTypeForSAP_ITSAMSAPCalConfig(),attrnames,attrobj);
							}
		}
public static com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPCalConfig getSAP_ITSAMSAPCalConfigForCData(CompositeData data) {
			 if(data==null){
				return null;
			}else{							
				
				
			/*throw an exception if the value of any key property is null in CData*/
				
				
			/*Initializes the read-only properties to default values if the value is null in CData with in the constructor*/				
				

				com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPCalConfig result = new com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPCalConfig((String) data.get("DateFormat"),(String) data.get("IslamicDate"),(String) data.get("GregorianDate"));
		         
		          
					  return result;
					}
		  }
		 
		 public static CompositeType getCTypeForSAP_ITSAMSAPCalConfig() throws OpenDataException
		 {
		 				 String[] itemNames={"DateFormat","IslamicDate","GregorianDate"};
                	String[] itemDescriptions={"Description:Description Missing","Description:Description Missing","Description:Description Missing"};
               OpenType<?>[] itemTypes={SimpleType.STRING,SimpleType.STRING,SimpleType.STRING };
		
				return new CompositeType("SAP_ITSAMSAPCalConfig","Description:ManagedElement is an abstract class that provides a common superclass (or top of the inheritance tree) for the non-association classes in the CIM Schema.",itemNames,itemDescriptions,itemTypes);
	  } 


public static com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPCalConfig[] getSAP_ITSAMSAPCalConfigArrForCData(CompositeData[] cd){
			if(cd==null){
			return null;
			}else{
				  com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPCalConfig[] arr = new com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPCalConfig[cd.length] ;
				for(int i=0;i< cd.length;i++)
				arr[i] =  getSAP_ITSAMSAPCalConfigForCData(cd[i]);
				return arr;
					}
	}

	
public static CompositeData[] getCDataArrForSAP_ITSAMSAPCalConfig(com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPCalConfig[] crr) throws OpenDataException{
			if(crr==null){
			return null;
			}else{
     	CompositeDataSupport[] cd = new CompositeDataSupport[crr.length]; 
     	for(int i=0;i<crr.length;i++)
     	cd[i]=(CompositeDataSupport) getCDataForSAP_ITSAMSAPCalConfig(crr[i]);
     	return cd;
					 }
     }

// Conversion methods for CompositeData type Class SAP_ITSAMSAPLanguage 
  public static CompositeData getCDataForSAP_ITSAMSAPLanguage(com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPLanguage metric) throws OpenDataException {
			  if(metric==null){
				  return null;
				}else{
					 String[] attrnames={"COUNTRY","ISO2","LAISO","SPRAS","DFLTLANG","LANGTEXT"};
					 Object[] attrobj={metric.getCOUNTRY(),metric.getISO2(),metric.getLAISO(),metric.getSPRAS(),new Boolean(metric.getDFLTLANG()),metric.getLANGTEXT()};

					return new CompositeDataSupport(getCTypeForSAP_ITSAMSAPLanguage(),attrnames,attrobj);
							}
		}
public static com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPLanguage getSAP_ITSAMSAPLanguageForCData(CompositeData data) {
			 if(data==null){
				return null;
			}else{							
				
				
			/*throw an exception if the value of any key property is null in CData*/
				
				
			/*Initializes the read-only properties to default values if the value is null in CData with in the constructor*/				
				

				com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPLanguage result = new com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPLanguage((String) data.get("COUNTRY"),(String) data.get("ISO2"),(String) data.get("LAISO"),(String) data.get("SPRAS"),data.get("DFLTLANG")==null? false : ((Boolean) data.get("DFLTLANG")).booleanValue(),(String) data.get("LANGTEXT"));
		         
		          
					  return result;
					}
		  }
		 
		 public static CompositeType getCTypeForSAP_ITSAMSAPLanguage() throws OpenDataException
		 {
		 				 String[] itemNames={"COUNTRY","ISO2","LAISO","SPRAS","DFLTLANG","LANGTEXT"};
                	String[] itemDescriptions={"Description:","Description:","Description:","Description:","Description:","Description:"};
               OpenType<?>[] itemTypes={SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.BOOLEAN,SimpleType.STRING };
		
				return new CompositeType("SAP_ITSAMSAPLanguage","Description:ManagedElement is an abstract class that provides a common superclass (or top of the inheritance tree) for the non-association classes in the CIM Schema.",itemNames,itemDescriptions,itemTypes);
	  } 


public static com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPLanguage[] getSAP_ITSAMSAPLanguageArrForCData(CompositeData[] cd){
			if(cd==null){
			return null;
			}else{
				  com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPLanguage[] arr = new com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPLanguage[cd.length] ;
				for(int i=0;i< cd.length;i++)
				arr[i] =  getSAP_ITSAMSAPLanguageForCData(cd[i]);
				return arr;
					}
	}

	
public static CompositeData[] getCDataArrForSAP_ITSAMSAPLanguage(com.sap.i18n.itsam.compositedata.SAP_ITSAMSAPLanguage[] crr) throws OpenDataException{
			if(crr==null){
			return null;
			}else{
     	CompositeDataSupport[] cd = new CompositeDataSupport[crr.length]; 
     	for(int i=0;i<crr.length;i++)
     	cd[i]=(CompositeDataSupport) getCDataForSAP_ITSAMSAPLanguage(crr[i]);
     	return cd;
					 }
     }

}
 