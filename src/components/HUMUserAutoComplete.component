<!--
Page Name        : HUMUserAutoComplete 
Version          : 1.0 
Created Date     : MAY 22 2014
Function         : Component use to display auto complete functionality.
Modification Log :
* Developer                 Code review         Date                  Description
* ------------------------------------------------------------------------------------------------------------------------------                
* Sagar Tapadia                 17521        05/22/2014            Original Version
* Manish Kumar                  17521        05/23/2014            Defect fixed : 150331
* Manish Kumar                  17521        08/28/2014            Modified according to code review : 17521
* SuryaKumari Medicherla        18800        10/27/2014            Added Onfocus functionality on autocomplete
* Raja Sekhar Reddy M V         54963        06/01/2017            Added code for removing Special Characters/ ACSII Codes in User Name REQ - 291060(PRB 5424043).
* Praveen Kumar Parimi          60557        02/02/2017            Defect fix for 257022.0001,257167.0001,257169.0001.
* Prudhvi Pamarthi                           08/04/2020            US#1045266 - DF1264 Fix
* Mithra Bharadwaj                           02/09/2021            US#1522825 SonarQube Changes
-------------------------------------------------------------------------------------------------------------------------------->

<apex:component controller="HUMUserAutoCompleteController">
    <apex:includeScript value="{!URLFOR($Resource.CRM_JQUERY, 'jquery.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.HUMjqueryUI, 'jquery.watermarkinput.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.CRM_JQUERY, 'jquery-ui.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.HUMjqueryUI,'jquery-ui.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.HUMjqueryUI,'main.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.HUMjqueryUI,'main.js')}"/>    
    
    <script type="text/javascript">
    //initialising jquery
//dont enable P9 Critical Fix    var j$ = jQuery.noConflict();
            var currentPosition = 0;
            var heightTable;
    //jquery for Javascript remoting that will call controller method.        
//dont enable P9 Critical Fix    var $mm = jQuery.noConflict();
    
    jQuery(document).ready(function() {
    
    HUMUserAutoCompleteInputElement = function(){};
    
    jQuery(escape_colon('{!JSENCODE(input_id)}')).attr('onchange','');
    
        var objectname;
        var queueNm='{!JSENCODE(queueName)}';
        var input_id;
        var numberOfResultsToDisplay;
        var wildcardBefore;
        var searchData;
        jQuery(escape_colon('{!JSENCODE(input_id)}')).autocomplete({
            minLength: 1,
            source: function(request, response) {
                queryTerm = request.term;
                HUMUserAutoCompleteController.searchObject("{!JSENCODE(objectname)}","{!JSENCODE(queueName)}",request.term, "{!JSENCODE(numberOfResultsToDisplay)}", "{!JSENCODE(wildcardBefore)}",  function(result, event){
                    if(event.type == 'exception') {
                    } else {
                        sObjects = result;
                        jQuery(escape_colon('{!JSENCODE(resSize)}')).val( sObjects.length );
                        jQuery(escape_colon('{!User_Id}')).val('');
                        response(sObjects);
                }
            });
        },
            focus: function( event, ui ) {            
                    searchData = ui.item.Name.replace(/&#39;/g,"'");                    
                    jQuery(escape_colon('{!JSENCODE(input_id)}')).val(searchData);                 
                    jQuery(escape_colon('{!JSENCODE(User_Id)}')).val( ui.item.Id);
                    jQuery(escape_colon('{!JSENCODE(input_id)}_lkid')).val( ui.item.Id );                   
                    jQuery(escape_colon('{!JSENCODE(input_id)}_lkold')).val( ui.item.Name );
                    jQuery(escape_colon('{!JSENCODE(input_id)}_mod')).val( '1' );
                return false;
            },
            select: function( event, ui ) {                    
                    searchData = ui.item.Name.replace(/&#39;/g,"'");                   
                    jQuery(escape_colon('{!JSENCODE(input_id)}')).val(searchData);                    
                    jQuery(escape_colon('{!JSENCODE(User_Id)}')).val( ui.item.Id);
                    jQuery(escape_colon('{!JSENCODE(input_id)}_lkid')).val( ui.item.Id );
                    jQuery(escape_colon('{!JSENCODE(input_id)}_lkold')).val( ui.item.Name );
                    jQuery(escape_colon('{!JSENCODE(input_id)}_mod')).val( '1' );
                return false;
            }
        })
        .data( "uiAutocomplete" )._renderItem = function( ul, item ) {
            var entry = "<a>" + item.Name.replace( new RegExp( "(" + queryTerm + ")" , 'gi' ), '<b>$1</b>' ) + ' - '+item.Email;
            entry = entry + "</a>";
    
            return jQuery( "<li></li>" )
            .data( "item.autocomplete", item )
            .append( entry )
            .appendTo( ul );
        };

    });
    </script>
    
    <apex:attribute name="objectname" description="The object name you want to search in." type="String" required="true"/>
    <apex:attribute name="User_Id" description="The ID for the TextField which holds searched UserID." type="String" required="false"/>
    <apex:attribute name="input_id" description="The ID for the Autocomplete List Textbox." type="String" required="true"/>
    <apex:attribute name="queueName" description="Name of the Queue" type="String" required="true"/>
    <apex:attribute name="numberOfResultsToDisplay" description="The number of results to return for the autocomplete." type="String" required="false"/>
    <apex:attribute name="wildcardBefore" description="If set to true it will look for the sequence throughout the name, if set to false it will only display results that start with the sequence" type="String" default="true"/>
    <apex:attribute name="resSize" type="string" required="false" description="The variable to represent size of the iteration."/>
    
</apex:component>