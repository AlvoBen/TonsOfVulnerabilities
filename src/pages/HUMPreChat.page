<!--
Page Name        : HUMPreChat
Version          : 1.0 
Created Date     : 09/09/2014 
Function         : This page is pre-chat survey form. Which is filled in by user before chat is initiated.
Modification Log :
*   Modification ID     Developer               Code Review             Date                 Description
* ------------------------------------------------------------------------------------------------------------------------------                
*   1.0                 Ninad Patil              18240                  09/09/2014           Original       
*   1.1                 Ninad Patil              18317                  03/10/2014           Solved  issue of passing category to 
                                                                                             SFDC from pre-chat page.
*   1.2                 Ninad Patil              18801                  10/10/2014           Fixed for defect :1566999 (Persisting accountId while chat transfer) 
*   1.3                 Ninad Patil              18801                  10/27/2014           Fixed the defect : 158673 (reordered fields appearing on hover accept button)
*   1.4                 Ninad Patil              18975                  11/04/2014           CR50 related changes incorporated.
*   1.5                 Sagar Tapadia            19849                  12/10/2014           Fix for Defect:158671: Instead of saving URL from Home page, pass this value to pre chat page and save here.
*   1.6                 Sagar Tapadia            19849                  12/11/2014           Fix for Defect:164722: Change of name from Categorylabel to Category.
*   1.7                 Sagar Tapadia            20218                  01/06/2015           Changed Behavior of Contact Us to close window on click.
*   1.8                 Sagar Tapadia            21883                  03/26/2015           CA Ticket#4974139: Move Core metrics code to Page rather than keep it inside static resource.
*   1.9                 Sagar Tapadia            26379                  09/15/2015           Req-217639 - Moving labels to custom settings.Custom setting was moved to higher environment as part of other requirement.
                                                                                             Changes done are on line 248,249,251 and 296.Environment changing values will be picked up from Custom setting.
*   1.10                Sagar Tapadia            29608                  11/02/2015           26379 was earlier review. Reraising it to track changes.                                                                                            
*	1.11				Pradeepkumar Dani		 29608					02/01/2016			 Done changes for REQ-241101: Adding form method as 'post' & Changes for code Review comments #29608
*	1.12				Pradeepkumar Dani		 34258                  07/29/2016			 Added changes for PlanName and Category drop down - REQ - 270013
*   1.13				Prachi Bhasin		 	 34258                  07/29/2016			 Added changes for mapping values to buttons
*	1.14				Pradeepkumar Dani		 34258                  08/02/2016			 Updated page with VF standards - REQ - 270091
*	1.15				Shiva Pasumarty		 	                        09/20/2016			 REQ - 284940 - When you click on "Contact Us" get an error "This Page Can't Be Displayed"
*   1.16                Joel George              94916                  05/22/2017           Added a remoting method for PreChat Logging
*   1.17                Vishal Verma             99430                  06/06/2017           REQ - 320399 : CA 6197943 -WebChat/Survey Monkey missing Interaction Id fix.
*   1.17                Rajesh Chandgothia       118776                 08/04/2017           REQ - 323391 : Data model change to Live Agent Chat Transcript & Session Record data (CR for 84045-MF9/MF14)
*   1.18                Rajesh Chandgothia       134994                 10/03/2017           REQ - 329039 FR6.2 Web Chat Missing Member (Person Account) Tab: CA Ticket 6961688 (MyHumana Portal)
*	1.19         		Rajesh C	             144547		            11/03/2017           REQ - 321230 CRM will expose the unique identifier(s) that can be used to link Chat and Web Data sets
*   1.20				Rajesh C                 157145                 12/08/2017           REQ - 348289 Populate Skill Name in Live Agent Window And Visitor Tab (MyHumana)
*   1.21                Sachin Karale            180049                 02/07/2018           Req - 351182 Used Old API to save fields (URL, Plan Name, Category, Issue).
*   1.22				Vandana Chaudhari     	 220488	                04/09/2018         	 REQ - 355781 CR788: Web Chat Auto Create Case (CMO CR5548)  
*   1.23				Vandana Chaudhari     				 	        07/20/2018         	 REQ - 370601 CA Ticket 7646745 Fix: Web Chat Auto Create Case
*   1.24                Prafull Verma			 328794	                12/28/2018           REQ - 380424: Web Chat Windows Display Proportionately on Small Glass
*   1.25                Pradeep Dani 			 350910					04/12/2019			 REQ - 396202 Associating chat key to the case.
*   1.26                Praveen Kumar Parimi 	         				11/01/2019			 REQ - 409545 - Adding Tealium Script to the Chat Pages. 	
* 	1.27              	Akshay Pai                                      07/16/2020                  REQ - 1292117 IVA NINA - Member Secure chat changes
* 	1.28            	Joel George                                     07/20/2020           REQ - 1159264 Include Chat Type
*   1.29                T. Prasanna Sai Kumar                           04/05/2021           REQ - 1915569  Live Agent Security Vulnerabilities for SonarQube Scan - MyHumana Secure Live Agent
*   1.30                Vishnu Pilli		                            07/29/2021           MF-22 Accolade Impact Member changes
*   1.31                Alvaro Madrid                                   05/02/2022           REQ - 3288511 Fix to avoid Secondary_Chat_Id duplicated in liveChatTranscripts
-------------------------------------------------------------------------------------------------------------------------------->
<apex:page controller="HUMPreChatController" id="thePage" showheader="false" standardStyleSheets="false"  action="{!initVariable}">
    <!-- Loading CSS files received from digital team for Humana view standards -->
    <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/base.css')}"/>
    <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/framework.css')}"/>
    <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/global.css')}"/>
    <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/global1.css')}"/>
    <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/humanacom.css')}"/>
    <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/humanacom1.css')}"/>
    <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/lib.css')}"/>
    <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/styles.css')}"/>
    <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/tools.css')}"/> 
    
    <!-- Loading jQuery toolkit as per VF standards -->
    <apex:includeScript value="{!URLFOR($Resource.CRM_JQUERY, 'jquery.min.js')}" />  
    <head>
      <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>{!$Label.HUMPreChat}</title>
        <style>

            /* .accolade-card{
                font-weight: normal;
                -webkit-font-smoothing: antialiased;
                font-family: "FS Humana",Arial,Helvetica,Verdana,sans-serif;
                font-size: 1rem;
                line-height: 1.5rem;
                box-sizing: border-box;
                background: #ffffff;
                box-shadow: 0 3px 4px 2px #D5D5D5;
                color: #414042;
                border-top: 2px solid #4E8416;
                border-radius: 0 0 4px 4px;
                max-width: 100%;
                width: 100%;
                margin: 0;
                outline-width: 0 !important;
            } */

            .box-container {
                background: #ffffff;
                box-shadow: 0 3px 4px 2px #d5d5d5;
                color: #414042;
                border-top: 2px solid #4E8416;
                border-radius: 0 0 4px 4px;
            }
            .message-container {
                padding: 1.25rem;
            }
            .box-message {
                font-family: "FS Me Web Regular",Tahoma,Helvetica,Arial,sans-serif;
                font-style: normal;
                font-weight: normal;
                font-size: 14px; 
            }
            .accolade-card .dashboard-header-image {
                padding: 1.25rem;
            }
            .accolade-card .dashboard-header-image a img {
                width: 50%;
                height: auto;
            }
            .box-container .dashboard-box-heading {
                font-family: "FS Me Web Regular",Tahoma,Helvetica,Arial,sans-serif;
                font-style: normal;
                font-weight: normal;
                font-size: 18px;
            }
            .accolade-card .columns.box-header {
                padding: .625rem 1.25rem;
            }
            .module-dashboard-box {
                font-family: "FS Me Web Light",Tahoma,Helvetica,Arial,sans-serif;
                font-style: normal;
                font-weight: normal;
                font-size: 16px;
            }
            .box-item {
                padding: 0 1.25rem 1.25rem 1.25rem;
            }
            .box-container .cta-container {
                background: #ffffff;
                box-shadow: 0 3px 4px 2px #d5d5d5;
                color: #414042;
                border-top: 1px solid #D5D5D5;
                border-radius: 0 0 4px 4px;
            }

            .accolade-card .cta-container .column.box-item {
                padding: 1.25rem;
            }

            .accolade-card .cta-container .box-cta .links {
                padding-bottom: .625rem;
            }

            a.arrow-link {
                font-family: "FS Me Web Regular",Tahoma,Helvetica,Arial,sans-serif;
                font-style: normal;
                font-weight: normal;
                color: #aa005f;
                white-space: nowrap;
                font-size: 16px;
                border-bottom: none;
            }
        </style>
    </head>
    <body>
    <!--Do not remove. Tealium code snippet for Humana analytics/metrics-->
        <script type="text/javascript">
        var utag_data = {};
        if (typeof HumAnalytics == "undefined"){
        	var HumAnalytics = window.HumAnalytics = {};}
	HumAnalytics.appid = [];
	HumAnalytics.autorenewflag = [];
	HumAnalytics.copayexcflag = [];
	HumAnalytics.prodcat = [];
	HumAnalytics.prodid = [];      
	HumAnalytics.prodname = [];
	HumAnalytics.prodpkgqty = [];      
	HumAnalytics.prodqty = [];
	HumAnalytics.prodsav = [];   
	HumAnalytics.prodtranstype = [];          
	HumAnalytics.prodtype = []; 
	HumAnalytics.produp = [];
        </script>
        <script type="text/javascript">
        <!-- Loading script asynchronously -->
            (function(a,b,c,d){
                a='{!JSENCODE(sWebChatVarMap['HP_Tealium'].value__c)}';
                b=document;c='script';d=b.createElement(c);d.src=a;d.type='text/java'+c;d.async=true;
                a=b.getElementsByTagName(c)[0];a.parentNode.insertBefore(d,a);
            })();

            /*
                GBO Watson: Adding post message to help GBO Watson team to close the window
            */
            function postMessageAndClose() {
                window.parent.postMessage('Close Window', '*');
                setTimeout(function(){ window.close(); }, 1000);
            }   //  end of postMessageAndClose
        </script>
    <form id="theform" method="post">
        <div class="row">
            <div class="small-glass-container">
                <div class=" columns x1 eighteen">
                    <div class="row">
                        <div class="eighteen columns x1">
                            <div class="lifeblock-heading">
                                <h1 class="link-list-heading lifeblock core-green bl-tail tl-br-curve" tabindex="0">
                                    <span class="content">{!$Label.HUMChatLabel}</span>
                                </h1>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="small-glass-container" id="preChat">
            
                            <div id="statusImageHUMPrechat" style="display: Block;">
                                <div id="displayLoadingMsg" class="row" style="display: none;">
                                    <div class="seventeen columns x1-left">
                                        <p class="x1">{!$Label.HUMThankYouMsg_SkipPreChat}</p>
                                    </div>
                                </div>                            
                                <!-- This block will render a spinner image to indicate table loading in the UI -->
                                <div class="loadingSectionStyle" style="padding-left: 40%;">
                                    <img src="/img/loading.gif" />
                                    <span class="waitingDescription"> {!$Label.LOADING_HUM}</span>
                                </div>
                            </div>
                            
                            <div id="prechatform" class="row" style="display: none;">
                                <div class="row">
                                    <div class="seventeen columns x1-left">
                                        <p class="x1">{!$Label.HUMThankYouMsg}</p>
                                    </div>
                                </div>
                                <div class="eighteen columns x1-left">
                                    <div class="row ">
                                        <div class=" columns x1 eighteen">
                                            <p class="x1">
                                                <div class="x0" id="errPanelForPlanName">
                                                    <label class="label" for="PlanNameSelect">
                                                        <img alt="Required" class="required-icon" id="planNameRequired" src="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/images/forms/required.png')}"/>
                                                        <img alt="error" class="error-icon displayStyle" id="planNameError" src="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/images/forms/error.png')}"/>
                                                        {!$ObjectType.LiveChatTranscript.Fields['Category__c'].Label}
                                                        <span class="field-validation-error displayStyle" id="planNameErrMsg">{!$Label.HUMRequiredErrMsg}</span>
                                                    </label>
                                                    <apex:actionRegion >
                                                        <div class="selector fixedWidth focus">
                                                            <span class="userSelectWebKit" id="PlanNameSpan">{!$Label.HUMSelectLabel}</span>
                                                            <select id="PlanNameSelect" multiselect="false" name="liveagent.prechat:PlanNameID" onFocus="removeErrorMessage(this);" onchange="onSelectingPlanName(this.options[this.selectedIndex]);" size="1" styleclass="validation selector fixedWidth hover">
                                                                <option value="Select">{!$Label.HUMSelectLabel}</option>
                                                            </select>
                                                        </div>
                                                    </apex:actionRegion>
                                                </div>
                                            </p>
                                        </div>
                                    </div>
                                    
                                        <div class="row">
                                            <apex:outputPanel id="testIDng">
                                                <p class="x1">
                                                    <div class="x0" id="errPanelForCategorySelect">
                                                        <label class="label" for="CategorySelect">
                                                            <img alt="Required" class="required-icon" id="categorySelectRequired" src="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/images/forms/required.png')}"/>
                                                            <img alt="error" class="error-icon displayStyle" id="categorySelectError" src="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/images/forms/error.png')}"/>
                                                            {!$ObjectType.LiveChatTranscript.Fields['Subject__c'].Label}
                                                            <span class="field-validation-error errMsgStyle displayStyle" id="categorySelectErrMsg">{!$Label.HUMRequiredErrMsg}</span>
                                                        </label>
                                                        <div class="selector fixedWidth focus">
                                                            <span class="userSelectWebKit" id="categorySelectSpan">{!$Label.HUMSelectLabel}
                                                            </span>
                                                            <select id="CategorySelect" multiselect="false" onFocus="removeErrorMessage(this);" onchange="fnHandleCategoryChange(this.options[this.selectedIndex]);" size="1" styleclass="validation selector fixedWidth hover">
                                                                <option value="Select">{!$Label.HUMSelectLabel}</option>
                                                            </select>                                                                                                                      
                                                        </div>
                                                    </div>
                                                </p>
                                                <label for="help">
                                                    {!$Label.HUMIssueLabel} 
                                                </label>
                                            </apex:outputPanel>
                                        </div>
                                        <div id="chatAvailable">
                                        <div class="row">
                                            <div class="eighteen columns x2">
                                                <textarea class="input-text resizeStyle" cols="190" id="issue" name="liveagent.prechat:Issue" onfocus="removeErrorMessage(this);" onkeyup="textLimit(this,200);" rows="6"/>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="row">
                                                <div class="row x1-top x1">
                                                    <p class="x1">
                                                        {!$Label.HUMTermsOfUse1} 
                                                        <a class="link-tertiary" href="#" onclick="fnGoToTermsOfUse();">
                                                            {!$Label.HUMTermsOfUse2} 
                                                        </a>
                                                    </p>
                                                </div>
                                            </div> 
                                           
                                           
                                            <input name="liveagent.prechat:BotTranscript" type="hidden" value="" id="BotTranscriptDecrypt" />
                                            <input name="liveagent.prechat:ChatType" type="hidden" value="{!sChatType }" id="ChatTypeValue" />
                                            <input name="liveagent.prechat.save:ChatType" type="hidden" value="Chat_Type__c"/> 
                                            
                                            <input name="liveagent.prechat:Plan Name" type="hidden" value="" id="PlanNameLabel" />
                                            <input name="liveagent.prechat.save:Plan Name" type="hidden" value="Category__c"/>
                                            <input name="liveagent.prechat:Category" type="hidden" value="CategoryValue" id="CategoryValue" />
                                            <input name="liveagent.prechat.save:Category" type="hidden" value="Subject__c"/>
                                            <input name="liveagent.prechat.save:Issue" type="hidden" value="Issue__c"/>
                                            <input name="liveagent.prechat:URL" id="testURI" type="hidden" value=""/>
                                            <input name="liveagent.prechat.save:URL" type="hidden" value="URL__c"/>
                                            <input name="liveagent.prechat:AccountId" id="accountid" type="hidden" value=""/>
											<input name="liveagent.prechat:InteractionId" id="interactionid" type="hidden" value=""/>
                                            <input name="liveagent.prechat:InteractionName" id="interactionname" type="hidden" value=""/>
                                            <input name="liveagent.prechat.findorcreate.map:Account" type="hidden" value="Id,AccountId"/>											
                                            <input name="liveagent.prechat.findorcreate.saveToTranscript:Account" type="hidden" value="Account"/>											
                                            <input name="liveagent.prechat.findorcreate.map.doFind:Account" type="hidden" value="Id,true"/>											
                                            <input name="liveagent.prechat:customAccountId" type="hidden" id="customAccountId" value=""/>
                                            <input name="liveagent.prechat.save:customAccountId" type="hidden" value="AccountId__C"/>
											<input name="liveagent.prechat:SecChatID" id="secchatid" type="hidden" value=""/>
                                            <input name="liveagent.prechat.findorcreate.map:Interaction__c" type="hidden" value="Id,InteractionId"/>
                                            <input name="liveagent.prechat.findorcreate.saveToTranscript:Interaction__c" type="hidden" value="Interaction__c"/>
                                            <input name="liveagent.prechat.findorcreate.map.doFind:Interaction__c" type="hidden" value="Id,true"/>
                                          
                                            
											<input name="liveagent.prechat.findorcreate.map:LiveChatTranscript" type="hidden" value="Secondary_Chat_ID__c,SecChatID"/>
                                            <input name="liveagent.prechat.findorcreate.map.doFind:LiveChatTranscript" type="hidden" value="Secondary_Chat_ID__c,true"/>
                                            <input name="liveagent.prechat.save:SecChatID" type="hidden" value="Secondary_Chat_ID__c"/> 
                                            <input name="liveagent.prechat:MemberGenKey" id="MemberGenKey" type="hidden" value =""/>
                                            <input name="liveagent.prechat:sLSessionID" id="sLSessionID"  type="hidden" value=""/>                                         
                                            <input name="liveagent.prechat:deployment_id" id="depId" type="hidden" value="{!sWebChatVarMap['DeploymentID'].value__c}"/>
                                            <input name="liveagent.prechat:org_id" id="comId" type="hidden" value="{!sWebChatVarMap['CompanyID'].value__c}"/>
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:sLSessionID" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:MemberGenKey" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:AccountId" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:InteractionId" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:customAccountId" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:PlanNameID" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat:SelBtnId" type="hidden" id="SelButttonID" value=""/>
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:SelBtnId" type= "hidden" value= "false" />
											<input name="liveagent.prechat.findorcreate.displayToAgent:SecChatID" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:deployment_id" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:org_id" type= "hidden" value= "false" />

                                            <!-- To hide the details from details page for agent-->
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:BotTranscript" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:Classification" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:Intent" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:PolicyMember" type= "hidden" value= "false" />
                                            <input name="liveagent.prechat.findorcreate.displayToAgent:CTCI" type= "hidden" value= "false" />  
                                                                                        
                                            <input id="dummy" name="dummy" type="hidden"/>
                                            <input id="intMemberId"  type="hidden" value=""/>

                                            <input name="liveagent.prechat:Skill Name" type="hidden" value="" id="SkillNameLabel" />

                                            <input type="hidden" name="liveagent.prechat:Case Origin" id="caseOrigin" /> 
											<input type="hidden" name="liveagent.prechat:Case Type" id="caseType" />
											<input type="hidden" name="liveagent.prechat:InteractingWithType" id="interactingWithType" />
                                            <input type="hidden" name="liveagent.prechat:Classification" id="Classification" /> 
                                            <input type="hidden" name="liveagent.prechat:Intent" id="Intent"/>
                                            <input type="hidden" name="liveagent.prechat:PolicyMember" id="PolicyMember" /> 
                                            <input type="hidden" name="liveagent.prechat:CTCI" id="CTCI"/>
                                             <input type="hidden" name="liveagent.prechat.findorcreate.map:Case" value="ChatKey__c,SecChatID;Origin,Case Origin;Interacting_With__c,AccountId;AccountId,AccountId;Interacting_With_Type__c,InteractingWithType;Interacting_About_Type__c,InteractingWithType;Type,Case Type;Classification_Id__c,Classification;Intent_Id__c,Intent;Policy_Member__c,PolicyMember;CTCI_List__c ,CTCI" />
                                            <input type="hidden" name="liveagent.prechat.findorcreate.map.doCreate:Case" value="ChatKey__c,true;Origin,true;Interacting_With__c,true;AccountId,true;Interacting_With_Type__c,true;Interacting_About_Type__c,true;Type,true;Classification_Id__c,true;Intent_Id__c,true;Policy_Member__c,true;CTCI_List__c,true" />
											<input type="hidden" name="liveagent.prechat.findorcreate.saveToTranscript:Case" value="Case" />
											<input type="hidden" name="liveagent.prechat.findorcreate.showOnCreate:Case" value="true" />  
                                            
                                                <!-- MF-22 Accolade Chat: Added the following hidden variables -->
                                            <input name="liveagent.prechat:VendorIdentifier" type="hidden" value="" id="VendorIdentifier" />
                                            <input name="liveagent.prechat:VendorBenefitCode" type="hidden" value="" id="VendorBenefitCode" />
                                          <div class="row x1">
                                                <div class="eighteen columns">
                                                    <button class="link-primary x1-right" onclick="createSubmitURL()" type="button">
                                                        <span>{!$Label.HUMStartChat}</span>
                                                    </button>
                                                    <a class="link-tertiary x1-left" href="javascript:postMessageAndClose();"><span>{!$Label.HUMCancel}</span></a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" id="chatUnav">
                                        <p class="x1">
                                            {!$Label.HUMNoAgentAvailable} 
                                        </p>
                                        <p class="x1">
                                            {!$Label.HUMAssistance1} 
                                            <a class="sign_new" href="#ContactUsLink">{!$Label.HUMContactCenter}</a>
                                            {!$Label.HUMAssistance2} 
                                        </p><br/>
                                    </div>
                                </div>
                            </div>
                            <!-- MF-22 Accolade Chat -->
                            <div id="acclImpactTile" class="row" style="display: none;">
                                
                                <div class="row message-container">
                                    <div class="box-content row module-dashboard-box">
                                        <div class="small-12">{!mapAccoladeSettings['SSO_Message']}</div>
                                    </div>
                                </div>
                        
                                <div class="row box-container accolade-card">
                                    <div class="row dashboard-header-image" style="padding: 1.25rem;">
                                        <a href="#">
                                            <apex:image url="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/images/logos/AccoladeLogo.png')}" alt="Accolade Logo" width="210" height="53" />
                                        </a>
                                    </div>
                                    <div class="dashboard-box-heading row">
                                        <div class="small-12 columns box-header">
                                            <span class="box-label">Personalized help with Accolade</span>
                                        </div>
                                    </div>
                                    <div class="box-content row module-dashboard-box">
                                        <div class="small-12 box-item ">{!mapAccoladeSettings['Tile_Message']}</div>
                                    </div>
                                
                                    <div class="accolade-data cta-container row box-content">
                                        <div class="box-cta small-12 box-item column">
                                            <div class="row links">
                                                <a id="acclSSOLink" href="{! mapAccoladeSettings['SSO_URL']}" class="arrow-link small-12" 
                                                    target="_blank" rel="noopener noreferrer" onclick="window.close()">Connect with your Health Assistant </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- <div id="acclNonSSO" class="row" style="display: none;">
                                <div class="small-12 columns x2">
                                    <div class="row message-container">
                                        <div class="box-content row module-dashboard-box">
                                            <div class="small-12"><apex:outputText value="" escape="false" /></div>
                                        </div>
                                    </div>
                                </div>
                            </div> -->
                            <!-- MF-22 Accolade Chat -->
                        </div>
                        <div class="row" id="memberNotFound">
                            <div class="thirteen columns x1-left">
                                <div class="row">
                                    <div style="margin-right: 10px;">
                                    <h4 style="color: black!IMPORTANT;">{!$Label.HUMMemberNotFound}</h4>
                                        <p class="x1"><span>{!$Label.HUMMemberNotFound1}</span>
                                        <a target="_blank" href="{!HTMLENCODE(sWebChatVarMap['ContactUsLink'].value__c)}">{!$Label.HUMContactCenter}</a>
                                        <span>{!$Label.HUMMemberNotFound2}</span></p>
                                        
                                        <br/>
                                        <span class="link-tertiary" onclick="javascript:window.close();">{!$Label.HPCloseWindow}</span>
                                    </div>                                    
                                </div>
                            </div>
                        </div>
                        <div class="row" id="chatButtonNotFound">
                            <div class="thirteen columns x1-left">
                                <div class="row">
                                    <div style="margin-right: 10px;">
                                    <h4 style="color: black!IMPORTANT;">{!$Label.HUMChatButtonNotFound}</h4>
                                        <p class="x1"><span>{!$Label.HUMChatButtonNotFound1}</span>
                                        <a target="_blank" href="{!sWebChatVarMap['ContactUsLink'].value__c}">{!$Label.HUMContactCenter}</a>
                                        <span>{!$Label.HUMMemberNotFound2}</span></p>
                                        
                                        <br/>
                                        <span class="link-tertiary" onclick="javascript:window.close();">{!$Label.HPCloseWindow}</span>
                                    </div>                                    
                                </div>
                            </div>
                        </div>
                        <div class="row" id="termsOfUse">
                            <div class="thirteen columns x1-left">
                                <H2>
                                    &nbsp;&nbsp;{!$Label.HUMTermsOfUse2}</H2>
                                <div class="row">
                                    <ul class="bulleted">
                                        <li>
                                        	<a class="link-tertiary" href="{!$Label.HUMInternetPrivacy}" target="_blank">{!$Label.HUMClickHere}</a>
                                            {!$Label.HUMBulletInternetPrivacystatement}
                                        </li>
                                        <li>
                                        	<a class="link-tertiary" href="{!$Label.HUMHVPrivacy}" target="_blank">{!$Label.HUMClickHere}</a>
                                            {!$Label.HUMPrivacyForHV}.
                                        </li>
                                        <li>{!$Label.HUMBullet3}</li>
                                        <li>{!$Label.HUMBullet4}</li>
                                        <li>{!$Label.HUMBullet5}</li>
                                    </ul>
                                </div>
                                <div class="row x1">
                                    <div class="eighteen columns">
                                        <button class="link-ForBackButton x1-right" onclick="fnGoBackToPreChat();" type="button">
                                            <span>{!$Label.HUMBack}</span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    </body>
      <apex:includeScript value="{!URLFOR(sWebChatVarMap['DeploymentJS'].value__c)}"/> 
      <apex:includeScript value="{!URLFOR(sWebChatVarMap['PreChatJS'].value__c)}"/>
      <apex:includeScript value="{!URLFOR($Resource.HUMLiveAgentCSS,'/library/HUMPreChat.js')}"/>
      <script type="text/javascript">      
            /*
                MF-22: Accolade chat 
                    Added the following variables
            */
            var vendorId='';
            var vendorCode='';
            var memberIdBase='';
            var dependentCode='';
            var acclVendorIdentifier = '{! mapAccoladeSettings["Vendor_Identifier"]}';
            var acclBenefitCode = '{! mapAccoladeSettings["Vendor_Benefit_Code"]}';
            let accClassification = '{! mapAccoladeSettings["Classification"]}';
            if(accClassification){
                accClassification = JSON.parse(accClassification);
            }
           //Code related to Contact Us Link.
            jQuery(document).ready(function(){
             jQuery('a[href="#ContactUsLink"]').click(function(){
              window.open('{!JSENCODE(sWebChatVarMap['ContactUsLink'].value__c)}');
              self.close();
               }); 
            });
            //Code related to Code Metrics.
            var src = "{!JSENCODE(sWebChatVarMap['CodeMetricsJS'].value__c)}";
            if (window.location.host.substring(0, 2) == "qa") 
            {
                src = "{!JSENCODE(sWebChatVarMap['CodeMetricsQaJS'].value__c)}";
            } 
            else if (window.location.host.substring(0, 4) == "test") 
            {
                src = "{!JSENCODE(sWebChatVarMap['CodeMetricsTestJS'].value__c)}";
            }
            document.write('<script src="' + src + '" type="text/javascript"><' + '/script>');  
            
            //default actions to hide error blocks & terms of use blocks
              jQuery('#chatUnav').hide();
              jQuery('#chatAvailable').show();
              jQuery('#termsOfUse').hide();
              jQuery('#memberNotFound').hide();
              jQuery('#chatButtonNotFound').hide();
                            
              var sDecryptBotTranscript = document.getElementById("BotTranscriptDecrypt");
              var jsClassification = document.getElementById('Classification'); 
              var jsIntent = document.getElementById('Intent');              
              var jsPolicyMember = document.getElementById('PolicyMember'); 
              var jsCTCI = document.getElementById('CTCI');               
              var sEnableIntLogging = "{!JSENCODE(sWebChatVarMap['LogPreChat'].value__c)}";
              var btnSkillHashMap = JSON.parse('{!btnSkillMapJson}');
               
              var btnHashMap = JSON.parse('{!btnMapJson}');
              var oBtnCallback = new Object();
              var oBtnCallbackIdMap = new Map();

              //global Dom elements to be used in the functionlity in JS resource
              var sSecChatID = document.getElementById('secchatid');
				var current = new Date();
			  var strDateTime = current.getFullYear()+''+(current.getMonth()+1)+''+current.getDate()+''+current.getHours() +''+ current.getMinutes() +''+ current.getSeconds() +''+ current.getMilliseconds();
		      var sSecondary_Chat_Id = '{!JSENCODE(sSecondary_Chat_Id)}' + strDateTime;
              document.getElementById('secchatid').value = sSecondary_Chat_Id ;
              var sSelbtnId = document.getElementById('SelButttonID');
              var sIssue = document.getElementById('issue');
              var sCategorySelectSpan = document.getElementById("categorySelectSpan");
              var sCategoryValue = document.getElementById("CategoryValue");
              var sPlanNameSpan = document.getElementById("PlanNameSpan");
              var sMemberGenKeyEle = document.getElementById("MemberGenKey");
              var sLSessionIDEle = document.getElementById("sLSessionID");
              var sDummy = document.getElementById('dummy');
              var sUr = document.getElementById("testURI");
              var sAccountId = document.getElementById('accountid');			  
              var sIntId = document.getElementById('interactionid');
              var sIntMemberId = document.getElementById('intMemberId');
              var sInteractionName = document.getElementById('interactionname');
              var sTheForm = document.forms["theform"];
              var stheFormToSubmit = document.getElementById("theform");
              var sPlanNameLabel = document.getElementById('PlanNameLabel');
              var sCustomAccountId = document.getElementById('customAccountId');
              var sPlanName = document.getElementById("PlanNameSelect");
              var sCategorySelect = document.getElementById("CategorySelect");
              var sRemotingTarget = '{!$RemoteAction.HUMPreChatController.findAccountByPersonId}';
              var sRemotingTargetOnLoadDecrypt = '{!$RemoteAction.HUMPreChatController.decryptUserIdentifiers}';
              var sRemotingTargetOnLoadDecryptExt = '{!$RemoteAction.HUMPreChatController.decryptClientUserData}'; //  MF-22 Added as part of Accolade Impact
              var sRemotingPreChatLogging = '{!$RemoteAction.HUMPreChatController.logPreChatVariables}';
              //Variables used for displaying skill name
              var sSkillNameLabel = document.getElementById('SkillNameLabel');
              
			  
			  var sInteractingWithType = document.getElementById('interactingWithType');
              var sCaseOrigin = document.getElementById('caseOrigin'); 
              var sCaseType = document.getElementById('caseType');
              /**
              As Live Agent API Does not work when we include it in the Static resource, hence
              we have kept the live agent and event firing related code on the page.
              Rest event handlers and remoting methods are moved in static resource.
              */
              //liveagent preChatInit initialization
              liveagent.details.preChatInit("{!JSENCODE(sWebChatVarMap['LiveChatURL'].value__c)}", 'detcall');

              //dynamically setting callbacks for agent availability using javascript function method.
              for (var key in btnHashMap)
              {
              oBtnCallback['callback_' + btnHashMap[key].Id.substring(0,15)] = new Function("return function " + "callback_" + btnHashMap[key].Id.substring(0,15) + "(arg1){var bId = arguments.callee.toString().match(/_([^\(]+)/)[1]; oBtnCallbackIdMap.set(bId, arg1);}")();
              liveagent.showWhenOnline(btnHashMap[key].Id.substring(0,15),sDummy);
              liveagent.addButtonEventHandler(btnHashMap[key].Id.substring(0,15), oBtnCallback['callback_' + btnHashMap[key].Id.substring(0,15)] );
              }

              //liveagent initialization
              liveagent.init("{!JSENCODE(sWebChatVarMap['LiveChatURL'].value__c)}","{!JSENCODE(sWebChatVarMap['DeploymentID'].value__c)}","{!JSENCODE(sWebChatVarMap['CompanyID'].value__c)}", false, true);
            </script>
</apex:page>