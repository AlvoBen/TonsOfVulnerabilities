<!--
Page Name        : CWPUnsecureLiveChat_VF_HUM
Version          : 1.0 
Created Date     : April 03, 2023
Function         : Custom Chat Window page for Unsecure Centerwell Pharmacy
Modification Log :
*   Modification ID     Developer          Code Review         Date                 Description
* ------------------------------------------------------------------------------------------------------------------------------                
*           1.0         Shivani Shrivastav                     19/4/2023              Original Version
-------------------------------------------------------------------------------------------------------------------------------->
<apex:page controller="CWPUnsecureChat_C_HUM" showHeader="false" id="pageID" standardStyleSheets="false">
    <!-- JS Cannot be moved to Static Resource as Live agent JS loads after static resource and 
    liveagent attribute is defined in deployment.js file which will load after static resource.
    It will throw error as liveagent is undefined if JS moved into static resource.
    -->
    <head>
    <style>
    #liveAgentClientChat.liveAgentStateWaiting .liveAgentChatElement {display: none;}
    </style>
    <script type="text/javascript">
        //Code related to Code Metrics.
        var src = "{!JSENCODE(sWebChatVarMap['CodeMetricsJS'].value__c)}";
        if (window.location.host.indexOf("qa") >=0) 
        {
            src = "{!JSENCODE(sWebChatVarMap['CodeMetricsQaJS'].value__c)}";
        } 
        else if (window.location.host.indexOf("test") >=0 ) 
        {
            src = "{!JSENCODE(sWebChatVarMap['CodeMetricsTestJS'].value__c)}";
        }
        document.write('<script src="' + src + '" type="text/javascript"><' + '/script>');

        //Storing values from the prechat page.
        var sButtonId = '{!JSENCODE($CurrentPage.parameters.liveagent.prechat:SelBtnId)}';
        var sOrgId = '{!JSENCODE($CurrentPage.parameters.liveagent.prechat:org_id)}'; 
        var sDepId = '{!JSENCODE($CurrentPage.parameters.liveagent.prechat:deployment_id)}'; 
        var sSecondaryChatId = '{!JSENCODE($CurrentPage.parameters.liveagent.prechat:SecChatID)}'; 

        //liveagent Initialisation 
        liveagent.addEventListener(liveagent.chasitor.Events.CHAT_REQUEST_SUCCESSFUL,chatRequestSuccess);
        liveagent.addEventListener(liveagent.chasitor.Events.CHAT_ESTABLISHED,myCallBack);
        liveagent.addEventListener(liveagent.chasitor.Events.AGENT_CHAT_TRANSFERRED,newagent);
	    liveagent.addEventListener(liveagent.chasitor.Events.AGENT_CHAT_MESSAGE,newAgentMessage);        
			//Getting custom label details
			window.$Label = window.$Label || {};
			$Label.HUMNewMsgDesktopNotification = '{!JSENCODE($Label.HUMNewMsgDesktopNotification)}';
      
        //CHAT_REQUEST_SUCCESSFUL event callback helper function
        function chatRequestSuccess() 
        {
            var details = liveagent.chasitor.getDetails();
            
            for(i=0;i<details.prechatDetails.length;i++)
            {
                if(details.prechatDetails[i].label=='MemberGenKey')
                {
                    HumAnalytics.regid = details.prechatDetails[i].value;
                }
                else if(details.prechatDetails[i].label=='sLSessionID')
                {
                    HumAnalytics.ssid = details.prechatDetails[i].value;
                }
                HumAnalytics.secid = sSecondaryChatId;
            }
        }
        
        //CHAT_ESTABLISHED event callback helper function
        function myCallBack() 
        {
            var details = liveagent.chasitor.getDetails();
            var agentName = details['agent']['agentName'];
            document.getElementById('agNameId').style.display = '';
            document.getElementById('sendBtn').style.display = '';
            document.getElementById('agName').innerHTML = agentName;
            var labels = {
                AGENT_TYPING: agentName + ' is typing...'
            };
            SfdcApp.LiveAgent.Chasitor.loadLabels(labels);

            // Logic to send custom event for Bot Transcript
            console.log('BotTranscriptSwitch: ' + {!botTranscriptSwitch});
            if({!botTranscriptSwitch}){
                type = 'botTrascriptGreeting';
                data = getBotTranscript();
                console.log('##--BotTranscript: ' + data);
                
                if(typeof data === string && data.trim() !== ''){
                	liveagent.chasitor.sendCustomEvent(type, data);
               	}
            }
            commitTranscript();
        }
        
        //parsing botTranscript from liveagent details
        function getBotTranscript()
        {
            var details = liveagent.chasitor.getDetails();
            var botTranscript='';
            for(i=0;i<details.prechatDetails.length;i++)
            {
                if(details.prechatDetails[i].label=='BotTranscript')
                {
                    botTranscript = details.prechatDetails[i].value;
                }
            }
            return botTranscript;
        }
        
        //AGENT_CHAT_TRANSFERRED event callback helper function
        function newagent() 
        {
            var details = liveagent.chasitor.getDetails();
            var agentName = details['agent']['agentName'];
            document.getElementById('agName').innerHTML = agentName;
            var agentName = details['agent']['agentName'];
            var clientName = liveagent.chasitor.getName();
            var labels = {
                AGENT_TYPING: agentName + ' is typing...'
            };
            SfdcApp.LiveAgent.Chasitor.loadLabels(labels);
            
        }
        
        //Cannot Move it into static resource as it is using parameters that are related to live agent
        //Live agent components cannot be loaded inside static resource 
        function commitTranscript()
        {
            try
            {
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.CWPUnsecureChat_C_HUM.onCommitTranscript}',liveagent.chasitor.getChatKey(),getAgentDetail(),function(result, event)
                {
                    if (event.status) 
                    {
                        return true;
                    } 
                    else
                    {
                        return false;
                    }
                 }, 
                 {
                    escape:true
                 });
            }
            catch (ex) 
            {
                return false;
            }
            return false;  
        }
        
        //commitTranscript helper function
        function getAgentDetail()
        {
            var details = liveagent.chasitor.getDetails();
            var tId='';
            tId = details['agent']['userId'];
            return tId;
        }
        
        //parsing the interaction info from liveagent details
        function getInteractionId()
        {
            var details = liveagent.chasitor.getDetails();
            var intId='';
            for(i=0;i<details.prechatDetails.length;i++)
            {
                if(details.prechatDetails[i].label=='InteractionId')
                {
                    intId = details.prechatDetails[i].value;
                }
            }
            return intId;
        }
        </script>   
       
       <!-- Start Tealium analytics v1_3 - do not remove or change -->
    <script type="text/javascript">
        var utag_data = {};
            if (typeof HumAnalytics == "undefined"){
                var HumAnalytics = window.HumAnalytics = {};}
        HumAnalytics.appid = [];
        HumAnalytics.autorenewflag = [];
        HumAnalytics.copayexcflag = [];
        HumAnalytics.prodcat = [];
        HumAnalytics.prodid = [];      
        HumAnalytics.prodname = [];
        HumAnalytics.prodpkgqty = [];      
        HumAnalytics.prodqty = [];
        HumAnalytics.prodsav = [];   
        HumAnalytics.prodtranstype = [];          
        HumAnalytics.prodtype = []; 
        HumAnalytics.produp = [];
    </script>

    <!-- Loading script asynchronously -->
    <script type="text/javascript">
        (function(a,b,c,d){
        a='{!JSENCODE(sWebChatVarMap['HumanaUnsecure_Tealium'].value__c)}';
        b=document;c='script';d=b.createElement(c);d.src=a;d.type='text/java'+c;d.async=true;
        a=b.getElementsByTagName(c)[0];a.parentNode.insertBefore(d,a);
        })();
    </script>
    <!-- End Tealium analytics - do not remove or change -->
       
       
        <title>Unsecure Centerwell Pharmacy Chat</title>
        
        <!-- Loading CSS files received from digital team for Humana view standards -->
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveChatWindowCSS,'/LiveChatWindowCSS/base.css')}" />
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveChatWindowCSS,'/LiveChatWindowCSS/framework.css')}" />
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveChatWindowCSS,'/LiveChatWindowCSS/global.css')}" />
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveChatWindowCSS,'/LiveChatWindowCSS/global1.css')}" />
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveChatWindowCSS,'/LiveChatWindowCSS/humanacom.css')}" />
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveChatWindowCSS,'/LiveChatWindowCSS/lib.css')}" />
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveChatWindowCSS,'/LiveChatWindowCSS/styles.css')}" />
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveAgentCSS,'/library/styles.css')}"/>
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveChatWindowCSS,'/LiveChatWindowCSS/renderings.css')}" />
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveChatWindowCSS,'/LiveChatWindowCSS/main.css')}" />
        <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.CWPUnsecureLiveChatWindowCSS,'/LiveChatWindowCSS/Chat.css')}" />

        <!-- Loading jQuery toolkit as per VF standards -->
        <apex:includeScript value="{!URLFOR($Resource.CRM_JQUERY, 'jquery.min.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.NewChatMsgNotification_SR_HUM,'NewChatMsgNotification/NewChatMsgNotification.js')}"/>   
            <link rel="stylesheet" text="text/css" href="{!URLFOR($Resource.NewChatMsgNotification_SR_HUM,'NewChatMsgNotification/NewChatMsgNotification.css')}" />    
    </head>
    <liveAgent:clientchat >
        <div>
                        <apex:image styleClass="hpHeaderImage" url="{!URLFOR($Resource.CWPUnsecureLiveAgentCSS,'library/images/header1.png')}"/>
                        <span class="hpHeader">CenterWell Pharmacy Chat</span>
                    </div>
                    <liveAgent:clientChatAlertMessage />
                    <liveAgent:clientChatStatusMessage />
                    <table id="waitingMessage" cellpadding="0" cellspacing="0">
                        <tr>
                            <td><script type="text/javascript">
                                SfdcApp.LiveAgent.Chasitor.addQueueComponent("queuePosition");
                                </script>
                                <div class="hpContainer hide_queuePos" id="liveAgentQueuePosition">
                                    <span id="agnStatus" class="hpMainText">You are currently <span id="queuePosition" class="liveAgentQueuePosition"></span> in
                                        the queue. A chat specialist will be with you soon.</span>
                                </div>
                            </td>
                        </tr>
                    </table>
                    <div class="row">
                        
                            <div class="row" style="display: none; padding-top:15px" id="agNameId">
                                <span class="hpText300 x2-left">
                                    You are now connected with <span id="agName" value=""></span>.
                                </span>
                            </div>
                            <div class="row">
                                <div class="scrollable-content x2-left">
                                    <div class="section-content">                                      
                                        <span class="hpMainText"><liveAgent:clientChatLog id="visitorNameLog" visitorNameLabel="{!$CurrentPage.parameters.liveagent.prechat:AccountName}"/></span>
                                        <apex:outputPanel rendered="{!bSwitch}">  
                                            <div id="newAgentMessage" onclick = "scrollToBottom();">
                                                <p id = "NewHPMessage" align="right">{!$Label.HUMNewMsgNotification}</p>
                                            </div>
                                        </apex:outputPanel>                                       
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div><liveAgent:clientChatLogAlertMessage /></div><br />
                                <div class="hpContainer x1-top x2-left">
                                   <liveagent:clientChatInput useMultiline="true"/>
                                </div>
                            </div>
                            <div class="row x2">
                                <div class="x2-left">
                                    <button class="hpBlueButton" style="display: none;" id="sendBtn" onclick="SfdcApp.LiveAgent.Chasitor.sendMessage();" title="Send">
                                        <span>Send</span>
                                    </button>
                                    <liveAgent:clientChatEndButton label="End Chat" />
                                </div>
                            </div>
                    </div>          
    </liveAgent:clientchat>
</apex:page>