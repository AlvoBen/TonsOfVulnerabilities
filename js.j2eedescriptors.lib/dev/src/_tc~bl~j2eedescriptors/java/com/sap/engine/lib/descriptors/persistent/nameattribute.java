/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu Mar 31 10:07:41 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.persistent;

import java.io.Serializable;

/**
 * Enumeration Java representation.
 * Represents type of namespace {} anonymous with xpath [/xs:schema/xs:complexType[3]/xs:attribute/xs:simpleType]
 */
public class NameAttribute implements Serializable {

  public static final java.lang.String _DB2_UDB = "DB2_UDB";
  public static final java.lang.String _DB2_UDB_AS400 = "DB2_UDB_AS400";
  public static final java.lang.String _DB2_UDB_OS390 = "DB2_UDB_OS390";
  public static final java.lang.String _MS_SQL_SERVER = "MS_SQL_SERVER";
  public static final java.lang.String _ORACLE = "ORACLE";
  public static final java.lang.String _MAXDB = "MAXDB";
  public static final java.lang.String _UNKNOWN = "UNKNOWN";
  public static final java.lang.String _openSQL = "OpenSQL";

  public static final NameAttribute DB2_UDB = new NameAttribute(_DB2_UDB);
  public static final NameAttribute DB2_UDB_AS400 = new NameAttribute(_DB2_UDB_AS400);
  public static final NameAttribute DB2_UDB_OS390 = new NameAttribute(_DB2_UDB_OS390);
  public static final NameAttribute MS_SQL_SERVER = new NameAttribute(_MS_SQL_SERVER);
  public static final NameAttribute ORACLE = new NameAttribute(_ORACLE);
  public static final NameAttribute MAXDB = new NameAttribute(_MAXDB);
  public static final NameAttribute UNKNOWN = new NameAttribute(_UNKNOWN);
  public static final NameAttribute openSQL = new NameAttribute(_openSQL);

  //  Enumeration Content
  protected java.lang.String _value;

  public NameAttribute(java.lang.String _value) {
    if (_DB2_UDB.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_DB2_UDB_AS400.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_DB2_UDB_OS390.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_MS_SQL_SERVER.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_ORACLE.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_MAXDB.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_UNKNOWN.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_openSQL.equals(_value)) {
      this._value = _value;
      return;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+_value+"] passed.");
  }

  public java.lang.String getValue() {
    return _value;
  }

  public static NameAttribute fromValue(java.lang.String value) {
    if (_DB2_UDB.equals(value)) {
      return DB2_UDB;
    }
    if (_DB2_UDB_AS400.equals(value)) {
      return DB2_UDB_AS400;
    }
    if (_DB2_UDB_OS390.equals(value)) {
      return DB2_UDB_OS390;
    }
    if (_MS_SQL_SERVER.equals(value)) {
      return MS_SQL_SERVER;
    }
    if (_ORACLE.equals(value)) {
      return ORACLE;
    }
    if (_MAXDB.equals(value)) {
      return MAXDB;
    }
    if (_UNKNOWN.equals(value)) {
      return UNKNOWN;
    }
    if (_openSQL.equals(value)) {
      return openSQL;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public static NameAttribute fromString(String value) {
    if ("DB2_UDB".equals(value)) {
      return DB2_UDB;
    }
    if ("DB2_UDB_AS400".equals(value)) {
      return DB2_UDB_AS400;
    }
    if ("DB2_UDB_OS390".equals(value)) {
      return DB2_UDB_OS390;
    }
    if ("MS_SQL_SERVER".equals(value)) {
      return MS_SQL_SERVER;
    }
    if ("ORACLE".equals(value)) {
      return ORACLE;
    }
    if ("MAXDB".equals(value)) {
      return MAXDB;
    }
    if ("UNKNOWN".equals(value)) {
      return UNKNOWN;
    }
    if ("OpenSQL".equals(value)) {
      return openSQL;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public java.lang.String toString() {
    if (_DB2_UDB.equals(_value)) {
      return "DB2_UDB";
    }
    if (_DB2_UDB_AS400.equals(_value)) {
      return "DB2_UDB_AS400";
    }
    if (_DB2_UDB_OS390.equals(_value)) {
      return "DB2_UDB_OS390";
    }
    if (_MS_SQL_SERVER.equals(_value)) {
      return "MS_SQL_SERVER";
    }
    if (_ORACLE.equals(_value)) {
      return "ORACLE";
    }
    if (_MAXDB.equals(_value)) {
      return "MAXDB";
    }
    if (_UNKNOWN.equals(_value)) {
      return "UNKNOWN";
    }
    if (_openSQL.equals(_value)) {
      return "OpenSQL";
    }
    return java.lang.String.valueOf(_value);
  }

  public boolean equals(java.lang.Object obj) {
    if (obj != null) {
      if (obj instanceof NameAttribute) {
        if (_value.equals(((NameAttribute)obj)._value)) {
          return true;
        }
      }
    }
    return false;
  }

  public int hashCode() {
    return this._value.hashCode();
  }

}
