/*
 * Generated by SAP SchemaToJava Generator NW05 on Wed Apr 13 17:05:10 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.portlet;

import java.io.Serializable;

/**
 * Enumeration Java representation.
 * Represents type {http://java.sun.com/xml/ns/portlet/portlet-app_1_0.xsd}read-onlyType
 */
public class ReadOnlyType implements Serializable {

  public static final java.lang.String _trueTemp = "true";
  public static final java.lang.String _falseTemp = "false";

  public static final ReadOnlyType trueTemp = new ReadOnlyType(_trueTemp);
  public static final ReadOnlyType falseTemp = new ReadOnlyType(_falseTemp);

  //  Enumeration Content
  protected java.lang.String _value;

  public ReadOnlyType(java.lang.String _value) {
    if (_trueTemp.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_falseTemp.equals(_value)) {
      this._value = _value;
      return;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+_value+"] passed.");
  }

  public java.lang.String getValue() {
    return _value;
  }

  public static ReadOnlyType fromValue(java.lang.String value) {
    if (_trueTemp.equals(value)) {
      return trueTemp;
    }
    if (_falseTemp.equals(value)) {
      return falseTemp;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public static ReadOnlyType fromString(String value) {
    if ("true".equals(value)) {
      return trueTemp;
    }
    if ("false".equals(value)) {
      return falseTemp;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public java.lang.String toString() {
    if (_trueTemp.equals(_value)) {
      return "true";
    }
    if (_falseTemp.equals(_value)) {
      return "false";
    }
    return java.lang.String.valueOf(_value);
  }

  public boolean equals(java.lang.Object obj) {
    if (obj != null) {
      if (obj instanceof ReadOnlyType) {
        if (_value.equals(((ReadOnlyType)obj)._value)) {
          return true;
        }
      }
    }
    return false;
  }

  public int hashCode() {
    return this._value.hashCode();
  }

}
