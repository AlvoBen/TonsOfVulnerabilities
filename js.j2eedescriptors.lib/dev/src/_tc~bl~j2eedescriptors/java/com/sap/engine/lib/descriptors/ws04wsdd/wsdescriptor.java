/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu May 05 12:55:14 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.ws04wsdd;

/**
 * Schema complexType Java representation.
 * Represents type {http://www.sap.com/webas/630/soap/java/descriptors/ws-deployment-descriptor}WSDescriptor
 */
public  class WSDescriptor implements java.io.Serializable,java.lang.Cloneable {

  // Element field for element {}guid
  private java.lang.String _f_Guid;
  /**
   * Set method for element {}guid
   */
  public void setGuid(java.lang.String _Guid) {
    this._f_Guid = _Guid;
  }
  /**
   * Get method for element {}guid
   */
  public java.lang.String getGuid() {
    return this._f_Guid;
  }

  // Element field for element {}ejb-name-temp
  private java.lang.String _f_EjbNameTemp;
  /**
   * Set method for element {}ejb-name-temp
   */
  public void setEjbNameTemp(java.lang.String _EjbNameTemp) {
    this._f_EjbNameTemp = _EjbNameTemp;
  }
  /**
   * Get method for element {}ejb-name-temp
   */
  public java.lang.String getEjbNameTemp() {
    return this._f_EjbNameTemp;
  }

  // Element field for element {}webservice-name
  private com.sap.engine.lib.descriptors.ws04wsdd.QNameDescriptor _f_WebserviceName;
  /**
   * Set method for element {}webservice-name
   */
  public void setWebserviceName(com.sap.engine.lib.descriptors.ws04wsdd.QNameDescriptor _WebserviceName) {
    this._f_WebserviceName = _WebserviceName;
  }
  /**
   * Get method for element {}webservice-name
   */
  public com.sap.engine.lib.descriptors.ws04wsdd.QNameDescriptor getWebserviceName() {
    return this._f_WebserviceName;
  }

  // Element field for element {}webservice-internal-name
  private java.lang.String _f_WebserviceInternalName;
  /**
   * Set method for element {}webservice-internal-name
   */
  public void setWebserviceInternalName(java.lang.String _WebserviceInternalName) {
    this._f_WebserviceInternalName = _WebserviceInternalName;
  }
  /**
   * Get method for element {}webservice-internal-name
   */
  public java.lang.String getWebserviceInternalName() {
    return this._f_WebserviceInternalName;
  }

  // Element field for element {}standard-namespaceURI
  private java.lang.String _f_StandardNamespaceURI;
  /**
   * Set method for element {}standard-namespaceURI
   */
  public void setStandardNamespaceURI(java.lang.String _StandardNamespaceURI) {
    this._f_StandardNamespaceURI = _StandardNamespaceURI;
  }
  /**
   * Get method for element {}standard-namespaceURI
   */
  public java.lang.String getStandardNamespaceURI() {
    return this._f_StandardNamespaceURI;
  }

  // Element field for element {}ws-configuration
  private java.util.ArrayList _f_WsConfiguration = new java.util.ArrayList();
  /**
   * Set method for element {}ws-configuration
   */
  public void setWsConfiguration(com.sap.engine.lib.descriptors.ws04wsdd.WSConfigurationDescriptor[] _WsConfiguration) {
    this._f_WsConfiguration.clear();
    if (_WsConfiguration != null) {
      for (int i=0; i<_WsConfiguration.length; i++) {
        if (_WsConfiguration[i] != null)
          this._f_WsConfiguration.add(_WsConfiguration[i]);
      }
    }
  }
  /**
   * Get method for element {}ws-configuration
   */
  public com.sap.engine.lib.descriptors.ws04wsdd.WSConfigurationDescriptor[] getWsConfiguration() {
    com.sap.engine.lib.descriptors.ws04wsdd.WSConfigurationDescriptor[] result = new com.sap.engine.lib.descriptors.ws04wsdd.WSConfigurationDescriptor[_f_WsConfiguration.size()];
    _f_WsConfiguration.toArray(result);
    return result;
  }

  // Element field for element {}uddi-key
  private java.lang.String _f_UddiKey;
  /**
   * Set method for element {}uddi-key
   */
  public void setUddiKey(java.lang.String _UddiKey) {
    this._f_UddiKey = _UddiKey;
  }
  /**
   * Get method for element {}uddi-key
   */
  public java.lang.String getUddiKey() {
    return this._f_UddiKey;
  }

  // Element field for element {}outside-in-descriptor
  private com.sap.engine.lib.descriptors.ws04wsdd.OutsideInDescriptor _f_OutsideInDescriptor;
  /**
   * Set method for element {}outside-in-descriptor
   */
  public void setOutsideInDescriptor(com.sap.engine.lib.descriptors.ws04wsdd.OutsideInDescriptor _OutsideInDescriptor) {
    this._f_OutsideInDescriptor = _OutsideInDescriptor;
  }
  /**
   * Get method for element {}outside-in-descriptor
   */
  public com.sap.engine.lib.descriptors.ws04wsdd.OutsideInDescriptor getOutsideInDescriptor() {
    return this._f_OutsideInDescriptor;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof WSDescriptor)) return false;
    WSDescriptor typed = (WSDescriptor) object;
    if (this._f_Guid != null) {
      if (typed._f_Guid == null) return false;
      if (!this._f_Guid.equals(typed._f_Guid)) return false;
    } else {
      if (typed._f_Guid != null) return false;
    }
    if (this._f_EjbNameTemp != null) {
      if (typed._f_EjbNameTemp == null) return false;
      if (!this._f_EjbNameTemp.equals(typed._f_EjbNameTemp)) return false;
    } else {
      if (typed._f_EjbNameTemp != null) return false;
    }
    if (this._f_WebserviceName != null) {
      if (typed._f_WebserviceName == null) return false;
      if (!this._f_WebserviceName.equals(typed._f_WebserviceName)) return false;
    } else {
      if (typed._f_WebserviceName != null) return false;
    }
    if (this._f_WebserviceInternalName != null) {
      if (typed._f_WebserviceInternalName == null) return false;
      if (!this._f_WebserviceInternalName.equals(typed._f_WebserviceInternalName)) return false;
    } else {
      if (typed._f_WebserviceInternalName != null) return false;
    }
    if (this._f_StandardNamespaceURI != null) {
      if (typed._f_StandardNamespaceURI == null) return false;
      if (!this._f_StandardNamespaceURI.equals(typed._f_StandardNamespaceURI)) return false;
    } else {
      if (typed._f_StandardNamespaceURI != null) return false;
    }
    com.sap.engine.lib.descriptors.ws04wsdd.WSConfigurationDescriptor[] _f_WsConfiguration1 = this.getWsConfiguration();
    com.sap.engine.lib.descriptors.ws04wsdd.WSConfigurationDescriptor[] _f_WsConfiguration2 = typed.getWsConfiguration();
    if (_f_WsConfiguration1 != null) {
      if (_f_WsConfiguration2 == null) return false;
      if (_f_WsConfiguration1.length != _f_WsConfiguration2.length) return false;
      for (int i1 = 0; i1 < _f_WsConfiguration1.length ; i1++) {
        if (_f_WsConfiguration1[i1] != null) {
          if (_f_WsConfiguration2[i1] == null) return false;
          if (!_f_WsConfiguration1[i1].equals(_f_WsConfiguration2[i1])) return false;
        } else {
          if (_f_WsConfiguration2[i1] != null) return false;
        }
      }
    } else {
      if (_f_WsConfiguration2 != null) return false;
    }
    if (this._f_UddiKey != null) {
      if (typed._f_UddiKey == null) return false;
      if (!this._f_UddiKey.equals(typed._f_UddiKey)) return false;
    } else {
      if (typed._f_UddiKey != null) return false;
    }
    if (this._f_OutsideInDescriptor != null) {
      if (typed._f_OutsideInDescriptor == null) return false;
      if (!this._f_OutsideInDescriptor.equals(typed._f_OutsideInDescriptor)) return false;
    } else {
      if (typed._f_OutsideInDescriptor != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    if (this._f_Guid != null) {
      result+= this._f_Guid.hashCode();
    }
    if (this._f_EjbNameTemp != null) {
      result+= this._f_EjbNameTemp.hashCode();
    }
    if (this._f_WebserviceName != null) {
      result+= this._f_WebserviceName.hashCode();
    }
    if (this._f_WebserviceInternalName != null) {
      result+= this._f_WebserviceInternalName.hashCode();
    }
    if (this._f_StandardNamespaceURI != null) {
      result+= this._f_StandardNamespaceURI.hashCode();
    }
    com.sap.engine.lib.descriptors.ws04wsdd.WSConfigurationDescriptor[] _f_WsConfiguration1 = this.getWsConfiguration();
    if (_f_WsConfiguration1 != null) {
      for (int i1 = 0; i1 < _f_WsConfiguration1.length ; i1++) {
        if (_f_WsConfiguration1[i1] != null) {
          result+= _f_WsConfiguration1[i1].hashCode();
        }
      }
    }
    if (this._f_UddiKey != null) {
      result+= this._f_UddiKey.hashCode();
    }
    if (this._f_OutsideInDescriptor != null) {
      result+= this._f_OutsideInDescriptor.hashCode();
    }
    return result;
  }
}
