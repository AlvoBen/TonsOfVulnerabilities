/*
 * Generated by SAP SchemaToJava Generator NW05 on Tue Jul 19 13:29:43 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.applicationj2eeengine;

/**
 * Enumeration Java representation.
 * Represents type of namespace {} anonymous with xpath [/xs:schema/xs:complexType[8]/xs:simpleContent/xs:extension/xs:attribute[1]/xs:simpleType]
 */
public class TargetType implements java.io.Serializable {

  public static final java.lang.String _application = "application";
  public static final java.lang.String _library = "library";
  public static final java.lang.String _service = "service";
  public static final java.lang.String _interfaceTemp = "interface";

  public static final TargetType application = new TargetType(_application);
  public static final TargetType library = new TargetType(_library);
  public static final TargetType service = new TargetType(_service);
  public static final TargetType interfaceTemp = new TargetType(_interfaceTemp);

  //  Enumeration Content
  protected java.lang.String _value;

  public TargetType(java.lang.String _value) {
    if (_application.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_library.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_service.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_interfaceTemp.equals(_value)) {
      this._value = _value;
      return;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+_value+"] passed.");
  }

  public java.lang.String getValue() {
    return _value;
  }

  public static TargetType fromValue(java.lang.String value) {
    if (_application.equals(value)) {
      return application;
    }
    if (_library.equals(value)) {
      return library;
    }
    if (_service.equals(value)) {
      return service;
    }
    if (_interfaceTemp.equals(value)) {
      return interfaceTemp;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public static TargetType fromString(String value) {
    if ("application".equals(value)) {
      return application;
    }
    if ("library".equals(value)) {
      return library;
    }
    if ("service".equals(value)) {
      return service;
    }
    if ("interface".equals(value)) {
      return interfaceTemp;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public java.lang.String toString() {
    if (_application.equals(_value)) {
      return "application";
    }
    if (_library.equals(_value)) {
      return "library";
    }
    if (_service.equals(_value)) {
      return "service";
    }
    if (_interfaceTemp.equals(_value)) {
      return "interface";
    }
    return java.lang.String.valueOf(_value);
  }

  public boolean equals(java.lang.Object obj) {
    if (obj != null) {
      if (obj instanceof TargetType) {
        if (_value.equals(((TargetType)obj)._value)) {
          return true;
        }
      }
    }
    return false;
  }

  public int hashCode() {
    return this._value.hashCode();
  }

}
