/*
 * Generated by SAP SchemaToJava Generator NW05 on Tue Jul 19 13:29:43 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.applicationj2eeengine;

/**
 * Schema complexType Java representation.
 * Represents type {}moduleType
 */
public  class ModuleType implements java.io.Serializable,java.lang.Cloneable,com.sap.engine.services.webservices.jaxrpc.encoding.IdenticObject {

  // Element field for element {}entry-name
  private java.lang.String _f_EntryName;
  /**
   * Set method for element {}entry-name
   */
  public void setEntryName(java.lang.String _EntryName) {
    this._f_EntryName = _EntryName;
  }
  /**
   * Get method for element {}entry-name
   */
  public java.lang.String getEntryName() {
    return this._f_EntryName;
  }

  // Element field for element {}container-type
  private java.util.ArrayList _f_ContainerType = new java.util.ArrayList();
  /**
   * Set method for element {}container-type
   */
  public void setContainerType(java.lang.String[] _ContainerType) {
    this._f_ContainerType.clear();
    if (_ContainerType != null) {
      for (int i=0; i<_ContainerType.length; i++) {
        if (_ContainerType[i] != null)
          this._f_ContainerType.add(_ContainerType[i]);
      }
    }
  }
  /**
   * Get method for element {}container-type
   */
  public java.lang.String[] getContainerType() {
    java.lang.String[] result = new java.lang.String[_f_ContainerType.size()];
    _f_ContainerType.toArray(result);
    return result;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof ModuleType)) return false;
    ModuleType typed = (ModuleType) object;
    if (this._f_EntryName != null) {
      if (typed._f_EntryName == null) return false;
      if (!this._f_EntryName.equals(typed._f_EntryName)) return false;
    } else {
      if (typed._f_EntryName != null) return false;
    }
    java.lang.String[] _f_ContainerType1 = this.getContainerType();
    java.lang.String[] _f_ContainerType2 = typed.getContainerType();
    if (_f_ContainerType1 != null) {
      if (_f_ContainerType2 == null) return false;
      if (_f_ContainerType1.length != _f_ContainerType2.length) return false;
      for (int i1 = 0; i1 < _f_ContainerType1.length ; i1++) {
        if (_f_ContainerType1[i1] != null) {
          if (_f_ContainerType2[i1] == null) return false;
          if (!_f_ContainerType1[i1].equals(_f_ContainerType2[i1])) return false;
        } else {
          if (_f_ContainerType2[i1] != null) return false;
        }
      }
    } else {
      if (_f_ContainerType2 != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    if (this._f_EntryName != null) {
      result+= this._f_EntryName.hashCode();
    }
    java.lang.String[] _f_ContainerType1 = this.getContainerType();
    if (_f_ContainerType1 != null) {
      for (int i1 = 0; i1 < _f_ContainerType1.length ; i1++) {
        if (_f_ContainerType1[i1] != null) {
          result+= _f_ContainerType1[i1].hashCode();
        }
      }
    }
    return result;
  }

  public java.lang.String get__ID() {
    return java.lang.String.valueOf(super.hashCode());
  }
}
