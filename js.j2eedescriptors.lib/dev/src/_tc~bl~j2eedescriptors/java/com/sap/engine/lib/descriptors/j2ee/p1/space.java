/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu Mar 31 09:59:28 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.j2ee.p1;

import java.io.Serializable;

/**
 * Enumeration Java representation.
 * Represents type of namespace {http://www.w3.org/XML/1998/namespace} anonymous with xpath [/xs:schema/xs:attribute[2]/xs:simpleType]
 */
public class Space implements Serializable {

  public static final java.lang.String _defaultTemp = "default";
  public static final java.lang.String _preserve = "preserve";

  public static final Space defaultTemp = new Space(_defaultTemp);
  public static final Space preserve = new Space(_preserve);

  //  Enumeration Content
  protected java.lang.String _value;

  public Space(java.lang.String _value) {
    if (_defaultTemp.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_preserve.equals(_value)) {
      this._value = _value;
      return;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+_value+"] passed.");
  }

  public java.lang.String getValue() {
    return _value;
  }

  public static Space fromValue(java.lang.String value) {
    if (_defaultTemp.equals(value)) {
      return defaultTemp;
    }
    if (_preserve.equals(value)) {
      return preserve;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public static Space fromString(String value) {
    if ("default".equals(value)) {
      return defaultTemp;
    }
    if ("preserve".equals(value)) {
      return preserve;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public java.lang.String toString() {
    if (_defaultTemp.equals(_value)) {
      return "default";
    }
    if (_preserve.equals(_value)) {
      return "preserve";
    }
    return java.lang.String.valueOf(_value);
  }

  public boolean equals(java.lang.Object obj) {
    if (obj != null) {
      if (obj instanceof Space) {
        if (_value.equals(((Space)obj)._value)) {
          return true;
        }
      }
    }
    return false;
  }

  public int hashCode() {
    return this._value.hashCode();
  }

}
