/*
 * Generated by SAP SchemaToJava Generator NW05 on Mon Jan 30 18:27:10 EET 2006
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.connectorj2eeengine;

/**
 * Schema complexType Java representation.
 * Represents type {}workmanager-settingsType
 */
public  class WorkmanagerSettingsType implements java.io.Serializable,java.lang.Cloneable,com.sap.engine.services.webservices.jaxrpc.encoding.IdenticObject {

  // Element field for element {}max-thread-count
  private java.math.BigInteger _f_MaxThreadCount;
  /**
   * Set method for element {}max-thread-count
   */
  public void setMaxThreadCount(java.math.BigInteger _MaxThreadCount) {
    this._f_MaxThreadCount = _MaxThreadCount;
  }
  /**
   * Get method for element {}max-thread-count
   */
  public java.math.BigInteger getMaxThreadCount() {
    return this._f_MaxThreadCount;
  }

  // Element field for element {}start-thread-timeout
  private java.math.BigInteger _f_StartThreadTimeout;
  /**
   * Set method for element {}start-thread-timeout
   */
  public void setStartThreadTimeout(java.math.BigInteger _StartThreadTimeout) {
    this._f_StartThreadTimeout = _StartThreadTimeout;
  }
  /**
   * Get method for element {}start-thread-timeout
   */
  public java.math.BigInteger getStartThreadTimeout() {
    return this._f_StartThreadTimeout;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof WorkmanagerSettingsType)) return false;
    WorkmanagerSettingsType typed = (WorkmanagerSettingsType) object;
    if (this._f_MaxThreadCount != null) {
      if (typed._f_MaxThreadCount == null) return false;
      if (!this._f_MaxThreadCount.equals(typed._f_MaxThreadCount)) return false;
    } else {
      if (typed._f_MaxThreadCount != null) return false;
    }
    if (this._f_StartThreadTimeout != null) {
      if (typed._f_StartThreadTimeout == null) return false;
      if (!this._f_StartThreadTimeout.equals(typed._f_StartThreadTimeout)) return false;
    } else {
      if (typed._f_StartThreadTimeout != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    if (this._f_MaxThreadCount != null) {
      result+= this._f_MaxThreadCount.hashCode();
    }
    if (this._f_StartThreadTimeout != null) {
      result+= this._f_StartThreadTimeout.hashCode();
    }
    return result;
  }

  public java.lang.String get__ID() {
    return java.lang.String.valueOf(super.hashCode());
  }
}
