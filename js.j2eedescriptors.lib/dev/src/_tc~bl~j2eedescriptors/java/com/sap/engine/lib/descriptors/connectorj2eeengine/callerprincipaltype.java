/*
 * Generated by SAP SchemaToJava Generator NW05 on Mon Jan 30 18:27:10 EET 2006
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.connectorj2eeengine;

/**
 * Schema complexType Java representation.
 * Represents type {}caller-principalType
 */
public  class CallerPrincipalType implements java.io.Serializable,java.lang.Cloneable,com.sap.engine.services.webservices.jaxrpc.encoding.IdenticObject {

  // Element field for element {}group-name
  private java.util.ArrayList _f_GroupName = new java.util.ArrayList();
  /**
   * Set method for element {}group-name
   */
  public void setGroupName(java.lang.String[] _GroupName) {
    this._f_GroupName.clear();
    if (_GroupName != null) {
      for (int i=0; i<_GroupName.length; i++) {
        if (_GroupName[i] != null)
          this._f_GroupName.add(_GroupName[i]);
      }
    }
  }
  /**
   * Get method for element {}group-name
   */
  public java.lang.String[] getGroupName() {
    java.lang.String[] result = new java.lang.String[_f_GroupName.size()];
    _f_GroupName.toArray(result);
    return result;
  }

  // Element field for element {}user-name
  private java.util.ArrayList _f_UserName = new java.util.ArrayList();
  /**
   * Set method for element {}user-name
   */
  public void setUserName(java.lang.String[] _UserName) {
    this._f_UserName.clear();
    if (_UserName != null) {
      for (int i=0; i<_UserName.length; i++) {
        if (_UserName[i] != null)
          this._f_UserName.add(_UserName[i]);
      }
    }
  }
  /**
   * Get method for element {}user-name
   */
  public java.lang.String[] getUserName() {
    java.lang.String[] result = new java.lang.String[_f_UserName.size()];
    _f_UserName.toArray(result);
    return result;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof CallerPrincipalType)) return false;
    CallerPrincipalType typed = (CallerPrincipalType) object;
    java.lang.String[] _f_GroupName1 = this.getGroupName();
    java.lang.String[] _f_GroupName2 = typed.getGroupName();
    if (_f_GroupName1 != null) {
      if (_f_GroupName2 == null) return false;
      if (_f_GroupName1.length != _f_GroupName2.length) return false;
      for (int i1 = 0; i1 < _f_GroupName1.length ; i1++) {
        if (_f_GroupName1[i1] != null) {
          if (_f_GroupName2[i1] == null) return false;
          if (!_f_GroupName1[i1].equals(_f_GroupName2[i1])) return false;
        } else {
          if (_f_GroupName2[i1] != null) return false;
        }
      }
    } else {
      if (_f_GroupName2 != null) return false;
    }
    java.lang.String[] _f_UserName1 = this.getUserName();
    java.lang.String[] _f_UserName2 = typed.getUserName();
    if (_f_UserName1 != null) {
      if (_f_UserName2 == null) return false;
      if (_f_UserName1.length != _f_UserName2.length) return false;
      for (int i1 = 0; i1 < _f_UserName1.length ; i1++) {
        if (_f_UserName1[i1] != null) {
          if (_f_UserName2[i1] == null) return false;
          if (!_f_UserName1[i1].equals(_f_UserName2[i1])) return false;
        } else {
          if (_f_UserName2[i1] != null) return false;
        }
      }
    } else {
      if (_f_UserName2 != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    java.lang.String[] _f_GroupName1 = this.getGroupName();
    if (_f_GroupName1 != null) {
      for (int i1 = 0; i1 < _f_GroupName1.length ; i1++) {
        if (_f_GroupName1[i1] != null) {
          result+= _f_GroupName1[i1].hashCode();
        }
      }
    }
    java.lang.String[] _f_UserName1 = this.getUserName();
    if (_f_UserName1 != null) {
      for (int i1 = 0; i1 < _f_UserName1.length ; i1++) {
        if (_f_UserName1[i1] != null) {
          result+= _f_UserName1[i1].hashCode();
        }
      }
    }
    return result;
  }

  public java.lang.String get__ID() {
    return java.lang.String.valueOf(super.hashCode());
  }
}
