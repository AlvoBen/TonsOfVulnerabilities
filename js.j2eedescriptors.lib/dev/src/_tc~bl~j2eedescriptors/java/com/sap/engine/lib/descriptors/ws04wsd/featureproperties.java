/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu May 05 11:45:02 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.ws04wsd;

/**
 * Schema complexType Java representation.
 * Represents type of namespace {http://xml.sap.com/2002/10/metamodel/wsd} anonymous with xpath [/xsd:schema/xsd:complexType[2]/xsd:sequence/xsd:element/xsd:complexType]
 */
public  class FeatureProperties implements java.io.Serializable,java.lang.Cloneable {

  // Element field for element {http://xml.sap.com/2002/10/metamodel/wsd}Property
  private java.util.ArrayList _f_Property = new java.util.ArrayList();
  /**
   * Set method for element {http://xml.sap.com/2002/10/metamodel/wsd}Property
   */
  public void setProperty(com.sap.engine.lib.descriptors.ws04wsd.PropertyState[] _Property) {
    this._f_Property.clear();
    if (_Property != null) {
      for (int i=0; i<_Property.length; i++) {
        if (_Property[i] != null)
          this._f_Property.add(_Property[i]);
      }
    }
  }
  /**
   * Get method for element {http://xml.sap.com/2002/10/metamodel/wsd}Property
   */
  public com.sap.engine.lib.descriptors.ws04wsd.PropertyState[] getProperty() {
    com.sap.engine.lib.descriptors.ws04wsd.PropertyState[] result = new com.sap.engine.lib.descriptors.ws04wsd.PropertyState[_f_Property.size()];
    _f_Property.toArray(result);
    return result;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof FeatureProperties)) return false;
    FeatureProperties typed = (FeatureProperties) object;
    com.sap.engine.lib.descriptors.ws04wsd.PropertyState[] _f_Property1 = this.getProperty();
    com.sap.engine.lib.descriptors.ws04wsd.PropertyState[] _f_Property2 = typed.getProperty();
    if (_f_Property1 != null) {
      if (_f_Property2 == null) return false;
      if (_f_Property1.length != _f_Property2.length) return false;
      for (int i1 = 0; i1 < _f_Property1.length ; i1++) {
        if (_f_Property1[i1] != null) {
          if (_f_Property2[i1] == null) return false;
          if (!_f_Property1[i1].equals(_f_Property2[i1])) return false;
        } else {
          if (_f_Property2[i1] != null) return false;
        }
      }
    } else {
      if (_f_Property2 != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    com.sap.engine.lib.descriptors.ws04wsd.PropertyState[] _f_Property1 = this.getProperty();
    if (_f_Property1 != null) {
      for (int i1 = 0; i1 < _f_Property1.length ; i1++) {
        if (_f_Property1[i1] != null) {
          result+= _f_Property1[i1].hashCode();
        }
      }
    }
    return result;
  }
}
