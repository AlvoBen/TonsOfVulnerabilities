/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu Oct 19 11:20:17 EEST 2006
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors5.ejb;

/**
 * Schema complexType Java representation.
 * Represents type {http://java.sun.com/xml/ns/javaee}remove-methodType
 */
public  class RemoveMethodType implements java.io.Serializable {

  private static final long serialVersionUID = -3862005529912585985L;

  // Attribute field for attribute {}id
  private java.lang.String _a_Id;
  /**
   * Set method for attribute {}id
   */
  public void setId(java.lang.String _Id) {
    this._a_Id = _Id;
  }
  /**
   * Get method for attribute {}id
   */
  public java.lang.String getId() {
    return _a_Id;
  }

  // Element field for element {http://java.sun.com/xml/ns/javaee}bean-method
  private com.sap.engine.lib.descriptors5.ejb.NamedMethodType _f_BeanMethod;
  /**
   * Set method for element {http://java.sun.com/xml/ns/javaee}bean-method
   */
  public void setBeanMethod(com.sap.engine.lib.descriptors5.ejb.NamedMethodType _BeanMethod) {
    this._f_BeanMethod = _BeanMethod;
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/javaee}bean-method
   */
  public com.sap.engine.lib.descriptors5.ejb.NamedMethodType getBeanMethod() {
    return this._f_BeanMethod;
  }

  // Element field for element {http://java.sun.com/xml/ns/javaee}retain-if-exception
  private com.sap.engine.lib.descriptors5.javaee.TrueFalseType _f_RetainIfException;
  /**
   * Set method for element {http://java.sun.com/xml/ns/javaee}retain-if-exception
   */
  public void setRetainIfException(com.sap.engine.lib.descriptors5.javaee.TrueFalseType _RetainIfException) {
    this._f_RetainIfException = _RetainIfException;
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/javaee}retain-if-exception
   */
  public com.sap.engine.lib.descriptors5.javaee.TrueFalseType getRetainIfException() {
    return this._f_RetainIfException;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof RemoveMethodType)) return false;
    RemoveMethodType typed = (RemoveMethodType) object;
    if (this._a_Id != null) {
      if (typed._a_Id == null) return false;
      if (!this._a_Id.equals(typed._a_Id)) return false;
    } else {
      if (typed._a_Id != null) return false;
    }
    if (this._f_BeanMethod != null) {
      if (typed._f_BeanMethod == null) return false;
      if (!this._f_BeanMethod.equals(typed._f_BeanMethod)) return false;
    } else {
      if (typed._f_BeanMethod != null) return false;
    }
    if (this._f_RetainIfException != null) {
      if (typed._f_RetainIfException == null) return false;
      if (!this._f_RetainIfException.equals(typed._f_RetainIfException)) return false;
    } else {
      if (typed._f_RetainIfException != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    if (this._a_Id != null) {
      result+= this._a_Id.hashCode();
    }
    if (this._f_BeanMethod != null) {
      result+= this._f_BeanMethod.hashCode();
    }
    if (this._f_RetainIfException != null) {
      result+= this._f_RetainIfException.hashCode();
    }
    return result;
  }
}
