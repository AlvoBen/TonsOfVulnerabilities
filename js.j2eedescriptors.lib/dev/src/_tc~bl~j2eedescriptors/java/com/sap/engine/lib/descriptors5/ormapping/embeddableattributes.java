/*
 * Generated by SAP SchemaToJava Generator NW05 on Wed Apr 12 11:18:44 EEST 2006
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors5.ormapping;

/**
 * Schema complexType Java representation.
 * Represents type {http://java.sun.com/xml/ns/persistence/orm}embeddable-attributes
 */
public  class EmbeddableAttributes implements java.io.Serializable,java.lang.Cloneable,com.sap.engine.services.webservices.jaxrpc.encoding.IdenticObject {

  // Element field for element {http://java.sun.com/xml/ns/persistence/orm}basic
  private java.util.ArrayList _f_Basic = new java.util.ArrayList();
  /**
   * Set method for element {http://java.sun.com/xml/ns/persistence/orm}basic
   */
  public void setBasic(com.sap.engine.lib.descriptors5.ormapping.Basic[] _Basic) {
    this._f_Basic.clear();
    if (_Basic != null) {
      for (int i=0; i<_Basic.length; i++) {
        if (_Basic[i] != null)
          this._f_Basic.add(_Basic[i]);
      }
    }
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/persistence/orm}basic
   */
  public com.sap.engine.lib.descriptors5.ormapping.Basic[] getBasic() {
    com.sap.engine.lib.descriptors5.ormapping.Basic[] result = new com.sap.engine.lib.descriptors5.ormapping.Basic[_f_Basic.size()];
    _f_Basic.toArray(result);
    return result;
  }

  // Element field for element {http://java.sun.com/xml/ns/persistence/orm}transient
  private java.util.ArrayList _f_Transient = new java.util.ArrayList();
  /**
   * Set method for element {http://java.sun.com/xml/ns/persistence/orm}transient
   */
  public void setTransient(com.sap.engine.lib.descriptors5.ormapping.Transient[] _Transient) {
    this._f_Transient.clear();
    if (_Transient != null) {
      for (int i=0; i<_Transient.length; i++) {
        if (_Transient[i] != null)
          this._f_Transient.add(_Transient[i]);
      }
    }
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/persistence/orm}transient
   */
  public com.sap.engine.lib.descriptors5.ormapping.Transient[] getTransient() {
    com.sap.engine.lib.descriptors5.ormapping.Transient[] result = new com.sap.engine.lib.descriptors5.ormapping.Transient[_f_Transient.size()];
    _f_Transient.toArray(result);
    return result;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof EmbeddableAttributes)) return false;
    EmbeddableAttributes typed = (EmbeddableAttributes) object;
    com.sap.engine.lib.descriptors5.ormapping.Basic[] _f_Basic1 = this.getBasic();
    com.sap.engine.lib.descriptors5.ormapping.Basic[] _f_Basic2 = typed.getBasic();
    if (_f_Basic1 != null) {
      if (_f_Basic2 == null) return false;
      if (_f_Basic1.length != _f_Basic2.length) return false;
      for (int i1 = 0; i1 < _f_Basic1.length ; i1++) {
        if (_f_Basic1[i1] != null) {
          if (_f_Basic2[i1] == null) return false;
          if (!_f_Basic1[i1].equals(_f_Basic2[i1])) return false;
        } else {
          if (_f_Basic2[i1] != null) return false;
        }
      }
    } else {
      if (_f_Basic2 != null) return false;
    }
    com.sap.engine.lib.descriptors5.ormapping.Transient[] _f_Transient1 = this.getTransient();
    com.sap.engine.lib.descriptors5.ormapping.Transient[] _f_Transient2 = typed.getTransient();
    if (_f_Transient1 != null) {
      if (_f_Transient2 == null) return false;
      if (_f_Transient1.length != _f_Transient2.length) return false;
      for (int i1 = 0; i1 < _f_Transient1.length ; i1++) {
        if (_f_Transient1[i1] != null) {
          if (_f_Transient2[i1] == null) return false;
          if (!_f_Transient1[i1].equals(_f_Transient2[i1])) return false;
        } else {
          if (_f_Transient2[i1] != null) return false;
        }
      }
    } else {
      if (_f_Transient2 != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    com.sap.engine.lib.descriptors5.ormapping.Basic[] _f_Basic1 = this.getBasic();
    if (_f_Basic1 != null) {
      for (int i1 = 0; i1 < _f_Basic1.length ; i1++) {
        if (_f_Basic1[i1] != null) {
          result+= _f_Basic1[i1].hashCode();
        }
      }
    }
    com.sap.engine.lib.descriptors5.ormapping.Transient[] _f_Transient1 = this.getTransient();
    if (_f_Transient1 != null) {
      for (int i1 = 0; i1 < _f_Transient1.length ; i1++) {
        if (_f_Transient1[i1] != null) {
          result+= _f_Transient1[i1].hashCode();
        }
      }
    }
    return result;
  }

  public java.lang.String get__ID() {
    return java.lang.String.valueOf(super.hashCode());
  }
}
