/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu Jun 09 10:21:40 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.webj2eeengine;

import java.io.Serializable;

/**
 * Enumeration Java representation.
 * Represents type {}get-request-url-modeType
 */
public class GetRequestUrlModeType implements Serializable {

  public static final java.lang.String _REQUESTDISPATCHER = "REQUEST-DISPATCHER";
  public static final java.lang.String _CLIENT = "CLIENT";

  public static final GetRequestUrlModeType REQUESTDISPATCHER = new GetRequestUrlModeType(_REQUESTDISPATCHER);
  public static final GetRequestUrlModeType CLIENT = new GetRequestUrlModeType(_CLIENT);

  //  Enumeration Content
  protected java.lang.String _value;

  public GetRequestUrlModeType(java.lang.String _value) {
    if (_REQUESTDISPATCHER.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_CLIENT.equals(_value)) {
      this._value = _value;
      return;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+_value+"] passed.");
  }

  public java.lang.String getValue() {
    return _value;
  }

  public static GetRequestUrlModeType fromValue(java.lang.String value) {
    if (_REQUESTDISPATCHER.equals(value)) {
      return REQUESTDISPATCHER;
    }
    if (_CLIENT.equals(value)) {
      return CLIENT;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public static GetRequestUrlModeType fromString(String value) {
    if ("REQUEST-DISPATCHER".equals(value)) {
      return REQUESTDISPATCHER;
    }
    if ("CLIENT".equals(value)) {
      return CLIENT;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public java.lang.String toString() {
    if (_REQUESTDISPATCHER.equals(_value)) {
      return "REQUEST-DISPATCHER";
    }
    if (_CLIENT.equals(_value)) {
      return "CLIENT";
    }
    return java.lang.String.valueOf(_value);
  }

  public boolean equals(java.lang.Object obj) {
    if (obj != null) {
      if (obj instanceof GetRequestUrlModeType) {
        if (_value.equals(((GetRequestUrlModeType)obj)._value)) {
          return true;
        }
      }
    }
    return false;
  }

  public int hashCode() {
    return this._value.hashCode();
  }

}
