/*
 * Generated by SAP SchemaToJava Generator NW05 on Tue Jul 19 13:29:43 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.applicationj2eeengine;

/**
 * Enumeration Java representation.
 * Represents type of namespace {} anonymous with xpath [/xs:schema/xs:complexType[7]/xs:attribute/xs:simpleType]
 */
public class ReferenceTypeAttribute implements java.io.Serializable {

  public static final java.lang.String _hard = "hard";
  public static final java.lang.String _weak = "weak";

  public static final ReferenceTypeAttribute hard = new ReferenceTypeAttribute(_hard);
  public static final ReferenceTypeAttribute weak = new ReferenceTypeAttribute(_weak);

  //  Enumeration Content
  protected java.lang.String _value;

  public ReferenceTypeAttribute(java.lang.String _value) {
    if (_hard.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_weak.equals(_value)) {
      this._value = _value;
      return;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+_value+"] passed.");
  }

  public java.lang.String getValue() {
    return _value;
  }

  public static ReferenceTypeAttribute fromValue(java.lang.String value) {
    if (_hard.equals(value)) {
      return hard;
    }
    if (_weak.equals(value)) {
      return weak;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public static ReferenceTypeAttribute fromString(String value) {
    if ("hard".equals(value)) {
      return hard;
    }
    if ("weak".equals(value)) {
      return weak;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public java.lang.String toString() {
    if (_hard.equals(_value)) {
      return "hard";
    }
    if (_weak.equals(_value)) {
      return "weak";
    }
    return java.lang.String.valueOf(_value);
  }

  public boolean equals(java.lang.Object obj) {
    if (obj != null) {
      if (obj instanceof ReferenceTypeAttribute) {
        if (_value.equals(((ReferenceTypeAttribute)obj)._value)) {
          return true;
        }
      }
    }
    return false;
  }

  public int hashCode() {
    return this._value.hashCode();
  }

}
