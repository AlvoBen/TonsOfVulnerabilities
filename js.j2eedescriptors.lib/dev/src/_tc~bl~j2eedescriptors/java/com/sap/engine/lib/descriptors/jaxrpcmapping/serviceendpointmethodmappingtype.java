/*
 * Generated by SAP SchemaToJava Generator NW05 on Fri Apr 22 10:18:13 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.jaxrpcmapping;

/**
 * Schema complexType Java representation.
 * Represents type {http://java.sun.com/xml/ns/j2ee}service-endpoint-method-mappingType
 */
public  class ServiceEndpointMethodMappingType implements java.io.Serializable,java.lang.Cloneable,com.sap.engine.services.webservices.jaxrpc.encoding.IdenticObject {

  // Attribute field for attribute {}id
  private java.lang.String _a_Id;
  /**
   * Set method for attribute {}id
   */
  public void setId(java.lang.String _Id) {
    this._a_Id = _Id;
  }
  /**
   * Get method for attribute {}id
   */
  public java.lang.String getId() {
    return _a_Id;
  }

  // Element field for element {http://java.sun.com/xml/ns/j2ee}java-method-name
  private com.sap.engine.lib.descriptors.j2ee.String _f_JavaMethodName;
  /**
   * Set method for element {http://java.sun.com/xml/ns/j2ee}java-method-name
   */
  public void setJavaMethodName(com.sap.engine.lib.descriptors.j2ee.String _JavaMethodName) {
    this._f_JavaMethodName = _JavaMethodName;
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/j2ee}java-method-name
   */
  public com.sap.engine.lib.descriptors.j2ee.String getJavaMethodName() {
    return this._f_JavaMethodName;
  }

  // Element field for element {http://java.sun.com/xml/ns/j2ee}wsdl-operation
  private com.sap.engine.lib.descriptors.j2ee.String _f_WsdlOperation;
  /**
   * Set method for element {http://java.sun.com/xml/ns/j2ee}wsdl-operation
   */
  public void setWsdlOperation(com.sap.engine.lib.descriptors.j2ee.String _WsdlOperation) {
    this._f_WsdlOperation = _WsdlOperation;
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/j2ee}wsdl-operation
   */
  public com.sap.engine.lib.descriptors.j2ee.String getWsdlOperation() {
    return this._f_WsdlOperation;
  }

  // Element field for element {http://java.sun.com/xml/ns/j2ee}wrapped-element
  private com.sap.engine.lib.descriptors.j2ee.EmptyType _f_WrappedElement;
  /**
   * Set method for element {http://java.sun.com/xml/ns/j2ee}wrapped-element
   */
  public void setWrappedElement(com.sap.engine.lib.descriptors.j2ee.EmptyType _WrappedElement) {
    this._f_WrappedElement = _WrappedElement;
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/j2ee}wrapped-element
   */
  public com.sap.engine.lib.descriptors.j2ee.EmptyType getWrappedElement() {
    return this._f_WrappedElement;
  }

  // Element field for element {http://java.sun.com/xml/ns/j2ee}method-param-parts-mapping
  private java.util.ArrayList _f_MethodParamPartsMapping = new java.util.ArrayList();
  /**
   * Set method for element {http://java.sun.com/xml/ns/j2ee}method-param-parts-mapping
   */
  public void setMethodParamPartsMapping(com.sap.engine.lib.descriptors.jaxrpcmapping.MethodParamPartsMappingType[] _MethodParamPartsMapping) {
    this._f_MethodParamPartsMapping.clear();
    if (_MethodParamPartsMapping != null) {
      for (int i=0; i<_MethodParamPartsMapping.length; i++) {
        if (_MethodParamPartsMapping[i] != null)
          this._f_MethodParamPartsMapping.add(_MethodParamPartsMapping[i]);
      }
    }
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/j2ee}method-param-parts-mapping
   */
  public com.sap.engine.lib.descriptors.jaxrpcmapping.MethodParamPartsMappingType[] getMethodParamPartsMapping() {
    com.sap.engine.lib.descriptors.jaxrpcmapping.MethodParamPartsMappingType[] result = new com.sap.engine.lib.descriptors.jaxrpcmapping.MethodParamPartsMappingType[_f_MethodParamPartsMapping.size()];
    _f_MethodParamPartsMapping.toArray(result);
    return result;
  }

  // Element field for element {http://java.sun.com/xml/ns/j2ee}wsdl-return-value-mapping
  private com.sap.engine.lib.descriptors.jaxrpcmapping.WsdlReturnValueMappingType _f_WsdlReturnValueMapping;
  /**
   * Set method for element {http://java.sun.com/xml/ns/j2ee}wsdl-return-value-mapping
   */
  public void setWsdlReturnValueMapping(com.sap.engine.lib.descriptors.jaxrpcmapping.WsdlReturnValueMappingType _WsdlReturnValueMapping) {
    this._f_WsdlReturnValueMapping = _WsdlReturnValueMapping;
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/j2ee}wsdl-return-value-mapping
   */
  public com.sap.engine.lib.descriptors.jaxrpcmapping.WsdlReturnValueMappingType getWsdlReturnValueMapping() {
    return this._f_WsdlReturnValueMapping;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof ServiceEndpointMethodMappingType)) return false;
    ServiceEndpointMethodMappingType typed = (ServiceEndpointMethodMappingType) object;
    if (this._a_Id != null) {
      if (typed._a_Id == null) return false;
      if (!this._a_Id.equals(typed._a_Id)) return false;
    } else {
      if (typed._a_Id != null) return false;
    }
    if (this._f_JavaMethodName != null) {
      if (typed._f_JavaMethodName == null) return false;
      if (!this._f_JavaMethodName.equals(typed._f_JavaMethodName)) return false;
    } else {
      if (typed._f_JavaMethodName != null) return false;
    }
    if (this._f_WsdlOperation != null) {
      if (typed._f_WsdlOperation == null) return false;
      if (!this._f_WsdlOperation.equals(typed._f_WsdlOperation)) return false;
    } else {
      if (typed._f_WsdlOperation != null) return false;
    }
    if (this._f_WrappedElement != null) {
      if (typed._f_WrappedElement == null) return false;
      if (!this._f_WrappedElement.equals(typed._f_WrappedElement)) return false;
    } else {
      if (typed._f_WrappedElement != null) return false;
    }
    com.sap.engine.lib.descriptors.jaxrpcmapping.MethodParamPartsMappingType[] _f_MethodParamPartsMapping1 = this.getMethodParamPartsMapping();
    com.sap.engine.lib.descriptors.jaxrpcmapping.MethodParamPartsMappingType[] _f_MethodParamPartsMapping2 = typed.getMethodParamPartsMapping();
    if (_f_MethodParamPartsMapping1 != null) {
      if (_f_MethodParamPartsMapping2 == null) return false;
      if (_f_MethodParamPartsMapping1.length != _f_MethodParamPartsMapping2.length) return false;
      for (int i1 = 0; i1 < _f_MethodParamPartsMapping1.length ; i1++) {
        if (_f_MethodParamPartsMapping1[i1] != null) {
          if (_f_MethodParamPartsMapping2[i1] == null) return false;
          if (!_f_MethodParamPartsMapping1[i1].equals(_f_MethodParamPartsMapping2[i1])) return false;
        } else {
          if (_f_MethodParamPartsMapping2[i1] != null) return false;
        }
      }
    } else {
      if (_f_MethodParamPartsMapping2 != null) return false;
    }
    if (this._f_WsdlReturnValueMapping != null) {
      if (typed._f_WsdlReturnValueMapping == null) return false;
      if (!this._f_WsdlReturnValueMapping.equals(typed._f_WsdlReturnValueMapping)) return false;
    } else {
      if (typed._f_WsdlReturnValueMapping != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    if (this._a_Id != null) {
      result+= this._a_Id.hashCode();
    }
    if (this._f_JavaMethodName != null) {
      result+= this._f_JavaMethodName.hashCode();
    }
    if (this._f_WsdlOperation != null) {
      result+= this._f_WsdlOperation.hashCode();
    }
    if (this._f_WrappedElement != null) {
      result+= this._f_WrappedElement.hashCode();
    }
    com.sap.engine.lib.descriptors.jaxrpcmapping.MethodParamPartsMappingType[] _f_MethodParamPartsMapping1 = this.getMethodParamPartsMapping();
    if (_f_MethodParamPartsMapping1 != null) {
      for (int i1 = 0; i1 < _f_MethodParamPartsMapping1.length ; i1++) {
        if (_f_MethodParamPartsMapping1[i1] != null) {
          result+= _f_MethodParamPartsMapping1[i1].hashCode();
        }
      }
    }
    if (this._f_WsdlReturnValueMapping != null) {
      result+= this._f_WsdlReturnValueMapping.hashCode();
    }
    return result;
  }

  public java.lang.String get__ID() {
    return java.lang.String.valueOf(super.hashCode());
  }
}
