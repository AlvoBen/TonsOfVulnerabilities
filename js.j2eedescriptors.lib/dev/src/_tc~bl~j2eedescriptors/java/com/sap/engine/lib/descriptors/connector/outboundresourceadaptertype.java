/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu Mar 31 10:03:16 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.connector;

/**
 * Schema complexType Java representation.
 * Represents type {http://java.sun.com/xml/ns/j2ee}outbound-resourceadapterType
 */
public  class OutboundResourceadapterType implements java.io.Serializable,java.lang.Cloneable,com.sap.engine.services.webservices.jaxrpc.encoding.IdenticObject {

  // Attribute field for attribute {}id
  private java.lang.String _a_Id;
  /**
   * Set method for attribute {}id
   */
  public void setId(java.lang.String _Id) {
    this._a_Id = _Id;
  }
  /**
   * Get method for attribute {}id
   */
  public java.lang.String getId() {
    return _a_Id;
  }

  // Element field for element {http://java.sun.com/xml/ns/j2ee}connection-definition
  private java.util.ArrayList _f_ConnectionDefinition = new java.util.ArrayList();
  /**
   * Set method for element {http://java.sun.com/xml/ns/j2ee}connection-definition
   */
  public void setConnectionDefinition(com.sap.engine.lib.descriptors.connector.ConnectionDefinitionType[] _ConnectionDefinition) {
    this._f_ConnectionDefinition.clear();
    if (_ConnectionDefinition != null) {
      for (int i=0; i<_ConnectionDefinition.length; i++) {
        if (_ConnectionDefinition[i] != null)
          this._f_ConnectionDefinition.add(_ConnectionDefinition[i]);
      }
    }
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/j2ee}connection-definition
   */
  public com.sap.engine.lib.descriptors.connector.ConnectionDefinitionType[] getConnectionDefinition() {
    com.sap.engine.lib.descriptors.connector.ConnectionDefinitionType[] result = new com.sap.engine.lib.descriptors.connector.ConnectionDefinitionType[_f_ConnectionDefinition.size()];
    _f_ConnectionDefinition.toArray(result);
    return result;
  }

  // Element field for element {http://java.sun.com/xml/ns/j2ee}transaction-support
  private com.sap.engine.lib.descriptors.connector.TransactionSupportType _f_TransactionSupport;
  /**
   * Set method for element {http://java.sun.com/xml/ns/j2ee}transaction-support
   */
  public void setTransactionSupport(com.sap.engine.lib.descriptors.connector.TransactionSupportType _TransactionSupport) {
    this._f_TransactionSupport = _TransactionSupport;
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/j2ee}transaction-support
   */
  public com.sap.engine.lib.descriptors.connector.TransactionSupportType getTransactionSupport() {
    return this._f_TransactionSupport;
  }

  // Element field for element {http://java.sun.com/xml/ns/j2ee}authentication-mechanism
  private java.util.ArrayList _f_AuthenticationMechanism = new java.util.ArrayList();
  /**
   * Set method for element {http://java.sun.com/xml/ns/j2ee}authentication-mechanism
   */
  public void setAuthenticationMechanism(com.sap.engine.lib.descriptors.connector.AuthenticationMechanismType[] _AuthenticationMechanism) {
    this._f_AuthenticationMechanism.clear();
    if (_AuthenticationMechanism != null) {
      for (int i=0; i<_AuthenticationMechanism.length; i++) {
        if (_AuthenticationMechanism[i] != null)
          this._f_AuthenticationMechanism.add(_AuthenticationMechanism[i]);
      }
    }
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/j2ee}authentication-mechanism
   */
  public com.sap.engine.lib.descriptors.connector.AuthenticationMechanismType[] getAuthenticationMechanism() {
    com.sap.engine.lib.descriptors.connector.AuthenticationMechanismType[] result = new com.sap.engine.lib.descriptors.connector.AuthenticationMechanismType[_f_AuthenticationMechanism.size()];
    _f_AuthenticationMechanism.toArray(result);
    return result;
  }

  // Element field for element {http://java.sun.com/xml/ns/j2ee}reauthentication-support
  private com.sap.engine.lib.descriptors.j2ee.TrueFalseType _f_ReauthenticationSupport;
  /**
   * Set method for element {http://java.sun.com/xml/ns/j2ee}reauthentication-support
   */
  public void setReauthenticationSupport(com.sap.engine.lib.descriptors.j2ee.TrueFalseType _ReauthenticationSupport) {
    this._f_ReauthenticationSupport = _ReauthenticationSupport;
  }
  /**
   * Get method for element {http://java.sun.com/xml/ns/j2ee}reauthentication-support
   */
  public com.sap.engine.lib.descriptors.j2ee.TrueFalseType getReauthenticationSupport() {
    return this._f_ReauthenticationSupport;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof OutboundResourceadapterType)) return false;
    OutboundResourceadapterType typed = (OutboundResourceadapterType) object;
    if (this._a_Id != null) {
      if (typed._a_Id == null) return false;
      if (!this._a_Id.equals(typed._a_Id)) return false;
    } else {
      if (typed._a_Id != null) return false;
    }
    com.sap.engine.lib.descriptors.connector.ConnectionDefinitionType[] _f_ConnectionDefinition1 = this.getConnectionDefinition();
    com.sap.engine.lib.descriptors.connector.ConnectionDefinitionType[] _f_ConnectionDefinition2 = typed.getConnectionDefinition();
    if (_f_ConnectionDefinition1 != null) {
      if (_f_ConnectionDefinition2 == null) return false;
      if (_f_ConnectionDefinition1.length != _f_ConnectionDefinition2.length) return false;
      for (int i1 = 0; i1 < _f_ConnectionDefinition1.length ; i1++) {
        if (_f_ConnectionDefinition1[i1] != null) {
          if (_f_ConnectionDefinition2[i1] == null) return false;
          if (!_f_ConnectionDefinition1[i1].equals(_f_ConnectionDefinition2[i1])) return false;
        } else {
          if (_f_ConnectionDefinition2[i1] != null) return false;
        }
      }
    } else {
      if (_f_ConnectionDefinition2 != null) return false;
    }
    if (this._f_TransactionSupport != null) {
      if (typed._f_TransactionSupport == null) return false;
      if (!this._f_TransactionSupport.equals(typed._f_TransactionSupport)) return false;
    } else {
      if (typed._f_TransactionSupport != null) return false;
    }
    com.sap.engine.lib.descriptors.connector.AuthenticationMechanismType[] _f_AuthenticationMechanism1 = this.getAuthenticationMechanism();
    com.sap.engine.lib.descriptors.connector.AuthenticationMechanismType[] _f_AuthenticationMechanism2 = typed.getAuthenticationMechanism();
    if (_f_AuthenticationMechanism1 != null) {
      if (_f_AuthenticationMechanism2 == null) return false;
      if (_f_AuthenticationMechanism1.length != _f_AuthenticationMechanism2.length) return false;
      for (int i1 = 0; i1 < _f_AuthenticationMechanism1.length ; i1++) {
        if (_f_AuthenticationMechanism1[i1] != null) {
          if (_f_AuthenticationMechanism2[i1] == null) return false;
          if (!_f_AuthenticationMechanism1[i1].equals(_f_AuthenticationMechanism2[i1])) return false;
        } else {
          if (_f_AuthenticationMechanism2[i1] != null) return false;
        }
      }
    } else {
      if (_f_AuthenticationMechanism2 != null) return false;
    }
    if (this._f_ReauthenticationSupport != null) {
      if (typed._f_ReauthenticationSupport == null) return false;
      if (!this._f_ReauthenticationSupport.equals(typed._f_ReauthenticationSupport)) return false;
    } else {
      if (typed._f_ReauthenticationSupport != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    if (this._a_Id != null) {
      result+= this._a_Id.hashCode();
    }
    com.sap.engine.lib.descriptors.connector.ConnectionDefinitionType[] _f_ConnectionDefinition1 = this.getConnectionDefinition();
    if (_f_ConnectionDefinition1 != null) {
      for (int i1 = 0; i1 < _f_ConnectionDefinition1.length ; i1++) {
        if (_f_ConnectionDefinition1[i1] != null) {
          result+= _f_ConnectionDefinition1[i1].hashCode();
        }
      }
    }
    if (this._f_TransactionSupport != null) {
      result+= this._f_TransactionSupport.hashCode();
    }
    com.sap.engine.lib.descriptors.connector.AuthenticationMechanismType[] _f_AuthenticationMechanism1 = this.getAuthenticationMechanism();
    if (_f_AuthenticationMechanism1 != null) {
      for (int i1 = 0; i1 < _f_AuthenticationMechanism1.length ; i1++) {
        if (_f_AuthenticationMechanism1[i1] != null) {
          result+= _f_AuthenticationMechanism1[i1].hashCode();
        }
      }
    }
    if (this._f_ReauthenticationSupport != null) {
      result+= this._f_ReauthenticationSupport.hashCode();
    }
    return result;
  }

  public java.lang.String get__ID() {
    return java.lang.String.valueOf(super.hashCode());
  }
}
