/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu Mar 31 10:03:54 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.ejbj2eeengine;

/**
 * Schema complexType Java representation.
 * Represents type {}passivationType
 */
public  class PassivationType implements java.io.Serializable,java.lang.Cloneable,com.sap.engine.services.webservices.jaxrpc.encoding.IdenticObject {

  // Element field for element {}passive-timeout
  private java.lang.String _f_PassiveTimeout;
  /**
   * Set method for element {}passive-timeout
   */
  public void setPassiveTimeout(java.lang.String _PassiveTimeout) {
    this._f_PassiveTimeout = _PassiveTimeout;
  }
  /**
   * Get method for element {}passive-timeout
   */
  public java.lang.String getPassiveTimeout() {
    return this._f_PassiveTimeout;
  }

  // Element field for element {}lrulimit
  private java.lang.String _f_Lrulimit;
  /**
   * Set method for element {}lrulimit
   */
  public void setLrulimit(java.lang.String _Lrulimit) {
    this._f_Lrulimit = _Lrulimit;
  }
  /**
   * Get method for element {}lrulimit
   */
  public java.lang.String getLrulimit() {
    return this._f_Lrulimit;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof PassivationType)) return false;
    PassivationType typed = (PassivationType) object;
    if (this._f_PassiveTimeout != null) {
      if (typed._f_PassiveTimeout == null) return false;
      if (!this._f_PassiveTimeout.equals(typed._f_PassiveTimeout)) return false;
    } else {
      if (typed._f_PassiveTimeout != null) return false;
    }
    if (this._f_Lrulimit != null) {
      if (typed._f_Lrulimit == null) return false;
      if (!this._f_Lrulimit.equals(typed._f_Lrulimit)) return false;
    } else {
      if (typed._f_Lrulimit != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    if (this._f_PassiveTimeout != null) {
      result+= this._f_PassiveTimeout.hashCode();
    }
    if (this._f_Lrulimit != null) {
      result+= this._f_Lrulimit.hashCode();
    }
    return result;
  }

  public java.lang.String get__ID() {
    return java.lang.String.valueOf(super.hashCode());
  }
}
