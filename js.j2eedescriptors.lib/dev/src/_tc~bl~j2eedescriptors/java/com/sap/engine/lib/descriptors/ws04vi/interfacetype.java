/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu May 05 11:42:02 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.ws04vi;

import java.io.Serializable;

/**
 * Enumeration Java representation.
 * Represents type {http://xml.sap.com/2002/10/metamodel/vi}InterfaceType
 */
public class InterfaceType implements Serializable {

  public static final java.lang.String _bapi = "bapi";
  public static final java.lang.String _ejb = "ejb";
  public static final java.lang.String _idoc = "idoc";
  public static final java.lang.String _javaclass = "javaclass";
  public static final java.lang.String _jms = "jms";
  public static final java.lang.String _par = "par";
  public static final java.lang.String _rfc = "rfc";

  public static final InterfaceType bapi = new InterfaceType(_bapi);
  public static final InterfaceType ejb = new InterfaceType(_ejb);
  public static final InterfaceType idoc = new InterfaceType(_idoc);
  public static final InterfaceType javaclass = new InterfaceType(_javaclass);
  public static final InterfaceType jms = new InterfaceType(_jms);
  public static final InterfaceType par = new InterfaceType(_par);
  public static final InterfaceType rfc = new InterfaceType(_rfc);

  //  Enumeration Content
  protected java.lang.String _value;

  public InterfaceType(java.lang.String _value) {
    if (_bapi.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_ejb.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_idoc.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_javaclass.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_jms.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_par.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_rfc.equals(_value)) {
      this._value = _value;
      return;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+_value+"] passed.");
  }

  public java.lang.String getValue() {
    return _value;
  }

  public static InterfaceType fromValue(java.lang.String value) {
    if (_bapi.equals(value)) {
      return bapi;
    }
    if (_ejb.equals(value)) {
      return ejb;
    }
    if (_idoc.equals(value)) {
      return idoc;
    }
    if (_javaclass.equals(value)) {
      return javaclass;
    }
    if (_jms.equals(value)) {
      return jms;
    }
    if (_par.equals(value)) {
      return par;
    }
    if (_rfc.equals(value)) {
      return rfc;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public static InterfaceType fromString(String value) {
    if ("bapi".equals(value)) {
      return bapi;
    }
    if ("ejb".equals(value)) {
      return ejb;
    }
    if ("idoc".equals(value)) {
      return idoc;
    }
    if ("javaclass".equals(value)) {
      return javaclass;
    }
    if ("jms".equals(value)) {
      return jms;
    }
    if ("par".equals(value)) {
      return par;
    }
    if ("rfc".equals(value)) {
      return rfc;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public java.lang.String toString() {
    if (_bapi.equals(_value)) {
      return "bapi";
    }
    if (_ejb.equals(_value)) {
      return "ejb";
    }
    if (_idoc.equals(_value)) {
      return "idoc";
    }
    if (_javaclass.equals(_value)) {
      return "javaclass";
    }
    if (_jms.equals(_value)) {
      return "jms";
    }
    if (_par.equals(_value)) {
      return "par";
    }
    if (_rfc.equals(_value)) {
      return "rfc";
    }
    return java.lang.String.valueOf(_value);
  }

  public boolean equals(java.lang.Object obj) {
    if (obj != null) {
      if (obj instanceof InterfaceType) {
        if (_value.equals(((InterfaceType)obj)._value)) {
          return true;
        }
      }
    }
    return false;
  }

  public int hashCode() {
    return this._value.hashCode();
  }

}
