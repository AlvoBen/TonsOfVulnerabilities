/*
 * Generated by SAP SchemaToJava Generator NW05 on Mon Jun 26 13:55:46 EEST 2006
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors5.webservices;

/**
 * Schema complexType Java representation.
 * Represents type {http://java.sun.com/xml/ns/javaee}descriptionType
 */
public  class DescriptionType extends com.sap.engine.lib.descriptors5.webservices.XsdStringType implements java.io.Serializable {

  // Attribute field for attribute {http://www.w3.org/XML/1998/namespace}lang
  private java.lang.String _a_Lang;
  /**
   * Set method for attribute {http://www.w3.org/XML/1998/namespace}lang
   */
  public void setLang(java.lang.String _Lang) {
    this._a_Lang = _Lang;
  }
  /**
   * Get method for attribute {http://www.w3.org/XML/1998/namespace}lang
   */
  public java.lang.String getLang() {
    return _a_Lang;
  }

  // Attribute field for attribute {}id
  private java.lang.String _a_Id;
  /**
   * Set method for attribute {}id
   */
  public void setId(java.lang.String _Id) {
    this._a_Id = _Id;
  }
  /**
   * Get method for attribute {}id
   */
  public java.lang.String getId() {
    return _a_Id;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (super.equals(object) == false) return false;
    if (object == null) return false;
    if (!(object instanceof DescriptionType)) return false;
    DescriptionType typed = (DescriptionType) object;
    if (this._a_Lang != null) {
      if (typed._a_Lang == null) return false;
      if (!this._a_Lang.equals(typed._a_Lang)) return false;
    } else {
      if (typed._a_Lang != null) return false;
    }
    if (this._a_Id != null) {
      if (typed._a_Id == null) return false;
      if (!this._a_Id.equals(typed._a_Id)) return false;
    } else {
      if (typed._a_Id != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = super.hashCode();
    if (this._a_Lang != null) {
      result+= this._a_Lang.hashCode();
    }
    if (this._a_Id != null) {
      result+= this._a_Id.hashCode();
    }
    return result;
  }
}
