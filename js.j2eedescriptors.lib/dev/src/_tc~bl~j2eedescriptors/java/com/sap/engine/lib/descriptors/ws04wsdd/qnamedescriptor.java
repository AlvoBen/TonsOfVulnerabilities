/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu May 05 12:55:14 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.ws04wsdd;

/**
 * Schema complexType Java representation.
 * Represents type {http://www.sap.com/webas/630/soap/java/descriptors/ws-deployment-descriptor}QNameDescriptor
 */
public  class QNameDescriptor implements java.io.Serializable,java.lang.Cloneable {

  // Element field for element {}namespaceURI
  private java.lang.String _f_NamespaceURI;
  /**
   * Set method for element {}namespaceURI
   */
  public void setNamespaceURI(java.lang.String _NamespaceURI) {
    this._f_NamespaceURI = _NamespaceURI;
  }
  /**
   * Get method for element {}namespaceURI
   */
  public java.lang.String getNamespaceURI() {
    return this._f_NamespaceURI;
  }

  // Element field for element {}localName
  private java.lang.String _f_LocalName;
  /**
   * Set method for element {}localName
   */
  public void setLocalName(java.lang.String _LocalName) {
    this._f_LocalName = _LocalName;
  }
  /**
   * Get method for element {}localName
   */
  public java.lang.String getLocalName() {
    return this._f_LocalName;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof QNameDescriptor)) return false;
    QNameDescriptor typed = (QNameDescriptor) object;
    if (this._f_NamespaceURI != null) {
      if (typed._f_NamespaceURI == null) return false;
      if (!this._f_NamespaceURI.equals(typed._f_NamespaceURI)) return false;
    } else {
      if (typed._f_NamespaceURI != null) return false;
    }
    if (this._f_LocalName != null) {
      if (typed._f_LocalName == null) return false;
      if (!this._f_LocalName.equals(typed._f_LocalName)) return false;
    } else {
      if (typed._f_LocalName != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    if (this._f_NamespaceURI != null) {
      result+= this._f_NamespaceURI.hashCode();
    }
    if (this._f_LocalName != null) {
      result+= this._f_LocalName.hashCode();
    }
    return result;
  }
}
