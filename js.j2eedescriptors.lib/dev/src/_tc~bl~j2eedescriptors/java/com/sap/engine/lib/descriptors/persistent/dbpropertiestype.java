/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu Mar 31 10:07:41 EEST 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.lib.descriptors.persistent;

/**
 * Schema complexType Java representation.
 * Represents type {}db-propertiesType
 */
public  class DbPropertiesType implements java.io.Serializable,java.lang.Cloneable,com.sap.engine.services.webservices.jaxrpc.encoding.IdenticObject {

  // Element field for element {}data-source-name
  private java.lang.String _f_DataSourceName;
  /**
   * Set method for element {}data-source-name
   */
  public void setDataSourceName(java.lang.String _DataSourceName) {
    this._f_DataSourceName = _DataSourceName;
  }
  /**
   * Get method for element {}data-source-name
   */
  public java.lang.String getDataSourceName() {
    return this._f_DataSourceName;
  }

  // Element field for element {}for-native-use-only
  private com.sap.engine.lib.descriptors.persistent.ForNativeUseOnly _f_ForNativeUseOnly;
  /**
   * Set method for element {}for-native-use-only
   */
  public void setForNativeUseOnly(com.sap.engine.lib.descriptors.persistent.ForNativeUseOnly _ForNativeUseOnly) {
    this._f_ForNativeUseOnly = _ForNativeUseOnly;
  }
  /**
   * Get method for element {}for-native-use-only
   */
  public com.sap.engine.lib.descriptors.persistent.ForNativeUseOnly getForNativeUseOnly() {
    return this._f_ForNativeUseOnly;
  }

  // Element field for element {}database-vendor
  private com.sap.engine.lib.descriptors.persistent.DatabaseVendorType _f_DatabaseVendor;
  /**
   * Set method for element {}database-vendor
   */
  public void setDatabaseVendor(com.sap.engine.lib.descriptors.persistent.DatabaseVendorType _DatabaseVendor) {
    this._f_DatabaseVendor = _DatabaseVendor;
  }
  /**
   * Get method for element {}database-vendor
   */
  public com.sap.engine.lib.descriptors.persistent.DatabaseVendorType getDatabaseVendor() {
    return this._f_DatabaseVendor;
  }

  // Element field for element {}TargetSQL
  private com.sap.engine.lib.descriptors.persistent.TargetSQLType _f_TargetSQL;
  /**
   * Set method for element {}TargetSQL
   */
  public void setTargetSQL(com.sap.engine.lib.descriptors.persistent.TargetSQLType _TargetSQL) {
    this._f_TargetSQL = _TargetSQL;
  }
  /**
   * Get method for element {}TargetSQL
   */
  public com.sap.engine.lib.descriptors.persistent.TargetSQLType getTargetSQL() {
    return this._f_TargetSQL;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof DbPropertiesType)) return false;
    DbPropertiesType typed = (DbPropertiesType) object;
    if (this._f_DataSourceName != null) {
      if (typed._f_DataSourceName == null) return false;
      if (!this._f_DataSourceName.equals(typed._f_DataSourceName)) return false;
    } else {
      if (typed._f_DataSourceName != null) return false;
    }
    if (this._f_ForNativeUseOnly != null) {
      if (typed._f_ForNativeUseOnly == null) return false;
      if (!this._f_ForNativeUseOnly.equals(typed._f_ForNativeUseOnly)) return false;
    } else {
      if (typed._f_ForNativeUseOnly != null) return false;
    }
    if (this._f_DatabaseVendor != null) {
      if (typed._f_DatabaseVendor == null) return false;
      if (!this._f_DatabaseVendor.equals(typed._f_DatabaseVendor)) return false;
    } else {
      if (typed._f_DatabaseVendor != null) return false;
    }
    if (this._f_TargetSQL != null) {
      if (typed._f_TargetSQL == null) return false;
      if (!this._f_TargetSQL.equals(typed._f_TargetSQL)) return false;
    } else {
      if (typed._f_TargetSQL != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    if (this._f_DataSourceName != null) {
      result+= this._f_DataSourceName.hashCode();
    }
    if (this._f_ForNativeUseOnly != null) {
      result+= this._f_ForNativeUseOnly.hashCode();
    }
    if (this._f_DatabaseVendor != null) {
      result+= this._f_DatabaseVendor.hashCode();
    }
    if (this._f_TargetSQL != null) {
      result+= this._f_TargetSQL.hashCode();
    }
    return result;
  }

  public java.lang.String get__ID() {
    return java.lang.String.valueOf(super.hashCode());
  }
}
