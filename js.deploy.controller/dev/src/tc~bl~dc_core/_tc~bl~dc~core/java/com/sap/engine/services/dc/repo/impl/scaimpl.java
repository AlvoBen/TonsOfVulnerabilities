package com.sap.engine.services.dc.repo.impl;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import com.sap.engine.services.dc.repo.Sca;
import com.sap.engine.services.dc.repo.SdaId;
import com.sap.engine.services.dc.repo.Sdu;
import com.sap.engine.services.dc.repo.SduId;
import com.sap.engine.services.dc.repo.SduVisitor;
import com.sap.engine.services.dc.repo.Version;

/**
 * 
 * Title: J2EE Deployment Team Description:
 * 
 * Copyright: Copyright (c) 2003 Company: SAP AG Date: 2004-9-1
 * 
 * @author Dimitar Dimitrov
 * @version 1.0
 * @since 7.0
 * 
 */
final class ScaImpl extends SduImpl implements Sca {

	// Due to operation removeSdaId the serialVersionUID is invalidated!
	// It is not the one which will be generated by the Java serialver!
	// Because of the incompatibility issues it could not be changed!
	private static final long serialVersionUID = 8085636167633040169L;

	private final Set sdaIds;// $JL-SER$
	private final Set origSdaIds;// $JL-SER$
	private final SduId id;

	ScaImpl(SduId sduId, String location, Version version,
			String componentElementXML) {
		this(sduId, location, version, componentElementXML, new HashSet(4),
				new HashSet(4));
	}

	ScaImpl(SduId sduId, String location, Version version,
			String componentElementXML, Set sdaIds, Set origSdaIds) {
		this(sduId, location, version, componentElementXML, sdaIds, origSdaIds,
				null);
	}

	ScaImpl(SduId sduId, String location, Version version,
			String componentElementXML, Set sdaIds, Set origSdaIds,
			Map properties) {
		super(sduId, location, version, null, componentElementXML, properties);

		this.sdaIds = sdaIds != null ? sdaIds : new HashSet(4);
		this.origSdaIds = origSdaIds != null ? origSdaIds : new HashSet(4);

		this.id = sduId;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.sap.engine.services.dc.repo.Sca#getSdas()
	 */
	public Set getSdaIds() {
		return this.sdaIds;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.sap.engine.services.dc.repo.Sca#getOrigSdaIds()
	 */
	public Set getOrigSdaIds() {
		return this.origSdaIds;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.sap.engine.services.dc.repo.Sdu#getId()
	 */
	public SduId getId() {
		return this.id;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.sap.engine.services.dc.repo.Sca#addSda(com.sap.engine.services.dc
	 * .repo.Sda)
	 */
	public void addSdaId(SdaId sdaId) {
		this.sdaIds.add(sdaId);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.sap.engine.services.dc.repo.Sca#removeSdaId(com.sap.engine.services
	 * .dc.repo.SdaId)
	 */
	public void removeSdaId(SdaId sdaId) {
		this.sdaIds.remove(sdaId);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.sap.engine.services.dc.repo.Sca#addOrigSdaId(com.sap.engine.services
	 * .dc.repo.SdaId)
	 */
	public void addOrigSdaId(SdaId sdaId) {
		this.origSdaIds.add(sdaId);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.sap.engine.services.dc.repo.Sdu#accept(com.sap.engine.services.dc
	 * .repo.SduVisitor)
	 */
	public void accept(SduVisitor visitor) {
		visitor.visit(this);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.sap.engine.services.dc.repo.impl.SduImpl#isComparable(com.sap.engine
	 * .services.dc.repo.Sdu)
	 */
	public boolean isComparable(Sdu otherSdu) {
		paramCheck(otherSdu, "isComparable", "otherSdu");

		if (!this.getId().equals(otherSdu.getId())) {
			final String errText = "[ERROR CODE DPL.DC.3422] ScaImpl.isComparable(Sdu): "
					+ "other SDU "
					+ otherSdu
					+ " has different SDU ID than "
					+ this;
			// TODO: log fatal type: errText
			throw new IllegalArgumentException(errText);
		}

		return true;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.sap.engine.services.dc.repo.impl.SduImpl#isSameSdu(com.sap.engine
	 * .services.dc.repo.Sdu)
	 */
	public boolean isSameSdu(Sdu otherSdu) {
		paramCheck(otherSdu, "isSameSdu", "otherSdu");

		if (!this.isComparable(otherSdu)) {
			final String errText = "[ERROR CODE DPL.DC.3423] ScaImpl.isSameSdu(Sdu): "
					+ "other SDU "
					+ otherSdu
					+ " has different SDU ID than "
					+ this;
			// TODO: log fatal type: errText
			throw new IllegalArgumentException(errText);
		}

		if (!this.getLocation().equals(otherSdu.getLocation())) {
			return false;
		}

		if (!this.getVersion().equals(otherSdu.getVersion())) {
			return false;
		}

		return true;
	}

	public String toString() {
		return "name: [" + getName() + "], vendor: [" + getVendor()
				+ "], location: [" + getLocation() + "], version: ["
				+ getVersion() + "], currently deployed sda ids: ["
				+ getSdaIds() + "], originally deployed sda ids: ["
				+ getOrigSdaIds() + "].";
	}

}
